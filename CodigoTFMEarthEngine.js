var Landsat8 = ee.ImageCollection("LANDSAT/LC08/C01/T1"),
    Landsat7 = ee.ImageCollection("LANDSAT/LE07/C01/T1"),
    Sentinel2_1C = ee.ImageCollection("COPERNICUS/S2"),
    Sentinel2_2A = ee.ImageCollection("COPERNICUS/S2_SR"),
    Sentinel1 = ee.ImageCollection("COPERNICUS/S1_GRD"),
    FIRMS = ee.ImageCollection("FIRMS"),
    Modis_Burned_Area = ee.ImageCollection("MODIS/006/MCD64A1"),
    AreaMedir = /* color: #d63000 */ee.Geometry.Polygon(
        [[[46.08843558998026, -13.555000302489617],
          [43.215768923598894, -13.549660567845617],
          [43.20480258756944, -15.442690273532058],
          [46.09940192469573, -15.447984506987428]]]),
    Media = /* color: #05d610 */ee.Geometry.MultiPoint(),
    ZonaIncendio1 = /* color: #ce00d6 */ee.Geometry.Point([38.8371595361775, -15.046445196983209]),
    ZonaIncendio2 = /* color: #98ff00 */ee.Geometry.Point([39.43866100102125, -15.025224801962565]),
    ZonaIncendio3 = /* color: #0b4a8b */ee.Geometry.Point([39.43591441899, -14.006879716882503]),
    ZonaIncendio4 = /* color: #ffc82d */ee.Geometry.Point([38.76849498539625, -13.921586571325161]),
    ZonaIncendio5 = /* color: #d63000 */ee.Geometry.Point([37.759991146854354, -15.004614032173926]),
    ZonaIncendio6 = /* color: #000000 */ee.Geometry.Point([37.710552670291854, -13.882209389768244]),
    FreeFlowingRivers = ee.FeatureCollection("WWF/HydroSHEDS/v1/FreeFlowingRivers"),
    S2_CloudProbability = ee.ImageCollection("COPERNICUS/S2_CLOUD_PROBABILITY"),
    Incendio = /* color: #ff0000 */ee.Feature(
        ee.Geometry({
          "type": "GeometryCollection",
          "geometries": [
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.30459390455859,
                    -13.849757680959414
                  ],
                  [
                    39.304669006411004,
                    -13.85045561315369
                  ],
                  [
                    39.305366380754876,
                    -13.850538948200988
                  ],
                  [
                    39.306911333147454,
                    -13.850257692296594
                  ],
                  [
                    39.3068469601311,
                    -13.849413922541052
                  ],
                  [
                    39.30653582388537,
                    -13.848549315786528
                  ],
                  [
                    39.30592428022997,
                    -13.8492264177349
                  ],
                  [
                    39.30601011091845,
                    -13.849851433167084
                  ],
                  [
                    39.30554877096789,
                    -13.850049354370169
                  ],
                  [
                    39.30550585562365,
                    -13.850361861189764
                  ],
                  [
                    39.30523763472216,
                    -13.850309776749013
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.29700861746447,
                    -13.856205661297961
                  ],
                  [
                    39.297673805300164,
                    -13.856726491962698
                  ],
                  [
                    39.29851065451281,
                    -13.856768158365425
                  ],
                  [
                    39.29808150107043,
                    -13.856059828502554
                  ],
                  [
                    39.297909839693475,
                    -13.855466079747474
                  ],
                  [
                    39.29703007513659,
                    -13.855403579790227
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.29658371522935,
                    -13.857136119361332
                  ],
                  [
                    39.29632622316392,
                    -13.857656947939665
                  ],
                  [
                    39.297291818409285,
                    -13.857917361790866
                  ],
                  [
                    39.29772097185167,
                    -13.857875695594291
                  ],
                  [
                    39.29771024301561,
                    -13.857448616648487
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.29415484881084,
                    -13.858558813379343
                  ],
                  [
                    39.295066799875904,
                    -13.858444231637248
                  ],
                  [
                    39.29488440966289,
                    -13.85754840879592
                  ],
                  [
                    39.29410120463054,
                    -13.857558825360432
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.289820399042775,
                    -13.862444142626337
                  ],
                  [
                    39.29097911333721,
                    -13.862121235702173
                  ],
                  [
                    39.292202200648,
                    -13.86201707208244
                  ],
                  [
                    39.29186960673015,
                    -13.861475420506563
                  ],
                  [
                    39.2906357905833,
                    -13.861485836894923
                  ],
                  [
                    39.28963800882976,
                    -13.861912908415977
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.27589276919795,
                    -13.864591971816944
                  ],
                  [
                    39.27670816073848,
                    -13.866821038353256
                  ],
                  [
                    39.27900413165523,
                    -13.86671687684237
                  ],
                  [
                    39.27977660785152,
                    -13.865258610781703
                  ],
                  [
                    39.277587925295364,
                    -13.864425311776614
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.17982677112056,
                    -13.928205688489648
                  ],
                  [
                    39.17982677112056,
                    -13.928892971071226
                  ],
                  [
                    39.1808781970544,
                    -13.928663877104547
                  ],
                  [
                    39.181436096529495,
                    -13.928934624495305
                  ],
                  [
                    39.18210128436519,
                    -13.928663877104547
                  ],
                  [
                    39.18053487430049,
                    -13.92751840386352
                  ],
                  [
                    39.17924741397334,
                    -13.927372615952722
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.20464812254167,
                    -13.938548153589323
                  ],
                  [
                    39.20595704054094,
                    -13.93773594427564
                  ],
                  [
                    39.205012902967695,
                    -13.935903256352358
                  ],
                  [
                    39.20316754316545,
                    -13.936652994079253
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.48798199069433,
                    -13.6979283006136
                  ],
                  [
                    39.48770304095678,
                    -13.700721831085263
                  ],
                  [
                    39.48804636371069,
                    -13.700242346872074
                  ],
                  [
                    39.48851843249731,
                    -13.700513359808422
                  ],
                  [
                    39.48924799334936,
                    -13.700284041190324
                  ],
                  [
                    39.48924799334936,
                    -13.697886605877502
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.4952883280509,
                    -13.703369400213282
                  ],
                  [
                    39.4942798174613,
                    -13.704192850671458
                  ],
                  [
                    39.495084480165765,
                    -13.704818254154517
                  ],
                  [
                    39.49552436244421,
                    -13.703609139252057
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.47465618845111,
                    -13.705746469980436
                  ],
                  [
                    39.475675427876766,
                    -13.70525657266211
                  ],
                  [
                    39.47551449533587,
                    -13.704464396113613
                  ],
                  [
                    39.47430213686114,
                    -13.705246149303804
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.523097998447284,
                    -13.737347452229791
                  ],
                  [
                    39.52578020746218,
                    -13.73780601682016
                  ],
                  [
                    39.52590895349489,
                    -13.736180192860331
                  ],
                  [
                    39.52425671274172,
                    -13.735429808767515
                  ],
                  [
                    39.522561556644305,
                    -13.735575716973697
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.521295553989276,
                    -13.737232810942015
                  ],
                  [
                    39.52191782648073,
                    -13.736993106249981
                  ],
                  [
                    39.52267957384096,
                    -13.737118169598157
                  ],
                  [
                    39.52246499711977,
                    -13.736159348890197
                  ],
                  [
                    39.52135992700563,
                    -13.736263568722354
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            }
          ],
          "coordinates": []
        }),
        {
          "Clase": 0,
          "system:index": "0"
        }),
    Vegetacion = /* color: #10bc00 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[39.54181525989248, -13.794165847415782],
               [39.54180989547445, -13.792868628383957],
               [39.54137001319601, -13.79283737000505],
               [39.54135391994192, -13.794165847415782]]],
             [[[39.542088845212, -13.792660239112273],
               [39.54239998145773, -13.79266544884635],
               [39.542469718892114, -13.790545077476747],
               [39.542190769154566, -13.790503399222395]]],
             [[[39.54301688953115, -13.792681078047819],
               [39.54303298278524, -13.79114420156053],
               [39.542684295613306, -13.79116504063143],
               [39.542678931195276, -13.792691497514893]]],
             [[[39.54311675945141, -13.794681427530307],
               [39.54407162586071, -13.794686637219243],
               [39.54407699027874, -13.794233393846358],
               [39.543181132467765, -13.794243813244135]]],
             [[[39.52734418876609, -13.807640178005697],
               [39.5274729347988, -13.807634968606072],
               [39.52746220596274, -13.807181750393232],
               [39.527113518790806, -13.807176540983367],
               [39.52720471389731, -13.807285938566123],
               [39.52731200225791, -13.807301566788047]]],
             [[[39.527140340880955, -13.806555179406601],
               [39.527354917602146, -13.806555179406601],
               [39.52733345993003, -13.806357221217835],
               [39.527167162971104, -13.806367640074065]]],
             [[[39.52631690271338, -13.804932438243227],
               [39.526619992332066, -13.804911600402047],
               [39.526619992332066, -13.804734478676759],
               [39.5263195849224, -13.804747502337605]]],
             [[[39.54298896937521, -13.904698685628613],
               [39.54348249583395, -13.904771586743282],
               [39.543557597686366, -13.904240449524902],
               [39.54277439265402, -13.904407080940317]]],
             [[[39.52874816662897, -13.905683924233127],
               [39.52878035313715, -13.905814104224715],
               [39.52908612496485, -13.905840140214258],
               [39.52857114083399, -13.905371491954526],
               [39.52826536900629, -13.905652681024245]]],
             [[[39.5285792854104, -13.90671494775981],
               [39.52880995538568, -13.906610804177799],
               [39.52876962430109, -13.906438967165025],
               [39.52846921689142, -13.906480624634376],
               [39.52853358990778, -13.90671494775981]]],
             [[[39.51774412552337, -13.90944612561743],
               [39.51804453293304, -13.909456539850124],
               [39.518173278965754, -13.909352397502081],
               [39.5178031341217, -13.909097248551255],
               [39.51753491322021, -13.909321154788525]]],
             [[[39.48123940213101, -14.04547447405662],
               [39.48199042065518, -14.04543284173094],
               [39.481883132294584, -14.044974885649117],
               [39.481099927262235, -14.045183047618007]]]]),
        {
          "Clase": 1,
          "system:index": "0"
        }),
    ZonaSeca = /* color: #ff9300 */ee.Feature(
        ee.Geometry({
          "type": "GeometryCollection",
          "geometries": [
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.43420361358134,
                    -13.734672693053843
                  ],
                  [
                    39.435276497187296,
                    -13.737132284334903
                  ],
                  [
                    39.43913887816874,
                    -13.737507473956411
                  ],
                  [
                    39.44098423797099,
                    -13.735089574748452
                  ],
                  [
                    39.439825523676554,
                    -13.732838404790453
                  ],
                  [
                    39.43798016387431,
                    -13.732338141864233
                  ],
                  [
                    39.43566273528544,
                    -13.73271333915897
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.443559158625284,
                    -13.73800772585075
                  ],
                  [
                    39.44823693114726,
                    -13.736673718426347
                  ],
                  [
                    39.44639157134501,
                    -13.734505940168415
                  ],
                  [
                    39.44248627501933,
                    -13.736006711866871
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.440812576594034,
                    -13.72320815600197
                  ],
                  [
                    39.440812576594034,
                    -13.726585041502556
                  ],
                  [
                    39.44566201049296,
                    -13.726376593188009
                  ],
                  [
                    39.44343041259257,
                    -13.723625058076527
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.79768849499778,
                    -13.775901760415724
                  ],
                  [
                    39.799254905062476,
                    -13.775297387109878
                  ],
                  [
                    39.80034924634055,
                    -13.774213679337244
                  ],
                  [
                    39.79869700558738,
                    -13.772504745332428
                  ],
                  [
                    39.79665852673606,
                    -13.774067795214872
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.53291916813995,
                    -13.690005692467471
                  ],
                  [
                    39.5335414406314,
                    -13.690610285680368
                  ],
                  [
                    39.5340993401065,
                    -13.690443501501004
                  ],
                  [
                    39.53433537449981,
                    -13.690943853684301
                  ],
                  [
                    39.53504347767974,
                    -13.690506045582124
                  ],
                  [
                    39.53444266286041,
                    -13.689421945821827
                  ],
                  [
                    39.53294062581207,
                    -13.689526186400514
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            }
          ],
          "coordinates": []
        }),
        {
          "Clase": 2,
          "system:index": "0"
        }),
    Roca = /* color: #d6c2c2 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[39.94261139371789, -13.697589652419824],
               [39.94366281965173, -13.698131684097111],
               [39.94464987256921, -13.696755755091296],
               [39.944242176798944, -13.696463890327502],
               [39.94387739637292, -13.697172704125304],
               [39.94314783552087, -13.696755755091296]]],
             [[[39.94261139371789, -13.69975777162981],
               [39.94336241224206, -13.69965353558695],
               [39.94312637784875, -13.698611172615957],
               [39.94235390165246, -13.698694561823741]]],
             [[[39.942761597422724, -13.700862670842058],
               [39.94319075086511, -13.700675046813654],
               [39.942997631816034, -13.699966243576856],
               [39.9423968169967, -13.700153868171096]]],
             [[[39.91657687745559, -13.698069142044282],
               [39.917971626143334, -13.699278285449903],
               [39.92061091981399, -13.697985752614638],
               [39.92065383515823, -13.696734907620183],
               [39.91786433778274, -13.696255415274365]]],
             [[[39.89550621695764, -13.687508670755886],
               [39.89981920905359, -13.683881040344156],
               [39.89935786910303, -13.683151337815522],
               [39.89988358206995, -13.682015082230663],
               [39.89675076194055, -13.68368297845296],
               [39.89387543387659, -13.686226497432012]]],
             [[[39.90173967070825, -13.681306222756902],
               [39.90249068923242, -13.680785001193613],
               [39.902930571510865, -13.679909346369005],
               [39.902394129707886, -13.679763403581543],
               [39.9020186204458, -13.68050354106953],
               [39.90176112838037, -13.680482692158073],
               [39.90149290747888, -13.680618210049598],
               [39.901407076790406, -13.68086839672131],
               [39.901171042397095, -13.680899670036572]]],
             [[[39.86943994462773, -13.687935559762984],
               [39.87107072770878, -13.687080779874483],
               [39.87062011659428, -13.685287816848708],
               [39.86913953721806, -13.68624684528302]]]]),
        {
          "Clase": 3,
          "system:index": "0"
        }),
    ValidacionRoca = /* color: #adadad */ee.Feature(
        ee.Geometry({
          "type": "GeometryCollection",
          "geometries": [
            {
              "type": "Point",
              "coordinates": [
                38.46295336986291,
                -14.63596235818363
              ]
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.3665455419406,
                    -13.867784446167695
                  ],
                  [
                    39.36804757898894,
                    -13.869950986001552
                  ],
                  [
                    39.37139497583953,
                    -13.867992768184502
                  ],
                  [
                    39.373454912362966,
                    -13.866784497884154
                  ],
                  [
                    39.37293992823211,
                    -13.866326186814412
                  ],
                  [
                    39.369721277414236,
                    -13.867117814457362
                  ],
                  [
                    39.36757551020232,
                    -13.867451130551885
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.37804685419646,
                    -13.870867592918897
                  ],
                  [
                    39.38229547327605,
                    -13.870117642074025
                  ],
                  [
                    39.38409791773406,
                    -13.869534345296708
                  ],
                  [
                    39.38238130396453,
                    -13.867992768184502
                  ],
                  [
                    39.37890516108123,
                    -13.868867718612986
                  ],
                  [
                    39.37714563196746,
                    -13.870825929046658
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    39.402980669198904,
                    -13.863076318725144
                  ],
                  [
                    39.40066324061004,
                    -13.865534556471502
                  ],
                  [
                    39.40551267450896,
                    -13.8669094916552
                  ],
                  [
                    39.40731511896697,
                    -13.86557622129371
                  ],
                  [
                    39.404697282968435,
                    -13.862867992295953
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            }
          ],
          "coordinates": []
        }),
        {
          "Clase": 3,
          "system:index": "0"
        }),
    ValidacionIncendio = /* color: #952100 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[39.44550425965397, -13.856053506074538],
               [39.44533259827702, -13.852928495516416],
               [39.4422856088361, -13.852678492855846],
               [39.44009692627995, -13.853636834927146],
               [39.44078357178776, -13.854886840383584],
               [39.43876655060856, -13.855011840559303],
               [39.43713576752751, -13.856053506074538],
               [39.43932445008366, -13.857220165905876],
               [39.43760783631413, -13.858761814551888],
               [39.438981127329754, -13.858761814551888],
               [39.440697741099285, -13.857303498526731],
               [39.44254310090153, -13.856553503862632],
               [39.44361598450749, -13.857345164825949]]],
             [[[39.50568027309095, -13.86975650628627],
               [39.50743980220472, -13.869673178135317],
               [39.50692481807386, -13.868131601945358],
               [39.506624410664195, -13.865965045126705],
               [39.505594442402476, -13.866173368776547],
               [39.50417823604261, -13.869173208601172]]]]),
        {
          "Clase": 0,
          "system:index": "0"
        }),
    ValidacionVegetacion = /* color: #5f9f00 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[39.49979009081175, -13.889709181599454],
               [39.50011195589354, -13.889084273512328],
               [39.500648397696516, -13.888501024443773],
               [39.50105609346678, -13.888501024443773],
               [39.500197786582014, -13.8876678089421],
               [39.49876012255003, -13.889709181599454]]],
             [[[39.507026184030885, -13.87944640986405],
               [39.50734804911267, -13.87882147410826],
               [39.507004726358765, -13.877696585503733],
               [39.50657557291638, -13.87640504000681],
               [39.505760181375855, -13.875675938566317],
               [39.505502689310426, -13.87684249977096],
               [39.50672577662122, -13.878883967759624]]],
             [[[39.53823118001276, -13.908852198848257],
               [39.53969030171686, -13.908310656711997],
               [39.53999070912653, -13.907415026551277],
               [39.53915385991388, -13.907185911302147],
               [39.53750161916071, -13.908977169930473]]],
             [[[39.532308862507875, -13.904894746334383],
               [39.53250198155695, -13.90462397079396],
               [39.53187970906549, -13.90437402386008],
               [39.531557843983705, -13.905415467637082]]],
             [[[39.53795902378061, -13.912963020520772],
               [39.53798048145273, -13.912400659808638],
               [39.53843109256723, -13.911859125978802],
               [39.53819505817392, -13.911609186860515],
               [39.537079259223724, -13.912234034149872],
               [39.537551328010345, -13.913025504959952]]]]),
        {
          "Clase": 1,
          "system:index": "0"
        }),
    ValidacionZonaSeca = /* color: #8b7000 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[39.55439863358643, -13.916544235607246],
               [39.558465858790264, -13.920096319862605],
               [39.558937927576885, -13.916159887586138]]],
             [[[39.55891298704508, -13.896357280076602],
               [39.55796884947184, -13.893732730103794],
               [39.554406875900064, -13.895357455022431],
               [39.55831217222575, -13.902189506852142]]]]),
        {
          "Clase": 2,
          "system:index": "0"
        });

var PaletaBAI = [
            '#000000' ,
            '#4C0099' ,
            '#0000CC' ,
            '#FF0000' ,
            '#FF8000' ,
            '#FFFF00' ,
            '#FFFFFF'
            ];

var PaletaClasificar = [
                      '#FF0000' ,
                      '#006600' ,
                      '#FF8000' ,
                      '#808080'
                      ];




var GeometriasIncendiosT1_13 = /* color: #ffffff */ee.Geometry.MultiPolygon(
        [[[[38.32006287727343, -15.295937706436582],
           [38.321908237075675, -15.295171895382811],
           [38.32259488258349, -15.292501883600258],
           [38.32386088523852, -15.291529080153635],
           [38.32295966300951, -15.290390687407347],
           [38.321629287338126, -15.290970233578188],
           [38.32055640373217, -15.292108623176288],
           [38.320406200027335, -15.294261197512961]]],
         [[[38.31599608508794, -15.290756263933792],
           [38.31646815387456, -15.290549283131146],
           [38.316811476628466, -15.289721357876388],
           [38.31702605334966, -15.288872731096035],
           [38.31700459567754, -15.288251782494523],
           [38.31663981525151, -15.288375972362005],
           [38.31638232318608, -15.289224601153665],
           [38.315802966038866, -15.289928339496694]]],
         [[[38.55813405037592, -15.329146690763992],
           [38.55933568001459, -15.32633225057985],
           [38.55667492867182, -15.319213203355565],
           [38.55470082283686, -15.320454915087797],
           [38.55229756355951, -15.323269434386802],
           [38.55221173287104, -15.325918359121626],
           [38.55478665352533, -15.328318918172782]]],
         [[[38.564228029257755, -15.333037178028977],
           [38.56328389168451, -15.331133331607688],
           [38.56208226204584, -15.328732804878152],
           [38.55933568001459, -15.331216107899694],
           [38.55907818794916, -15.332706075549472],
           [38.56311223030756, -15.334444357713872]]],
         [[[38.47514399700118, -14.627614771193647],
           [38.47754725627853, -14.624292797774325],
           [38.48029383830978, -14.620804671593985],
           [38.482868758964074, -14.618811431760692],
           [38.486301986503136, -14.614991004860572],
           [38.49076518230392, -14.615323218532604],
           [38.49162348918868, -14.610672181419533],
           [38.49042185955001, -14.606353273114474],
           [38.487846938895714, -14.595887874260404],
           [38.48321208171798, -14.599708633140933],
           [38.4842420499797, -14.604692131943528],
           [38.4842420499797, -14.612997712280617],
           [38.479607192801964, -14.613828253052976],
           [38.47565898113204, -14.612831603749473],
           [38.47377070598556, -14.615157111759379],
           [38.47548731975509, -14.617648700171909],
           [38.478062240409386, -14.619808053938325],
           [38.473084060477746, -14.624458897639004],
           [38.47291239910079, -14.62861135341756]]]]);

var GeometriasIncendiosT1_12 = /* color: #ffffff */ee.Geometry.MultiPolygon(
        [[[[38.80017663371584, -15.02854073069843],
           [38.80206490886233, -15.028747968104396],
           [38.803652776599144, -15.029618363011831],
           [38.80442525279543, -15.028913757884283],
           [38.80476857554934, -15.027255854289601],
           [38.8038244379761, -15.026592689245566],
           [38.802837385058616, -15.027587436038889],
           [38.800391210437034, -15.02762888372132]]],
         [[[38.80172158610842, -15.024934767620842],
           [38.80129243266604, -15.023525524115184],
           [38.800605787158226, -15.020955703185544],
           [38.80000497233889, -15.022033373792912],
           [38.79931832683108, -15.023359730149945],
           [38.80004788768313, -15.02452028520257]]],
         [[[38.79854585063479, -15.018468750256012],
           [38.80082036387942, -15.019422085635721],
           [38.80142117869875, -15.018675997439718],
           [38.79983331096194, -15.018012805743895],
           [38.798374189257835, -15.017473960974563]]],
         [[[38.7783220968227, -15.010357432376365],
           [38.77896582698627, -15.00965276369112],
           [38.78106867885395, -15.00965276369112],
           [38.780682440755804, -15.007953259066463],
           [38.781884070394476, -15.006958420819815],
           [38.78003871059223, -15.005880674160334],
           [38.780639525411566, -15.004678565706069],
           [38.78119742488666, -15.002771759119586],
           [38.780424948690374, -15.002357233698076],
           [38.77896582698627, -15.001320916628059],
           [38.77810752010151, -15.002025612782193],
           [38.77849375819965, -15.004056782818427],
           [38.77827918147846, -15.005549058710283],
           [38.7772062978725, -15.007414388924357],
           [38.776648398397406, -15.009984372773651]]],
         [[[38.782827946979566, -15.0176942648842],
           [38.78424415333943, -15.016948170651874],
           [38.78664741261677, -15.017321218093839],
           [38.787376973468824, -15.01599482422882],
           [38.784329984027906, -15.015290174137743],
           [38.78244170888142, -15.017279768410242]]],
         [[[38.77548942311482, -15.021341799164253],
           [38.77626189931111, -15.02055426862775],
           [38.77527484639363, -15.019518039812311],
           [38.773901555378, -15.02113455456785]]],
         [[[38.87973207555932, -14.977840722635184],
           [38.878766480313956, -14.977467606321982],
           [38.878766480313956, -14.977965094595131],
           [38.8797106178872, -14.978421124496988]]],
         [[[38.878787937986075, -14.976804286826818],
           [38.8782514961831, -14.976679914192756],
           [38.877800885068595, -14.977094489358725],
           [38.878294411527335, -14.977488335023091]]],
         [[[39.00542663610746, -14.9144006531571],
           [39.00658535040189, -14.915271512727363],
           [39.0063707736807, -14.913405380759828],
           [39.00529789007474, -14.912741863270236],
           [39.004225006468786, -14.914856818133613]]],
         [[[38.557169181949526, -15.327374963098507],
           [38.557941658145815, -15.325057171938914],
           [38.55588172162238, -15.320173170742821],
           [38.5543367692298, -15.3213320966029],
           [38.55184767926398, -15.32414660409604],
           [38.554165107852846, -15.32762329634147]]],
         [[[38.570387107974916, -15.313074609740022],
           [38.571417076236635, -15.312536516578367],
           [38.570945007450014, -15.31110849340243],
           [38.570193988925844, -15.309990903250293],
           [38.569442970401674, -15.30992881473353],
           [38.57010815823737, -15.309038877302514],
           [38.56982920849982, -15.308459381127218],
           [38.56909964764777, -15.308293810496739],
           [38.56862757886115, -15.308707736827364],
           [38.568649036533266, -15.309721852877932],
           [38.569657547122866, -15.310342737830743],
           [38.57021544659796, -15.310591091296116],
           [38.570387107974916, -15.311543110183187],
           [38.56972192013922, -15.31230886136266]]],
         [[[38.56706090278863, -15.315396534388633],
           [38.56555886574029, -15.316245053684774],
           [38.564743474199766, -15.317528173888187],
           [38.56482930488824, -15.31790069118278]]],
         [[[38.567232564165586, -15.311091798119515],
           [38.56536574669122, -15.311609198987945],
           [38.565043881609434, -15.313865051826355],
           [38.56431432075738, -15.315210273594715],
           [38.562790826036924, -15.316721050807505],
           [38.56259770698785, -15.317838605013065],
           [38.56455035515069, -15.31676244181048],
           [38.56585927314996, -15.315189577940714],
           [38.5673613101983, -15.314630794508744],
           [38.568477109148496, -15.312478429567081],
           [38.56738276787042, -15.311091798119515]]],
         [[[38.56384538363397, -15.3228909171124],
           [38.56504701327264, -15.321835474903839],
           [38.563158738126155, -15.3191244126609],
           [38.561935650815364, -15.316910007503981],
           [38.559639679898616, -15.317696434449585],
           [38.55800889681756, -15.319890136092143],
           [38.55813764285028, -15.321876864894726],
           [38.5585024232763, -15.323346204263643],
           [38.56049798678338, -15.324484417804708]]],
         [[[38.550800852162496, -15.322011831259276],
           [38.5517020743915, -15.320459701996619],
           [38.5517020743915, -15.319611199796595],
           [38.5506935638019, -15.319590504577974],
           [38.55020003734316, -15.321660016302696]]],
         [[[38.544884979206905, -15.318446837055037],
           [38.544863521534786, -15.317556935851975],
           [38.54447728343664, -15.315818513278492],
           [38.54357606120764, -15.316273815824982],
           [38.543640434223995, -15.317453458722197],
           [38.544627487141476, -15.318529618369839]]],
         [[[38.52833686205809, -15.313857796283235],
           [38.52833686205809, -15.313133442492836],
           [38.527478555173325, -15.312885092044615],
           [38.526985028714584, -15.313340400974528],
           [38.52728543612425, -15.31377501311982],
           [38.5280149969763, -15.314582147566048]]],
         [[[38.32096409950243, -15.294199104332236],
           [38.32145762596117, -15.292936538999667],
           [38.322637797927726, -15.291301402099101],
           [38.32212281379687, -15.290887441366197],
           [38.32124304923998, -15.291115119870485],
           [38.320384742355216, -15.29206722729924],
           [38.32023453865038, -15.293764451551873]]]]);

var GeometriasIncendiosT1_11 = /* color: #ffffff */ee.Geometry.MultiPolygon(
        [[[[38.264459598171676, -14.700020826925634],
           [38.265747058498825, -14.701141610914515],
           [38.267978656399215, -14.700269890531365],
           [38.2693090320706, -14.698733993771363],
           [38.26454542886015, -14.698733993771363]]],
         [[[38.26317213784453, -14.707783175757605],
           [38.26463125954863, -14.708530339158349],
           [38.266476619350875, -14.709485044226147],
           [38.26802157174345, -14.709651079463812],
           [38.26939486275908, -14.70807373960625],
           [38.26883696328398, -14.705168083715105],
           [38.26703451882597, -14.703549201514335],
           [38.2629146457791, -14.704171849935179]]],
         [[[38.26360129128691, -14.712432150916516],
           [38.26536082040068, -14.712639692141055],
           [38.268236148464645, -14.712017067875262],
           [38.2663907886624, -14.710439745117752],
           [38.2638158680081, -14.708986937755276]]],
         [[[38.26905154000517, -14.701017079644247],
           [38.271755206692184, -14.701515204299266],
           [38.27257059823271, -14.699813273703906],
           [38.26965235482451, -14.69985478436403]]],
         [[[38.256005275356735, -14.705541670210557],
           [38.25729273568388, -14.702968061386226],
           [38.259009349453414, -14.701307652497745],
           [38.25617693673369, -14.70230389934589],
           [38.2548465610623, -14.703632221406362],
           [38.25446032296416, -14.705749217987368]]],
         [[[38.2512696096121, -14.676663001761735],
           [38.25088337151396, -14.677617846075337],
           [38.2512696096121, -14.678572686220987],
           [38.2523854085623, -14.679735094685453],
           [38.251655847710246, -14.68073143988078],
           [38.253157884758586, -14.680399325319998],
           [38.25435951439726, -14.679486007677408],
           [38.25427368370878, -14.677410271579095],
           [38.25427368370878, -14.675749668518462],
           [38.25251415459501, -14.675500576972167],
           [38.25131252495634, -14.676372396143385]]],
         [[[38.24607685295927, -14.676040274964024],
           [38.24539020745146, -14.677202696885873],
           [38.246205598991985, -14.67824056838221],
           [38.24680641381132, -14.679278434954018],
           [38.24727848259794, -14.680191753463413],
           [38.24865177361357, -14.680316296601017],
           [38.249467165154094, -14.679527522198445],
           [38.249424249809856, -14.677202696885873],
           [38.2492525884329, -14.675749668518462],
           [38.2483513662039, -14.675002393028786],
           [38.24650600640165, -14.674753300631696]]],
         [[[38.24805095879423, -14.668152248789195],
           [38.248480112236614, -14.667695564883251],
           [38.25011089531767, -14.66773708164134],
           [38.24959591118681, -14.666823711144405],
           [38.24826553551542, -14.665951853933283],
           [38.24714973656523, -14.668027698727524]]],
         [[[38.24873760430204, -14.668858031133398],
           [38.247965128105754, -14.670809299888328],
           [38.24929550377714, -14.671515073664422],
           [38.25109794823515, -14.672303876955882],
           [38.25174167839872, -14.67184720171264],
           [38.25079754082548, -14.66923167968842]]],
         [[[38.2492525884329, -14.667861631868375],
           [38.24976757256376, -14.66889954767101],
           [38.2503683873831, -14.668733481473314],
           [38.25002506462919, -14.667903148594975]]],
         [[[38.2382662603079, -14.675708153280437],
           [38.23916748253691, -14.674545723417479],
           [38.23955372063505, -14.673922990593274],
           [38.239467889946575, -14.673134193138297],
           [38.238180429619426, -14.673383287378645],
           [38.237493784111614, -14.674296630500482]]],
         [[[38.249426305523336, -14.683637420772838],
           [38.25079959653896, -14.683346824421452],
           [38.253932416668356, -14.683056227683876],
           [38.25448826042997, -14.682184435154],
           [38.25324371544706, -14.681935350935655],
           [38.25139835564482, -14.681810808720082],
           [38.24882343499052, -14.682308977156785]]],
         [[[38.26096897593682, -14.657173004509119],
           [38.26148396006768, -14.658418563679131],
           [38.26101189128106, -14.659705634047478],
           [38.261097721969534, -14.66095117881568],
           [38.26320057383721, -14.661532430616678],
           [38.265303425704886, -14.66169850227648],
           [38.266805462753226, -14.661781538059142],
           [38.269037060653616, -14.660494479889811],
           [38.26320057383721, -14.655553767000585],
           [38.261097721969534, -14.655844400255182],
           [38.26041107646172, -14.656716297705664]]],
         [[[38.26496010295098, -14.651900058913553],
           [38.2668912934417, -14.652647413251238],
           [38.268307499801566, -14.653228687085072],
           [38.26925163737481, -14.654183633607527],
           [38.269852452194144, -14.655595286060555],
           [38.26989536753838, -14.657131485748149],
           [38.270367436325, -14.658792230049048],
           [38.272084050094534, -14.65858463770001],
           [38.273586087142874, -14.656757816545309],
           [38.27388649455254, -14.655014018504922],
           [38.27272778025811, -14.654059075601477],
           [38.2709253358001, -14.652730452464752],
           [38.27023869029229, -14.651692460034097],
           [38.26916580668633, -14.651152702027172],
           [38.266547970687796, -14.651484860957993],
           [38.265088848983694, -14.650737502655732]]],
         [[[38.254574589645316, -14.6455889651074],
           [38.2559049653167, -14.645132234163292],
           [38.25693493357842, -14.645755048851196],
           [38.25770740977471, -14.643762035622487],
           [38.2559049653167, -14.643222258088857],
           [38.25466042033379, -14.644800065606335]]],
         [[[38.26919688321648, -14.637155752299197],
           [38.267609015479664, -14.64018687738362],
           [38.26666487790642, -14.641889271732527],
           [38.26687945462761, -14.64263666019918],
           [38.267566100135426, -14.642387530993329],
           [38.26773776151238, -14.641183402508585],
           [38.268810645118336, -14.640519052928358],
           [38.269583121314625, -14.639564046881262],
           [38.26988352872429, -14.638235335898722]]],
         [[[38.28415436649511, -14.630938324067836],
           [38.28295273685644, -14.63280688373178],
           [38.28329605961034, -14.634550858396755],
           [38.284283112527824, -14.636585477986749],
           [38.286214303018546, -14.636128728292634],
           [38.28788800144384, -14.634633904463653],
           [38.286986779214836, -14.633097547138457],
           [38.286214303018546, -14.63313907045084],
           [38.28514141941259, -14.632350126172003]]],
         [[[38.27462716007421, -14.628138496079405],
           [38.277030419351554, -14.628761359013524],
           [38.27891869449804, -14.628429165668582],
           [38.27939076328466, -14.629093551855735],
           [38.27994866275976, -14.630629937211364],
           [38.28106446170995, -14.629467268202308],
           [38.28110737705419, -14.627598680106939],
           [38.28054947757909, -14.626103798178761],
           [38.27866120243261, -14.62510720457194]]],
         [[[38.288996975916376, -14.616354095933575],
           [38.28466252614831, -14.617890570423356],
           [38.28569249441003, -14.619219404559313],
           [38.28564957906579, -14.620589756342513],
           [38.28440503408288, -14.622458404086412],
           [38.285563748377314, -14.623496534851592],
           [38.28762368490075, -14.625074484215196],
           [38.28938321401452, -14.624410085865257],
           [38.290499012964716, -14.624410085865257],
           [38.28959779073571, -14.62274908119535],
           [38.290541928308954, -14.622043150406235],
           [38.290799420374384, -14.620797384654747],
           [38.29170064260339, -14.619634663578267],
           [38.29144315053796, -14.617433781832638],
           [38.290799420374384, -14.617060045006498],
           [38.29067067434167, -14.618264305836565],
           [38.28934029867028, -14.619634663578267],
           [38.28886822988366, -14.618721092700332],
           [38.288996975916376, -14.616686307544569]]],
         [[[38.26535187513783, -14.607405614331949],
           [38.26367817671254, -14.61006340137716],
           [38.26505146772816, -14.612970319160592],
           [38.2665535047765, -14.614880558482188],
           [38.267755134415175, -14.612928792034404],
           [38.268227203201796, -14.610520205289285],
           [38.26861344129994, -14.608609928068239],
           [38.26805554182484, -14.607281029775786]]],
         [[[38.27681027204945, -14.607779367576823],
           [38.27530823500111, -14.609482013206879],
           [38.27715359480336, -14.61006340137716],
           [38.27805481703236, -14.607530198817514],
           [38.27934227735951, -14.605536838576691],
           [38.282518012833144, -14.60424945048317],
           [38.28509293348744, -14.60333581565073],
           [38.28367672712758, -14.601923827080006],
           [38.280715568375136, -14.603169699818828],
           [38.27681027204945, -14.605578367099383]]],
         [[[38.320543756018814, -14.623805112840396],
           [38.322303285132584, -14.623555962254434],
           [38.3259081740486, -14.623555962254434],
           [38.325779428015885, -14.621894951124041],
           [38.32337616873854, -14.620150875916607],
           [38.32024334860915, -14.62040003036558],
           [38.31822632742995, -14.622351730437298]]],
         [[[38.31736802054518, -14.624967811836928],
           [38.319041718970475, -14.626172029307002],
           [38.321745385657486, -14.627251666940614],
           [38.32071541739577, -14.625216960820895],
           [38.31758259726637, -14.623639012481163]]],
         [[[38.31565140677565, -14.623888162972879],
           [38.316767205725846, -14.623057660234473],
           [38.3183979888069, -14.622102578202385],
           [38.318312158118424, -14.620815287152483],
           [38.31766842795485, -14.619943246993222],
           [38.316252221594986, -14.62118901758941],
           [38.31560849143141, -14.623555962254434]]],
         [[[38.29475163413161, -14.616745736790032],
           [38.29543827963942, -14.617991525520228],
           [38.295824517737564, -14.619029677398718],
           [38.29672573996657, -14.618946625428993],
           [38.297841538916764, -14.618323734655135],
           [38.2990002532112, -14.618905099432348],
           [38.30037354422682, -14.618157630150485],
           [38.30269097281569, -14.618282208540759],
           [38.3024763960945, -14.617451684604502],
           [38.30114602042311, -14.61566604750967],
           [38.29960106803053, -14.614254138137541],
           [38.29749821616286, -14.61375581501661],
           [38.295824517737564, -14.614212611253956],
           [38.29488038016432, -14.615375361027665]]],
         [[[38.335263719092545, -14.62513391119099],
           [38.33672284079665, -14.625715257940664],
           [38.33912610007399, -14.626255078544224],
           [38.342001428137955, -14.627542337704051],
           [38.34311722708815, -14.626421176924449],
           [38.34118603659743, -14.624469513020868],
           [38.340284814368424, -14.622808508800473],
           [38.33414792014235, -14.623555962254434]]],
         [[[38.297026147376236, -14.634061566553155],
           [38.2990002532112, -14.634642889657595],
           [38.30020188284987, -14.634518320550583],
           [38.29942940665358, -14.632691298856352],
           [38.29822777701491, -14.63194387650626],
           [38.29638241721266, -14.633272625590912]]],
         [[[38.28440903617018, -14.628954161651798],
           [38.28591107321852, -14.628829589315773],
           [38.28797100974196, -14.628082153815063],
           [38.286898126136, -14.626919471311142],
           [38.2839798827278, -14.627625386422908]]],
         [[[38.27393769217604, -14.615915207045305],
           [38.275868882666764, -14.617949999343042],
           [38.27638386679762, -14.620732235857913],
           [38.27749966574782, -14.621396645335148],
           [38.278315057288346, -14.619860195368917],
           [38.27797173453444, -14.618323734655135],
           [38.27638386679762, -14.616704210377359],
           [38.27548264456862, -14.615084674161091]]],
         [[[38.27749966574782, -14.622559357083786],
           [38.27917336417311, -14.622019527394604],
           [38.28011750174635, -14.620483081785771],
           [38.28067540122145, -14.618946625428993],
           [38.28200577689284, -14.617783894555782],
           [38.28187703086012, -14.616621157528476],
           [38.27990292502516, -14.618323734655135],
           [38.27775715781325, -14.621479696378481]]],
         [[[38.26094482925796, -14.616143494759399],
           [38.26068733719253, -14.614814642018445],
           [38.26184605148696, -14.614980749050579],
           [38.263305173191064, -14.61365188927761],
           [38.262017712863916, -14.612323021468676],
           [38.25982903030776, -14.611907748630504],
           [38.25836990860366, -14.613153564790935],
           [38.25892780807876, -14.614108685731003],
           [38.259786114963525, -14.616392653753577],
           [38.2609877446022, -14.617057076356655]]],
         [[[38.269195907182265, -14.599289375318119],
           [38.27254330403285, -14.598251130209519],
           [38.275461547441054, -14.597545120736738],
           [38.27623402363734, -14.59563473080387],
           [38.274731986589, -14.59567626119618],
           [38.27159916645961, -14.59634074640708],
           [38.270182960099746, -14.595593200403723],
           [38.26928173787074, -14.597586650768438],
           [38.26790844685512, -14.599081726688413]]],
         [[[38.251186988235325, -14.589500518693589],
           [38.249427459121556, -14.589832770873372],
           [38.249727866531224, -14.590621867790398],
           [38.251444480300755, -14.591037180820983],
           [38.25324692475876, -14.590248085392838],
           [38.254706046462864, -14.589957365311493],
           [38.25607933747849, -14.591161774577357],
           [38.257452628494114, -14.591452493067932],
           [38.25779595124802, -14.590248085392838],
           [38.256165168166966, -14.587963845839008],
           [38.25479187715134, -14.586136437131069],
           [38.25354733216843, -14.58675941907643],
           [38.25303234803757, -14.589500518693589]]],
         [[[38.25040209070943, -14.584814355910975],
           [38.251517889659624, -14.585437341596949],
           [38.25254785792134, -14.585188147534076],
           [38.25340616480611, -14.584482096157757],
           [38.25259077326558, -14.582862322681805],
           [38.25194704310201, -14.58248852711086],
           [38.250273344676714, -14.582530059983403],
           [38.24954378382466, -14.58348531389016]]],
         [[[38.240749451836784, -14.580724976219706],
           [38.239719483575065, -14.581763303997691],
           [38.240234467705925, -14.582677028393203],
           [38.24092111321374, -14.583092356410702],
           [38.24109277459069, -14.584089140456953],
           [38.24156484337731, -14.584919790382273],
           [38.24268064232751, -14.584587530788143],
           [38.24302396508141, -14.582427831206733],
           [38.24242315026208, -14.581181841045064],
           [38.24117860527917, -14.580268110446735]]],
         [[[38.23542794915124, -14.581057241641208],
           [38.23761663170739, -14.582677028393203],
           [38.23959073754235, -14.581347973473877],
           [38.23993406029626, -14.579146708622957],
           [38.23911866875573, -14.578814440319604],
           [38.23761663170739, -14.579229775620497]]],
         [[[38.23208055230065, -14.575046802902673],
           [38.233496758660515, -14.574548390985171],
           [38.23435506554528, -14.573260821647409],
           [38.2348271343319, -14.57060259018641],
           [38.2339259121029, -14.569771886280321],
           [38.23259553643151, -14.569813421549961],
           [38.23186597557946, -14.571017940965497],
           [38.231479737481315, -14.573634632875295]]],
         [[[38.233711335381706, -14.57500526861927],
           [38.234226319512565, -14.575503679503372],
           [38.235470864495475, -14.576126691523141],
           [38.23585710259362, -14.575462145306087],
           [38.236200425347526, -14.574091512403838],
           [38.238002869805534, -14.573260821647409],
           [38.23817453118249, -14.572222453798735],
           [38.239461991509636, -14.572430127759842],
           [38.240749451836784, -14.572263988606595],
           [38.24010572167321, -14.57047798480007],
           [38.2394190761654, -14.571059476000348],
           [38.237959954461296, -14.571433290961902],
           [38.235256287774284, -14.57197324478709],
           [38.234269234856804, -14.574008443469095]]],
         [[[38.2437964412777, -14.578369520207946],
           [38.244740578850944, -14.577954183285186],
           [38.245470139702995, -14.578618721985737],
           [38.245212647637565, -14.579573992855817],
           [38.24611386986657, -14.580487726333477],
           [38.24662885399743, -14.579906260013507],
           [38.24735841484948, -14.579034057655626],
           [38.24825963707848, -14.5789094570369],
           [38.24860295983239, -14.578078784444225],
           [38.24834546776696, -14.576458963880071],
           [38.24701509209557, -14.576666633848676],
           [38.24534139367028, -14.57662509987061],
           [38.243453118523796, -14.576375895837806],
           [38.24306688042565, -14.57712350709065],
           [38.2428952190487, -14.578286452886026]]],
         [[[38.24328145714684, -14.58156758828394],
           [38.24383935662194, -14.58144298909832],
           [38.24452600212975, -14.580238526670017],
           [38.24362477990075, -14.578826389918573],
           [38.24259481163903, -14.578618721985737],
           [38.24165067406579, -14.58015546005287]]],
         [[[38.24010572167321, -14.578784856347667],
           [38.24040612908288, -14.57778804829684],
           [38.24040612908288, -14.57674970178133],
           [38.23916158409997, -14.576832769682657],
           [38.238732430657585, -14.576998905391347],
           [38.238732430657585, -14.578369520207946]]],
         [[[38.249246689995964, -14.57309468312038],
           [38.249933335503776, -14.574382253428846],
           [38.250705811700065, -14.574423787829671],
           [38.25083455773278, -14.575960555156776],
           [38.25113496514245, -14.576666633848676],
           [38.251950356682975, -14.57616822559515],
           [38.25250825615807, -14.574672994070227],
           [38.25212201805993, -14.573800770995268],
           [38.25061998101159, -14.572388592983277],
           [38.25027665825768, -14.572887009785473]]],
         [[[38.2533236476986, -14.575337542667263],
           [38.25255117150231, -14.577165040974762],
           [38.25302324028893, -14.577912649549846],
           [38.2533236476986, -14.579283258681698],
           [38.25401029320641, -14.579573992855817],
           [38.254739854058464, -14.5789094570369],
           [38.25439653130456, -14.577331176432915]]],
         [[[38.26570319985563, -14.561993842875095],
           [38.267076490871254, -14.563738379002308],
           [38.269308088771645, -14.5649844677871],
           [38.27235507821256, -14.563572233299016],
           [38.27595996712858, -14.561703085512331],
           [38.279049871913735, -14.559169326557225],
           [38.279779432765785, -14.556220160633087],
           [38.27767658089811, -14.555846319883877],
           [38.27574539040739, -14.556718613980111],
           [38.273771284572426, -14.557092453251421],
           [38.27265548562223, -14.555846319883877],
           [38.26750564431364, -14.557798592369002],
           [38.265574453822914, -14.5607477371932]]],
         [[[38.27966997448554, -14.551889916690373],
           [38.27808210674873, -14.552928380269496],
           [38.279154990354684, -14.55330222596186],
           [38.28155824963203, -14.552346841267134],
           [38.28267404858222, -14.550560676179702],
           [38.28443357769599, -14.549688357744541],
           [38.28499147717109, -14.548192946693435],
           [38.28400442425361, -14.547943710533481],
           [38.28194448773017, -14.548192946693435],
           [38.2807428580915, -14.549148349366796]]],
         [[[38.27980620239078, -14.542897521211149],
           [38.27924830291568, -14.543562165534182],
           [38.2773600277692, -14.543894486945634],
           [38.27787501190006, -14.545514546665249],
           [38.279677456358066, -14.546428421263814],
           [38.281179493406405, -14.546677659134286],
           [38.2817373928815, -14.545182227691704],
           [38.2802782711774, -14.543936027086904],
           [38.28100783202945, -14.543022142174078],
           [38.283926075437655, -14.543645245933932],
           [38.28585726592838, -14.544392968125196],
           [38.28534228179752, -14.542191334426391],
           [38.28254808348407, -14.538882017127928],
           [38.28010190886249, -14.539380509619516],
           [38.279758586108585, -14.540875980345268]]],
         [[[38.26180083332355, -14.54593917671781],
           [38.26227290211017, -14.54402833946477],
           [38.26325995502765, -14.543072914638124],
           [38.2639895158797, -14.542159026153866],
           [38.266392775157044, -14.541826702131166],
           [38.266349859812806, -14.541037430573368],
           [38.26450450001056, -14.539832747495408],
           [38.263088293650696, -14.539874288400558],
           [38.26077086506183, -14.540538941820676],
           [38.26081378040607, -14.54286521304193],
           [38.26120001850421, -14.544402200228333],
           [38.260599203684876, -14.54622995485026]]],
         [[[38.283597402628686, -14.539255457846028],
           [38.28501360898855, -14.540709388678023],
           [38.287373952921655, -14.539961654016732],
           [38.2877601910198, -14.537843058732449],
           [38.285826791886365, -14.53701223150675],
           [38.284067262772595, -14.537053772942242],
           [38.28462516224769, -14.538383094753817],
           [38.283337701920544, -14.539338539865636]]],
         [[[38.282481848271594, -14.5585984768004],
           [38.28535717633556, -14.558640014174589],
           [38.286730467351184, -14.557933877750045],
           [38.28883331921886, -14.556853900023361],
           [38.289691626103625, -14.555898530704821],
           [38.28848999646495, -14.554693928711806],
           [38.28681629803966, -14.554444699892253],
           [38.28432720807384, -14.55540007550525],
           [38.28239601758312, -14.557227739065441]]],
         [[[38.26668900159191, -14.553323166721212],
           [38.2689205994923, -14.551703164301287],
           [38.26917809155773, -14.54975083789408],
           [38.26956432965587, -14.54671846689928],
           [38.269693075688586, -14.54468301643421],
           [38.26754730847667, -14.545721513913758],
           [38.267246901067004, -14.547424639207259],
           [38.26763313916515, -14.550457000502716],
           [38.26686066296886, -14.551744702973409]]],
         [[[38.26359909680675, -14.54547227496406],
           [38.262998281987414, -14.547424639207259],
           [38.26454323437999, -14.549376986186752],
           [38.26617401746105, -14.547923112417765],
           [38.266216932805285, -14.54601229233284],
           [38.26540154126476, -14.545804593501131],
           [38.26480072644542, -14.546386149737572]]],
         [[[38.26615587386834, -14.544194822202702],
           [38.2657696357702, -14.545274861867485],
           [38.26675668868768, -14.545524101039986],
           [38.26890245589959, -14.543820961088082],
           [38.26950327071893, -14.54269937394696],
           [38.27018991622674, -14.54452714266215],
           [38.2707049003576, -14.543820961088082],
           [38.27018991622674, -14.542740914313018],
           [38.27079073104608, -14.541660862256437],
           [38.273580228421565, -14.538794544656174],
           [38.27315107497918, -14.538005262264988],
           [38.27242151412713, -14.538420674401301],
           [38.2712627998327, -14.539002250079925],
           [38.270361577603694, -14.539749987988573],
           [38.26988950881707, -14.540705427188746],
           [38.26903120193231, -14.540663886439887],
           [38.26727167281854, -14.540663886439887],
           [38.266842519376155, -14.541868564985165],
           [38.26628461990106, -14.542740914313018]]],
         [[[38.27429338448621, -14.531020902151969],
           [38.27313467019177, -14.532059463851407],
           [38.272619686060914, -14.533762694474614],
           [38.274336299830445, -14.533554984125736],
           [38.27665372841931, -14.532474887164863],
           [38.278842410975464, -14.53156095484465],
           [38.279357395106324, -14.529525364732645],
           [38.27995820992566, -14.52728203963441],
           [38.27768369668103, -14.527863644623269],
           [38.27575250619031, -14.528112903435874],
           [38.27416463845349, -14.529276107512468]]],
         [[[38.27322050088025, -14.522629144654148],
           [38.27412172310925, -14.524872516955199],
           [38.27472253792859, -14.52624345549214],
           [38.274808368617066, -14.527655928731434],
           [38.2765249823866, -14.527489755877491],
           [38.27691122048474, -14.525869564006758],
           [38.27772661202527, -14.524747885757677],
           [38.27648206704236, -14.523875465408459],
           [38.274808368617066, -14.523833921496463]]],
         [[[38.28836961739636, -14.534219656554997],
           [38.28772588723279, -14.53762607137778],
           [38.29000040047742, -14.537335281918573],
           [38.2930044745741, -14.535881328882201],
           [38.294034442835816, -14.534136572610658],
           [38.29296155922986, -14.533638068288719]]],
         [[[38.278069934779175, -14.538166107929515],
           [38.27892824166394, -14.53762607137778],
           [38.27897115700818, -14.53521666145067],
           [38.27776952736951, -14.536130578653609],
           [38.27691122048474, -14.53820764914805]]],
         [[[38.27618165963269, -14.545518781933325],
           [38.27665372841931, -14.54477106355389],
           [38.276310405665406, -14.54340023994964],
           [38.27845617287732, -14.542901756529401],
           [38.27849908822156, -14.542029407836822],
           [38.27725454323865, -14.541738624173655],
           [38.27613874428845, -14.54198786733695],
           [38.275065860682496, -14.54281867584998],
           [38.27472253792859, -14.543898722244776],
           [38.27523752205945, -14.545020303295013]]],
         [[[38.26005222356464, -14.54702400529379],
           [38.25979473149921, -14.548104031120577],
           [38.26013805425312, -14.549100973348319],
           [38.26091053044941, -14.55009791107405],
           [38.260953445793646, -14.548810198996925],
           [38.26078178441669, -14.547065544846353]]],
         [[[38.31629106660543, -14.554403869662812],
           [38.31581899781881, -14.556937683347147],
           [38.317192288834434, -14.557809973128794],
           [38.31920931001363, -14.557851510651425],
           [38.318136426407676, -14.554819250949183]]],
         [[[38.32221338411031, -14.551246946336642],
           [38.319895955521446, -14.554237716929338],
           [38.3206255163735, -14.555608473239207],
           [38.32036802430807, -14.556979221033995],
           [38.32109758516012, -14.558848408848368],
           [38.3220846380776, -14.561839076409523],
           [38.3229858603066, -14.56387436864454],
           [38.327148648697715, -14.564289732099006],
           [38.326376172501426, -14.562752883409802],
           [38.32229921479879, -14.559263781767577],
           [38.3215267386025, -14.557394597472399],
           [38.322942944962364, -14.554653098528457],
           [38.3241016592568, -14.553157721112596]]],
         [[[38.32594701905904, -14.55726998462299],
           [38.32727739473043, -14.55614846581126],
           [38.32710573335348, -14.552825413644188],
           [38.33032438417135, -14.553282336284255],
           [38.330367299515586, -14.552243874370525],
           [38.32882234712301, -14.55091463599141],
           [38.32526037355123, -14.55261772122234],
           [38.32320043702779, -14.55544232141271]]],
         [[[38.328178616959434, -14.564622022299293],
           [38.33225557466207, -14.564580486051632],
           [38.333671781021934, -14.563209785490141],
           [38.33319971223531, -14.561672929275426],
           [38.33079645295797, -14.56138217148962],
           [38.327019902665, -14.562835956585724]]],
         [[[38.31661025194923, -14.546921902397825],
           [38.31699649004737, -14.548915793027412],
           [38.31901351122657, -14.5499127315894],
           [38.319228087947764, -14.54712960017854],
           [38.31909934191505, -14.54347409069963],
           [38.317683135555185, -14.544803373875165],
           [38.315923606441416, -14.545800331005932],
           [38.31527987627784, -14.548085007453409]]],
         [[[38.38542493327651, -14.535569609191457],
           [38.38053258403335, -14.5432131517232],
           [38.38177712901626, -14.544417816364264],
           [38.384352049670554, -14.54092842487332],
           [38.38585408671889, -14.53781285017706]]],
         [[[38.3841803882936, -14.537231271367602],
           [38.38336499675307, -14.535943484270543],
           [38.381347975573874, -14.535154191695044],
           [38.38066133006606, -14.536317358717056],
           [38.37890180095229, -14.536358900283178],
           [38.38091882213149, -14.541260750247488]]],
         [[[38.37773575455026, -14.533252571950264],
           [38.37889446884469, -14.533335656226921],
           [38.3786798921235, -14.531757049629745],
           [38.377564093173305, -14.529929175274681],
           [38.3752037492402, -14.530095346295148],
           [38.37498917251901, -14.53233864284568]]],
         [[[38.37086929947213, -14.53620204464422],
           [38.37250008255319, -14.535371211248247],
           [38.37417378097848, -14.533667993021227],
           [38.37224259048776, -14.534000329315806],
           [38.370311399997036, -14.533667993021227],
           [38.36923851639108, -14.534374207049826],
           [38.36992516189889, -14.536575918653252]]],
         [[[38.399155495238766, -14.536402985394524],
           [38.40104377038525, -14.536319902271048],
           [38.401644585204586, -14.535156735262419],
           [38.40306079156445, -14.535364444105864],
           [38.40327536828564, -14.534408981809571],
           [38.39748179681347, -14.535364444105864]]],
         [[[38.394177315307125, -14.529590065539841],
           [38.39349066979931, -14.525601917463284],
           [38.39233195550488, -14.52680667811094],
           [38.39387690789746, -14.52975623681521]]],
         [[[38.4045503842054, -14.501770776856068],
           [38.40699655882698, -14.502518640622359],
           [38.40854151121956, -14.49907013667986],
           [38.40836984984261, -14.495663128268427],
           [38.4060095059095, -14.495413832913398],
           [38.40339166991097, -14.49620326724229],
           [38.402662109058916, -14.499194782335723]]],
         [[[38.39153594172723, -14.477167118911497],
           [38.393810454971856, -14.476336063995438],
           [38.3956558147741, -14.476585380797035],
           [38.39698619044549, -14.47695935547425],
           [38.399346534378594, -14.478289038111283],
           [38.39797324336297, -14.475297240973969],
           [38.397544089920586, -14.4728040458846],
           [38.39488333857781, -14.47292870630418],
           [38.39119261897332, -14.47484015730411]]],
         [[[38.427498419778715, -14.475844167937582],
           [38.42664011289395, -14.47725696257464],
           [38.4279275732211, -14.47925148086719],
           [38.42844255735196, -14.47837888132019]]],
         [[[38.4623840485192, -14.474905802955732],
           [38.461954895076815, -14.476443262012005],
           [38.46337110143668, -14.477523632274123],
           [38.46401483160025, -14.479185730098783],
           [38.465731445369784, -14.478603997276355],
           [38.46435815435416, -14.476277050735625]]],
         [[[38.466675582943026, -14.481969716060961],
           [38.468692604122225, -14.481346438656843],
           [38.46736222845084, -14.4798921179041],
           [38.46577436071402, -14.47889486387821],
           [38.46410066228873, -14.4798921179041]]],
         [[[38.46105367284781, -14.477980710417006],
           [38.46002370458609, -14.478520892462935],
           [38.460924926815096, -14.479351939196482],
           [38.46332818609244, -14.47985056574252],
           [38.46354276281363, -14.478645549671386]]],
         [[[38.47318089431853, -14.488468214606351],
           [38.474854592743824, -14.489631626983972],
           [38.47601330703826, -14.488302012339782],
           [38.47339547103972, -14.487138592985714]]],
         [[[38.48906274002712, -14.508693965353483],
           [38.492753459631615, -14.507987669335309],
           [38.493182613074, -14.506616617692094],
           [38.492495967566185, -14.503625202824033],
           [38.49069352310818, -14.504871630596186],
           [38.49069352310818, -14.506699711972727]]],
         [[[38.477003528296166, -14.507156729958892],
           [38.47790475052517, -14.505245557559954],
           [38.476746036230736, -14.503791393598938],
           [38.47417111557644, -14.505411747118972],
           [38.47541566055935, -14.50740601209922]]],
         [[[38.481767131506615, -14.517418612666095],
           [38.48095173996609, -14.518789597401254],
           [38.48159547012966, -14.518831142260622],
           [38.48361249130886, -14.517169341801555],
           [38.48605866593044, -14.515798347027294],
           [38.4871315495364, -14.514468889437557],
           [38.48867650192898, -14.511685311744431],
           [38.48507161301296, -14.51384570344318],
           [38.48138089340847, -14.515632165265343]]],
         [[[38.456581513126146, -14.527602662442096],
           [38.45791188879753, -14.527561119230304],
           [38.456366936404955, -14.52635636269312],
           [38.455379883487474, -14.525650123050635],
           [38.45598069830681, -14.523863742122673],
           [38.45477906866814, -14.524279180835434],
           [38.453362862308275, -14.525940927882468],
           [38.45353452368523, -14.527519576010702],
           [38.454821984012376, -14.529015126998566]]],
         [[[38.45663076542143, -14.535864869236848],
           [38.457746564371625, -14.536280285397263],
           [38.45843320987944, -14.535366368813477],
           [38.458476125223676, -14.534410906525531],
           [38.45993524692778, -14.533746234671453],
           [38.459506093485395, -14.533164645159363],
           [38.4578323950601, -14.533746234671453],
           [38.45633035801176, -14.533746234671453],
           [38.456244527323285, -14.535075576380542]]],
         [[[38.46989160679106, -14.526268538591555],
           [38.4713936438394, -14.526808602893082],
           [38.47190862797026, -14.525936190673487],
           [38.471007405741254, -14.525105318693011],
           [38.470964490397016, -14.523983636567625],
           [38.471951543314496, -14.523692829162025],
           [38.47182279728178, -14.521823343853299],
           [38.47135072849516, -14.522280330610155],
           [38.470492421610395, -14.523402021374043],
           [38.46907621525053, -14.523817460954106],
           [38.469204961283246, -14.525313036980796]]],
         [[[38.461737691385785, -14.530381302736421],
           [38.46328264377836, -14.53000741824835],
           [38.46366888187651, -14.527888727538913],
           [38.461995183451215, -14.527847184380875],
           [38.460021077616254, -14.528594960031334],
           [38.46066480777983, -14.530838271807538]]],
         [[[38.4781610318116, -14.534072990162887],
           [38.4787189312867, -14.533283690906796],
           [38.47854726990975, -14.531954338419862],
           [38.47717397889412, -14.532328219614929],
           [38.47717397889412, -14.534197616103523]]],
         [[[38.469320470898516, -14.541799665566218],
           [38.46914880952156, -14.540553445875533],
           [38.468633825390704, -14.53980571068641],
           [38.46893423280037, -14.539057972966368],
           [38.46816175660408, -14.538725644278431],
           [38.4677326031617, -14.537520948594214],
           [38.467131788342364, -14.536523954095063],
           [38.46704595765389, -14.537520948594214],
           [38.467346365063555, -14.538642562028347],
           [38.4677326031617, -14.539847251596651],
           [38.467861349194415, -14.541093475271413],
           [38.46841924866951, -14.542007368164429]]],
         [[[38.46331232270516, -14.532120507917966],
           [38.46429937562264, -14.531289659178235],
           [38.463140661328204, -14.530874233637268],
           [38.462625677197344, -14.530126465696169],
           [38.462110693066485, -14.5305003499829],
           [38.46176737031258, -14.531372744192742],
           [38.46249693116463, -14.532411304239066]]],
         [[[38.54526987534387, -14.553182933191966],
           [38.5455273674093, -14.552352163677705],
           [38.546643166359495, -14.550898309503427],
           [38.547887711342405, -14.549859836373379],
           [38.547887711342405, -14.548696740668003],
           [38.54621401291711, -14.548530583638438],
           [38.54599943619592, -14.54927828928667],
           [38.544411568459104, -14.551646007131955]]],
         [[[38.57068854428315, -14.555189142091097],
           [38.57098895169282, -14.556933732031066],
           [38.572834311495065, -14.5566845057413],
           [38.57386427975678, -14.555230680107094],
           [38.57249098874116, -14.55514760406726],
           [38.57098895169282, -14.555230680107094]]],
         [[[38.56304961300874, -14.557432183766071],
           [38.56429415799165, -14.556809118921372],
           [38.56498080349946, -14.555604521899312],
           [38.5664828405478, -14.55498145189378],
           [38.56746989346528, -14.553652230002218],
           [38.566568671236276, -14.55327838490272],
           [38.56313544369721, -14.552779923785002],
           [38.56227713681245, -14.553569153368166],
           [38.562620459566354, -14.55514760406726],
           [38.5618908987143, -14.557058345070393]]],
         [[[38.4880958670082, -14.593938402633638],
           [38.483461009830464, -14.595350442460491],
           [38.48097191986464, -14.598672853366255],
           [38.480714427799214, -14.60124768730586],
           [38.48277436432265, -14.604154721654647],
           [38.48371850189589, -14.607393943230568],
           [38.48328934845351, -14.610882282322338],
           [38.48183022674941, -14.614121404763742],
           [38.48526345428847, -14.616945216140918],
           [38.486980068058, -14.615284155020094],
           [38.48912583526992, -14.6161977401906],
           [38.491700755924214, -14.61470278066104],
           [38.49281655487441, -14.612958648354697],
           [38.490928279727925, -14.613456973283352],
           [38.490928279727925, -14.61162977635384],
           [38.492387401432026, -14.611380611959145],
           [38.49187241730117, -14.609968675053734],
           [38.491185771793354, -14.60581586688561],
           [38.48861085113906, -14.605400581754392],
           [38.48723756012343, -14.604237779214237],
           [38.48629342255019, -14.601496863184293],
           [38.48852502045058, -14.601164628616969],
           [38.49032746490859, -14.601829097249723],
           [38.48946915802382, -14.599503448252825],
           [38.48801003631972, -14.597426955156239]]],
         [[[38.44389590846522, -14.585384285933152],
           [38.44715747462733, -14.584387507749387],
           [38.450333210100965, -14.58471976764531],
           [38.45162067042811, -14.584802832540966],
           [38.44990405665858, -14.58206167444119],
           [38.44818744288905, -14.580483416422211],
           [38.445097538103894, -14.579901950090854],
           [38.44338092433436, -14.580649549377814],
           [38.44518336879237, -14.581978608511616],
           [38.44363841639979, -14.582310872041948],
           [38.4425226174496, -14.583639921150564]]],
         [[[38.37480545200881, -14.595072241152875],
           [38.37171554722365, -14.596567334159708],
           [38.37197303928908, -14.59814547686713],
           [38.37291717686232, -14.600554199172514],
           [38.37343216099318, -14.60246454638289],
           [38.375835420270526, -14.601301728317887],
           [38.376865388532245, -14.598477715994576],
           [38.37454795994338, -14.598726895010882],
           [38.374118806500995, -14.59706569623765]]],
         [[[38.32408718881907, -14.594707722718605],
           [38.3228855591804, -14.59852850209426],
           [38.326747940161844, -14.60135251376554],
           [38.3283787232429, -14.603179796113926],
           [38.33018116770091, -14.60085416139932],
           [38.32940869150462, -14.598777681053033],
           [38.32932286081614, -14.595870575639418],
           [38.32812123117747, -14.594707722718605],
           [38.327520416358134, -14.596368939295605],
           [38.3272578653327, -14.59811320320241],
           [38.325541251563166, -14.597864023490974]]],
         [[[38.29000713177997, -14.59389219435019],
           [38.290178793156926, -14.592147896982626],
           [38.29335452863056, -14.591234211891761],
           [38.29361202069599, -14.588576197334477],
           [38.29189540692646, -14.589988271564383],
           [38.28854801007587, -14.590569711261496],
           [38.289234655583684, -14.587828624957528],
           [38.28811885663349, -14.587330241962604],
           [38.28726054974872, -14.588659260775204],
           [38.2873463804372, -14.590569711261496],
           [38.288719671452824, -14.592978516500965]]],
         [[[38.25605738549122, -14.56694707519359],
           [38.25803149132618, -14.56711321835408],
           [38.25949061303028, -14.56636557314598],
           [38.259404782341804, -14.564122622311462],
           [38.2564865389336, -14.564122622311462],
           [38.25468409447559, -14.56511949216562]]],
         [[[38.182475207886895, -14.606350477849693],
           [38.18513595922967, -14.607264100155785],
           [38.18487846716424, -14.605436851747099],
           [38.18419182165643, -14.603277356777554],
           [38.18127357824822, -14.603692645918713],
           [38.17981445654412, -14.606101307470949]]],
         [[[38.194920657716, -14.632677888942316],
           [38.19629394873162, -14.63068475689694],
           [38.19912636145135, -14.631515230782313],
           [38.20007049902459, -14.62960513614813],
           [38.19560730322381, -14.627778073552998],
           [38.19758140905877, -14.626864536552917],
           [38.20127212866326, -14.627778073552998],
           [38.20007049902459, -14.624622202345705],
           [38.19715225561639, -14.624290002737768],
           [38.196208118043145, -14.62005441368572],
           [38.19457733496209, -14.620718825213393],
           [38.19217407568475, -14.623210350541045],
           [38.192002414307794, -14.626200143619759],
           [38.192002414307794, -14.633674448176748]]],
         [[[38.21500503881951, -14.612911862849415],
           [38.21440422400018, -14.611333826117919],
           [38.216721652589044, -14.610503275918754],
           [38.215434192261895, -14.608343830713448],
           [38.21388923986932, -14.609921888911945],
           [38.21225845678826, -14.611582990565656],
           [38.213202594361505, -14.612828808567082],
           [38.21449005468865, -14.614739049118812]]],
         [[[38.197530771512014, -14.58248068335073],
           [38.198989893216115, -14.5823145517763],
           [38.1979599249544, -14.580570162679162],
           [38.196758295315725, -14.580071763256825],
           [38.19529917361162, -14.582065354179704]]],
         [[[38.17430589360581, -14.590093308985539],
           [38.176194168752296, -14.587269152815574],
           [38.174992539113624, -14.588016727092318],
           [38.172760941213234, -14.589262678578928],
           [38.17233178777085, -14.591256186288904]]],
         [[[38.16820027289327, -14.616925761649973],
           [38.171032685613, -14.615015540108757],
           [38.171032685613, -14.613022247751367],
           [38.168114442204796, -14.614185003823907]]],
         [[[38.11786508347684, -14.614942616949959],
           [38.11975335862333, -14.610291571781687],
           [38.118294236919226, -14.611454342301734],
           [38.11649179246122, -14.613115432373252],
           [38.116835115215125, -14.615773150371151]]],
         [[[38.092846632199375, -14.6517980496142],
           [38.09027171154508, -14.648642523955957],
           [38.08855509777555, -14.647978196976],
           [38.08855509777555, -14.650884612648456],
           [38.091130018429844, -14.654123144710146]]],
         [[[38.11658715851139, -14.661031384645137],
           [38.118818756411784, -14.658125103565471],
           [38.11615800506901, -14.65729473045997],
           [38.1140122378571, -14.658208140702897]]],
         [[[38.79991535716756, -15.089435378138583],
           [38.80249027782186, -15.08670060757727],
           [38.80300526195272, -15.082805570577134],
           [38.804121060902915, -15.078330333588678],
           [38.801374478871665, -15.082391200738881],
           [38.79931454234823, -15.086203372785398]]],
         [[[38.7979412513326, -15.070539881600189],
           [38.79776958995565, -15.073523492666308],
           [38.80094532542928, -15.0773358236899],
           [38.80257610851034, -15.075761173506253],
           [38.80017284923299, -15.072446082385623]]]]);

var GeometriasIncendiosT1_10 = /* color: #ffffff */ee.Geometry.MultiPolygon(
        [[[[38.26265540951628, -14.656102820451773],
           [38.26209751004118, -14.65556307330875],
           [38.26059547299284, -14.656518009656928],
           [38.26179710263151, -14.65751446053888],
           [38.2620116793527, -14.658843054664075],
           [38.26042381161589, -14.660669858427896],
           [38.262741240204754, -14.661417182848648],
           [38.26480117672819, -14.661790844102708],
           [38.266989859284344, -14.66137566489218],
           [38.268963965119305, -14.660213158915377]]],
         [[[38.26613155239958, -14.650207048832554],
           [38.26484409207243, -14.652200003465394],
           [38.264929922760906, -14.65311343494841],
           [38.26411453122038, -14.654815728915525],
           [38.264715346039715, -14.654981805667648],
           [38.26583114498991, -14.655355477899672],
           [38.266989859284344, -14.65601978251632],
           [38.26789108151335, -14.65556307330875],
           [38.26874938839811, -14.65601978251632],
           [38.2680627428903, -14.65697471687378],
           [38.26759067410368, -14.657846609825635],
           [38.26879230374235, -14.658510906888239],
           [38.26857772702116, -14.659548867015388],
           [38.26982227200407, -14.660171640730672],
           [38.27201095456022, -14.66083593074177],
           [38.27304092282194, -14.660420749720945],
           [38.272955092133465, -14.659092165165417],
           [38.272182615937176, -14.65826179572585],
           [38.274972113312664, -14.65676712280233],
           [38.27535835141081, -14.655895225554131],
           [38.27407089108366, -14.654774209707814],
           [38.273942145050945, -14.65357014926207],
           [38.272440108002606, -14.65253216080885],
           [38.27025142544645, -14.651203528414381],
           [38.26879230374235, -14.650290088970744],
           [38.267719420136395, -14.648836882010084],
           [38.266689451874676, -14.648961442984227],
           [38.26703277462858, -14.650082488566262]]],
         [[[38.24917999142546, -14.660047086129278],
           [38.248450430573406, -14.661749326217077],
           [38.248750837983074, -14.663119412286903],
           [38.24965206021208, -14.663908245832411],
           [38.251969488800945, -14.665361352819012],
           [38.25329986447233, -14.665278318393861],
           [38.25454440945524, -14.6643649376388],
           [38.25566020840544, -14.663949763308718],
           [38.25643268460173, -14.662704235595221],
           [38.25892177456755, -14.662039951251222],
           [38.259994658173504, -14.660794412675102],
           [38.261711271943035, -14.658926091529336],
           [38.26128211850065, -14.657389904426509],
           [38.25990882748503, -14.656268896228255],
           [38.25900760525602, -14.655646111417301],
           [38.258750113190594, -14.657306866978915],
           [38.258707197846356, -14.658469388380858],
           [38.25810638302702, -14.659548867015388],
           [38.25780597561735, -14.657680535245207],
           [38.257205160798016, -14.655853706550992],
           [38.25608936184782, -14.65543851608691],
           [38.25488773220915, -14.654774209707814],
           [38.25141158932585, -14.653694707546048],
           [38.2510253512277, -14.65440053648446],
           [38.25115409726042, -14.655230920559807],
           [38.25115409726042, -14.6561443394077],
           [38.2510253512277, -14.657306866978915],
           [38.25162616604704, -14.65826179572585],
           [38.25501647824186, -14.660545304109839],
           [38.2550593935861, -14.661251110975535],
           [38.25463024014372, -14.662247540325183],
           [38.25364318722624, -14.662828788685365],
           [38.25312820309538, -14.662828788685365],
           [38.252999457062664, -14.66170780832357],
           [38.253943594635906, -14.660669858427896],
           [38.25076785916227, -14.658054202874116],
           [38.24990955227751, -14.657722053902125],
           [38.24982372158903, -14.655646111417301],
           [38.248965414704266, -14.656061301487986],
           [38.24806419247526, -14.655687630459777],
           [38.24737754696745, -14.65672560396444],
           [38.246733816803875, -14.657016235664457],
           [38.24784961575407, -14.658344832811457]]],
         [[[38.25839041011675, -14.638914564186253],
           [38.260235769919, -14.638706953011052],
           [38.260064108542046, -14.6377104166349],
           [38.26019285457476, -14.636755398359766],
           [38.259119970968804, -14.635343624598665],
           [38.25804708736285, -14.635052964167233],
           [38.257875425985894, -14.636755398359766],
           [38.2562017275606, -14.636879966196641]]],
         [[[38.255343420675835, -14.645558018027051],
           [38.25590132015093, -14.6450597659705],
           [38.25615881221636, -14.646346914800855],
           [38.25693128841265, -14.646429956401386],
           [38.25671671169146, -14.644893681700044],
           [38.25500009792193, -14.644229343360122]]],
         [[[38.25500009792193, -14.646429956401386],
           [38.254828436544976, -14.645516497065593],
           [38.25345514552935, -14.644935202779461],
           [38.253583891562066, -14.64663756026509]]],
         [[[38.25624464290484, -14.647384932546625],
           [38.256115896872124, -14.64684516393221],
           [38.255600912741265, -14.64613931066193],
           [38.254871351889214, -14.647177329390672]]],
         [[[38.243304231918195, -14.646334530335459],
           [38.243776300704816, -14.646417571940686],
           [38.2462224753264, -14.644549128215452],
           [38.24587915257249, -14.643220447434953],
           [38.24562166050706, -14.641850236947983],
           [38.245063761031965, -14.640936758533798],
           [38.24523542240892, -14.639774144140388],
           [38.244334200179914, -14.639815666189122],
           [38.243561723983625, -14.640729149272694],
           [38.24484918431077, -14.641767193613017],
           [38.244806268966535, -14.642971318892307],
           [38.243819216049054, -14.643594139718225],
           [38.243304231918195, -14.642140888372756],
           [38.2427463324431, -14.643718703671134],
           [38.24334714726243, -14.646043884469492]]],
         [[[38.243089655197004, -14.64131045470858],
           [38.244076708114484, -14.639483489579113],
           [38.24291799382005, -14.63782259898341],
           [38.24184511021409, -14.63811325574545],
           [38.24137304142747, -14.640438495976962]]],
         [[[38.25368974522386, -14.635871036464922],
           [38.253818491256574, -14.637075194112642],
           [38.2551917822722, -14.63757346430942],
           [38.25639341191087, -14.637781076557399],
           [38.2560930045012, -14.636950626386612],
           [38.25467679814134, -14.636410832089828]]],
         [[[38.25858209446702, -14.638860657079444],
           [38.25789544895921, -14.641476541692965],
           [38.25888250187669, -14.641601106848738],
           [38.25982663944993, -14.64002327631492],
           [38.25969789341722, -14.638860657079444]]],
         [[[38.291129189341916, -14.653205665946263],
           [38.290914612620725, -14.65470036316703],
           [38.29160125812854, -14.655323150666359],
           [38.29104335865344, -14.656278088060304],
           [38.29048545917834, -14.658354024556385],
           [38.29078586658801, -14.659391985426943],
           [38.29203041157092, -14.658270987474276],
           [38.29310329517688, -14.658395543085646],
           [38.29348953327502, -14.659558058709795],
           [38.29430492481555, -14.65943350375947],
           [38.2955923851427, -14.658229468921402],
           [38.29546363910998, -14.656361125897847],
           [38.296879845469846, -14.65499099755369],
           [38.298896866649045, -14.654658843937476],
           [38.2976094063219, -14.652582872428438],
           [38.29228790363635, -14.651793998098256]]],
         [[[38.306922036021604, -14.649717999449887],
           [38.30825241169299, -14.649717999449887],
           [38.30906780323352, -14.649302797360548],
           [38.307909088939084, -14.64801566588545],
           [38.30580623707141, -14.647309816383922],
           [38.30481918415393, -14.64847239082238]]],
         [[[38.35588807137883, -14.633132187896393],
           [38.355244341215254, -14.636661640839767],
           [38.35657471688664, -14.63832254022552],
           [38.35979336770451, -14.63819797320779],
           [38.35936421426213, -14.640191037002774],
           [38.35627430947697, -14.643637333746147],
           [38.35940712960637, -14.64122908389001],
           [38.36150998147404, -14.642682341277894],
           [38.36116665872014, -14.640149515025104],
           [38.361681642850996, -14.63807340611932],
           [38.363484087309004, -14.637948838960119],
           [38.36412781747258, -14.637076866865097],
           [38.36339825662053, -14.634876159975972],
           [38.36129540475285, -14.634502452840069],
           [38.3600079444257, -14.636163368572026],
           [38.35884923013127, -14.63595575479312],
           [38.35717553170598, -14.634543975886597]]],
         [[[38.339966478666426, -14.634377883653313],
           [38.344515505155684, -14.633422850872192],
           [38.34378594430363, -14.628107809903456],
           [38.34219807656682, -14.625974600517656],
           [38.34370011361516, -14.624978006324389],
           [38.343270960172774, -14.623815307381836],
           [38.34155434640324, -14.625476303986456],
           [38.34061020883, -14.62406445767352],
           [38.33837861092961, -14.62294327913473],
           [38.33644742043889, -14.6236076819228],
           [38.33520287545598, -14.624728857069272],
           [38.336490335783125, -14.626182223738548],
           [38.33927983315861, -14.626971190187223],
           [38.34065312417424, -14.628549114578433],
           [38.33919400247014, -14.630999027340188],
           [38.34039563210881, -14.63216168823491]]],
         [[[38.33251200039708, -14.615004685706392],
           [38.33070955593907, -14.616167431288549],
           [38.331653693512315, -14.619614105249664],
           [38.33371363003575, -14.622686997876668],
           [38.33534441311681, -14.624223428066529],
           [38.33774767239415, -14.622188693884917],
           [38.335644820526475, -14.618783586349],
           [38.332898238495225, -14.618783586349]]],
         [[[38.34544200125984, -14.60424084512744],
           [38.34419745627693, -14.60590198970776],
           [38.34389704886726, -14.607604649877928],
           [38.3453990859156, -14.607812290459991],
           [38.34677237693123, -14.60698172695506],
           [38.348832313454665, -14.606607972354153],
           [38.34951895896248, -14.60208133841274],
           [38.3488752287989, -14.600793930090129],
           [38.34720153037361, -14.602579687998304],
           [38.347587768471755, -14.604074729979203],
           [38.34715861502937, -14.605029890367856]]],
         [[[38.40047970186012, -14.603993270386583],
           [38.40301170717018, -14.601916819676932],
           [38.404384998185805, -14.598635987598442],
           [38.40103760133522, -14.598552927923375],
           [38.39773311982887, -14.603785626197912]]],
         [[[38.39859142671364, -14.601958348883263],
           [38.399406818254164, -14.60058788093407],
           [38.400093463761976, -14.597888449393881],
           [38.39867725740211, -14.598262218813682],
           [38.39769020448463, -14.601792232010899]]],
         [[[38.389665035112074, -14.605529831288752],
           [38.391381648881605, -14.604574673071783],
           [38.392154125077894, -14.602664344190996],
           [38.38760509858864, -14.603910212734641],
           [38.38709011445778, -14.605280659980002]]],
         [[[38.38893547426002, -14.588876261175564],
           [38.38996544252174, -14.590579053124864],
           [38.39176788697975, -14.591368147366468],
           [38.39429989228981, -14.591949583418424],
           [38.39404240022438, -14.589873019037086],
           [38.39279785524147, -14.588502475813895],
           [38.39069500337379, -14.588751666125518]]],
         [[[38.38427668324298, -14.577241024045492],
           [38.38801031819171, -14.578362435570012],
           [38.38921194783038, -14.577241024045492],
           [38.388139064224426, -14.576701083127555],
           [38.38783865681476, -14.575496594773279],
           [38.38560705891437, -14.575496594773279],
           [38.38427668324298, -14.576410345162138]]],
         [[[38.352267045164915, -14.562919041649428],
           [38.352524537230344, -14.56740494498777],
           [38.35178146873065, -14.572249182045379],
           [38.34950695548602, -14.574450515809328],
           [38.35444222007342, -14.57577961234111],
           [38.3539701512868, -14.573162945899703],
           [38.35568676505633, -14.57241532120977],
           [38.356158833842954, -14.570338572653716],
           [38.3574462941701, -14.568635624237487],
           [38.35954914603778, -14.566558840073203],
           [38.3594633153493, -14.564523572613778],
           [38.356138172295964, -14.563531486459086],
           [38.35450738921491, -14.563946850559368]]],
         [[[38.331858439032295, -14.56415453231614],
           [38.33602122742341, -14.562825365693241],
           [38.334090036932686, -14.561579264709113],
           [38.329154772345284, -14.56133004366749],
           [38.32846812683747, -14.564320677580733]]],
         [[[38.31567802104256, -14.55744112663192],
           [38.31932582530281, -14.558479564087595],
           [38.318467518418046, -14.555073470957957],
           [38.317523380844804, -14.554159632148593],
           [38.316493412583085, -14.555198085047847]]],
         [[[38.31945457133553, -14.553495019728613],
           [38.32061328562996, -14.55557192689529],
           [38.32293071421883, -14.556485759856006],
           [38.32679309520027, -14.556361146493305],
           [38.3276084867408, -14.555239623062178],
           [38.32709350260994, -14.553121174362815],
           [38.32490482005379, -14.551708863932792],
           [38.32263030680916, -14.550504239071959],
           [38.3215574232032, -14.551002705328944],
           [38.32245864543221, -14.552331943177693],
           [38.321214100449296, -14.552788866839382]]],
         [[[38.32189639531234, -14.561529940252443],
           [38.323355517016445, -14.563357553028501],
           [38.325115046130215, -14.562692968316737],
           [38.321338495837246, -14.557417756140351]]],
         [[[38.37663872321908, -14.560470314261154],
           [38.37882740577523, -14.561342590074734],
           [38.37788326820199, -14.558061153619294],
           [38.376224555681695, -14.555016368663944]]],
         [[[38.37492210944955, -14.571311211484472],
           [38.37539417823617, -14.572557257467611],
           [38.37586624702279, -14.573180277817444],
           [38.376810384596034, -14.57268186167847],
           [38.37689621528451, -14.571311211484472],
           [38.37543709358041, -14.569774411737237]]],
         [[[38.38539345344369, -14.571601956177282],
           [38.38620884498422, -14.57218344441233],
           [38.38762505134408, -14.572474187954569],
           [38.38835461219613, -14.57168502601908],
           [38.388054204786464, -14.570065158457142],
           [38.385994268263026, -14.570397439953155]]],
         [[[38.3935528634256, -14.568712404860648],
           [38.39428242427765, -14.568130907469113],
           [38.39475449306427, -14.564974180582437],
           [38.392351233786925, -14.565929510593458],
           [38.39132126552521, -14.567341729984504]]],
         [[[38.40162811308804, -14.538455607135074],
           [38.40381679564419, -14.53853868945546],
           [38.40536174803677, -14.538621771744625],
           [38.40712127715054, -14.538871018424624],
           [38.40677795439663, -14.536295455838896],
           [38.40107021361294, -14.537500158204947]]],
         [[[38.39828071623745, -14.536378538971558],
           [38.400168991383936, -14.536586246666555],
           [38.400426483449365, -14.535173830490494],
           [38.39858112364712, -14.53492457963995],
           [38.398967361745264, -14.53450916093098],
           [38.400211906728174, -14.533886031403407],
           [38.400211906728174, -14.533179815814883],
           [38.39913902312222, -14.532764393826342],
           [38.39677867918911, -14.534883037804196]]],
         [[[38.408107669100815, -14.53534127719132],
           [38.40682020877367, -14.535756694336053],
           [38.40724936221605, -14.538456886740336],
           [38.40827933047777, -14.538539969060265],
           [38.40849390719896, -14.535715152656717]]],
         [[[38.19247269653811, -14.618556119303875],
           [38.18981194519534, -14.624618841342102],
           [38.19170022034182, -14.625698486613372],
           [38.1917860510303, -14.62835605235457],
           [38.19118523621096, -14.630930538485549],
           [38.19307351135745, -14.631345775356008],
           [38.19642090820803, -14.631262728044776],
           [38.200884104008814, -14.629767871068816],
           [38.202085733647486, -14.627027273505304],
           [38.199596643681666, -14.62544933817581],
           [38.19753670715823, -14.621712077688262],
           [38.19444680237307, -14.619801897767355]]],
         [[[38.214874506230494, -14.607842132931687],
           [38.211612940068385, -14.611828793531622],
           [38.213072061772486, -14.613988204496868],
           [38.21530365967288, -14.614237365935098],
           [38.21453118347659, -14.611330464911003],
           [38.216076135869166, -14.610832135160496]]],
         [[[38.2032474449331, -14.596885404169322],
           [38.2047065666372, -14.597799065795646],
           [38.206337349718254, -14.596885404169322],
           [38.20745314866845, -14.59539031332382],
           [38.20676650316064, -14.594144396525586],
           [38.20341910631005, -14.594642764091425]]],
         [[[38.21474875718896, -14.62587154511345],
           [38.21663703233544, -14.624542751226851],
           [38.21500624925439, -14.62371225096415],
           [38.20839728624169, -14.625207149175365],
           [38.20745314866845, -14.627781672235903]]],
         [[[38.22298850328271, -14.608762709279594],
           [38.220327751939934, -14.615822341833384],
           [38.22358931810204, -14.61989190930198],
           [38.22788085252587, -14.618646131349005],
           [38.22822417527978, -14.615490128916008],
           [38.22573508531396, -14.61607150119176],
           [38.22419013292138, -14.614825701574361],
           [38.22487677842919, -14.612749353182593],
           [38.22419013292138, -14.610672985172886]]],
         [[[38.2321723869497, -14.626785086245489],
           [38.23483313829247, -14.626286791553794],
           [38.23740805894677, -14.624791900693133],
           [38.2362064293081, -14.62371225096415],
           [38.235777275865715, -14.621054629016697],
           [38.233288185899895, -14.6223834440106],
           [38.23148574144189, -14.624708850902454]]],
         [[[38.355915858106904, -14.576214566739376],
           [38.356859995680146, -14.578208192569338],
           [38.35780413325339, -14.580949398627668],
           [38.35943491633444, -14.58061713304346],
           [38.36303980525046, -14.57986953364648],
           [38.36518557246237, -14.579620333283653],
           [38.36406977351218, -14.576463770954655],
           [38.36097986872702, -14.575799225754233],
           [38.35754664118796, -14.573556370906351]]],
         [[[38.44755122040375, -14.578552180651558],
           [38.446263760076604, -14.584117615245953],
           [38.44729372833832, -14.58544665345056],
           [38.449010342107854, -14.589433719930847],
           [38.451499432073675, -14.590015161092795],
           [38.45132777069672, -14.58677568363335],
           [38.451241940008245, -14.582954700237048],
           [38.44858118866547, -14.579382851459192]]],
         [[[38.487251123006644, -14.594917060675975],
           [38.48184378963262, -14.598488657412366],
           [38.48141463619024, -14.601478786829762],
           [38.483989556844534, -14.60546556281657],
           [38.48304541927129, -14.611694755574709],
           [38.48218711238653, -14.61402027561524],
           [38.48467620235235, -14.616179665044926],
           [38.491456826741995, -14.615681346290934],
           [38.49265845638067, -14.614518598136433],
           [38.49205764156133, -14.607708092543712],
           [38.49008353572637, -14.605714733915796],
           [38.48733695369512, -14.60646224551919],
           [38.48656447749883, -14.602807720189448],
           [38.48913939815313, -14.600482081540381]]],
         [[[38.09061891519555, -14.714360407832313],
           [38.09259302103051, -14.709877508817529],
           [38.08778650247582, -14.70962845617204],
           [38.08735734903344, -14.714277392020875]]]]);

var GeometriasIncendiosT1_9 = /* color: #ffffff */ee.Geometry.MultiPolygon(
        [[[[38.25931569543555, -14.715162605031896],
           [38.25871488061622, -14.718151142215135],
           [38.25931569543555, -14.720973611957072],
           [38.26047440972999, -14.720683065287847],
           [38.26073190179542, -14.719105805186347],
           [38.26193353143409, -14.717154967703348],
           [38.260259833008796, -14.715079589525702]]],
         [[[38.27141782251075, -14.704868441417863],
           [38.27231904473975, -14.707566555445768],
           [38.27442189660743, -14.708106174249494],
           [38.275280203492194, -14.707940137836585],
           [38.275280203492194, -14.705615614795015],
           [38.273992743165046, -14.705574105230033],
           [38.274293150574714, -14.707400518622393],
           [38.27317735162452, -14.706902407394493],
           [38.27330609765723, -14.705366557286766]]],
         [[[38.270001616150886, -14.705740143442597],
           [38.26982995477393, -14.707400518622393],
           [38.27090283837989, -14.70748353704986],
           [38.27094575372413, -14.70632127619205]]],
         [[[38.27313443628028, -14.708023156058823],
           [38.27291985955909, -14.709725022656167],
           [38.27394982782081, -14.710887265389221],
           [38.27536603418067, -14.710804248256412],
           [38.2756235262461, -14.710098601352518],
           [38.275065626771, -14.708521264729185],
           [38.27407857385352, -14.708272210536105]]],
         [[[38.27931424585059, -14.71466451152092],
           [38.28068753686622, -14.714581495825204],
           [38.28090211358741, -14.71308720790087],
           [38.27867051568702, -14.713419272768462]]],
         [[[38.26656838861182, -14.721098131839657],
           [38.26562425103858, -14.722716883842956],
           [38.26648255792335, -14.72387905735738],
           [38.26708337274268, -14.725373271344747],
           [38.26768418756202, -14.723920563439757],
           [38.2675554415293, -14.722675377531464]]],
         [[[38.26322099176124, -14.725041224677012],
           [38.26133271661475, -14.726452419522],
           [38.26159020868018, -14.72757306774394],
           [38.263521399170905, -14.727656078494148],
           [38.26510926690772, -14.727407046148679]]],
         [[[38.1491016277417, -14.690392729860509],
           [38.148243320856935, -14.693174046581573],
           [38.14609755364502, -14.69595532790006],
           [38.1436084636792, -14.698362975671982],
           [38.143737209711915, -14.699649811012222],
           [38.144509685908204, -14.699110171308726],
           [38.14579714623535, -14.697574266393541],
           [38.147728336726075, -14.696827065502823],
           [38.1485437282666, -14.696328930155772],
           [38.1505607494458, -14.695166609928734],
           [38.15141905633057, -14.69421184225907],
           [38.15154780236328, -14.691139952755703],
           [38.151719463740235, -14.690060629975898],
           [38.15034617272461, -14.690517267187111]]],
         [[[38.148758304987794, -14.687362299707283],
           [38.14957369652832, -14.687735916654374],
           [38.150474918757325, -14.686615063897408],
           [38.15141905633057, -14.68590933884278],
           [38.15137614098633, -14.684996044213857],
           [38.15060366479004, -14.68449788189911],
           [38.14858664361084, -14.685079071155963]]],
         [[[38.14094771233643, -14.685286638373265],
           [38.139746082697755, -14.68740381273294],
           [38.13910235253418, -14.688815250914288],
           [38.13940275994385, -14.68968701700252],
           [38.14017523614014, -14.689313403390484],
           [38.14081896630371, -14.68740381273294],
           [38.14210642663086, -14.686324471503767]]],
         [[[38.167910828370324, -14.671444193358223],
           [38.16733147122311, -14.673042555483656],
           [38.16784645535397, -14.674018173380572],
           [38.168425812501184, -14.67341619689431],
           [38.16879059292721, -14.671963143380122]]],
         [[[38.09489480114194, -14.697825795582501],
           [38.09240571117612, -14.699818316500552],
           [38.0928348646185, -14.700856080612775],
           [38.09317818737241, -14.702516492934834],
           [38.094251070978366, -14.703429714330342],
           [38.09489480114194, -14.704965578063614],
           [38.096311007501804, -14.705795770177655],
           [38.097555552484714, -14.705505203296845],
           [38.09845677471372, -14.704010853229738],
           [38.098757182123386, -14.702101391037939],
           [38.09738389110776, -14.701063632843457],
           [38.096268092157565, -14.701561757392271],
           [38.09532395458432, -14.701561757392271],
           [38.094808970453464, -14.702308942085024],
           [38.09420815563413, -14.701146653680503],
           [38.09446564769956, -14.699818316500552],
           [38.09498063183042, -14.698572993056857]]],
         [[[38.08317891216489, -14.704841048974215],
           [38.082578097345554, -14.706003317712883],
           [38.08266392803403, -14.706958033833388],
           [38.08335057354184, -14.707497654141465],
           [38.08412304973813, -14.706127846139289]]],
         [[[38.088738573867744, -14.688008248987995],
           [38.09064830668635, -14.687925223158368],
           [38.09176410563654, -14.687385554497208],
           [38.09204305537409, -14.685642000486455],
           [38.090476645309394, -14.685413676907702],
           [38.089189184982246, -14.686326969791978],
           [38.088438166458076, -14.687593119524559]]],
         [[[38.07663644679255, -14.690353715644699],
           [38.07732309230036, -14.691661354268097],
           [38.077687872726386, -14.692429328860118],
           [38.078975333053535, -14.692034963866211],
           [38.07876075633234, -14.690934889332176],
           [38.07790244944758, -14.690104640734095]]],
         [[[38.16284280956406, -14.619335332370175],
           [38.16494566143174, -14.61854633848782],
           [38.16563230693955, -14.61638697231908],
           [38.164774000054784, -14.615473387935404],
           [38.16134077251572, -14.617134447625563]]],
         [[[38.165893424768875, -14.614514764473931],
           [38.168382514734695, -14.614805452094487],
           [38.170099128504226, -14.614473237639604],
           [38.16971289040608, -14.613144374797503],
           [38.16906916024251, -14.612189249666251],
           [38.165163863916824, -14.613559645298906]]],
         [[[38.16585050942464, -14.618750460345966],
           [38.16400514962239, -14.62124200800288],
           [38.166150916834304, -14.621823365056015],
           [38.166880477686355, -14.621283533557719],
           [38.166880477686355, -14.619788608637696]]],
         [[[38.16795336129231, -14.614888505629722],
           [38.16833959939046, -14.617006360170922],
           [38.16945539834065, -14.617047886526485],
           [38.17001329781575, -14.615926672171346],
           [38.16992746712727, -14.614930032385562]]],
         [[[38.29106536740202, -14.653134194710585],
           [38.29076495999235, -14.654587373175792],
           [38.2920524203195, -14.655791428031545],
           [38.29072204464811, -14.657452182491543],
           [38.29033580654997, -14.658863813883343],
           [38.292438658417645, -14.658490147635534],
           [38.29372611874479, -14.659195961124022],
           [38.29600063198942, -14.659071405967788],
           [38.29475608700651, -14.658199517890985],
           [38.29428401821989, -14.65724458887256],
           [38.295914801300945, -14.65612357993073],
           [38.2969876849069, -14.65554231377669],
           [38.296429785431805, -14.654545853924825],
           [38.29505649441618, -14.653964583585084],
           [38.2946273409738, -14.652968116558078],
           [38.292696150483074, -14.652718999093281]]]]);

var GeometriasIncendiosT1_8 = /* color: #ffffff */ee.Geometry.MultiPolygon(
        [[[[38.47989673393143, -14.649306303586776],
           [38.48204250114335, -14.64789461062268],
           [38.48242873924149, -14.644697507655652],
           [38.4807550408162, -14.645569449452188],
           [38.47805137412919, -14.649057181959652],
           [38.478609273604285, -14.650219747130492]]],
         [[[38.48440284507645, -14.646773553851316],
           [38.48543281333817, -14.646275304557202],
           [38.485089490584265, -14.645901616843512],
           [38.48577613609208, -14.64490511315982],
           [38.487106511763464, -14.644406859619567],
           [38.48740691917313, -14.643410349142416],
           [38.48667735832108, -14.642746006308412],
           [38.485861966780554, -14.642995135107014],
           [38.4856903054036, -14.644116211198215],
           [38.48504657524003, -14.644863592074717]]],
         [[[38.46646423118485, -14.651091666961852],
           [38.46856708305253, -14.650344307318784],
           [38.4683095909871, -14.649389344066254],
           [38.46667880790604, -14.648102213099358],
           [38.46603507774247, -14.648766539703463],
           [38.46547717826737, -14.650012146659398]]],
         [[[38.4628164269246, -14.645444886550704],
           [38.463631818465124, -14.64457294425879],
           [38.463588903120886, -14.643036656545936],
           [38.462344358137976, -14.642206226273808],
           [38.461357305220496, -14.643534913199725],
           [38.461400220564734, -14.644946634237062]]],
         [[[38.47577686088456, -14.651382306134785],
           [38.476077268294226, -14.649846066140913],
           [38.475862691573035, -14.64797765163695],
           [38.47569103019608, -14.64702267807371],
           [38.47573394554032, -14.645486407525736],
           [38.4747039772786, -14.645071197421615],
           [38.4741460778035, -14.6468150745747],
           [38.47444648521317, -14.648808060049367],
           [38.47521896140946, -14.650593427482969]]],
         [[[38.4553062416829, -14.64615074205675],
           [38.457666585616, -14.647313322642049],
           [38.45942611472977, -14.64735484326321],
           [38.45831031577958, -14.645610970403633],
           [38.45509166496171, -14.644531423110775]]],
         [[[38.45797580688451, -14.641755545529449],
           [38.459392013244376, -14.64241989136404],
           [38.46076530426, -14.641589458756354],
           [38.45973533599828, -14.638599875333252],
           [38.45806163757299, -14.63901509768985],
           [38.45608753173803, -14.640592935476375],
           [38.456945838622794, -14.64154793704342]]],
         [[[38.46123737304662, -14.636316138323117],
           [38.462138595275626, -14.6363576610264],
           [38.46355480163549, -14.635942433639869],
           [38.463898124389395, -14.634945884705958],
           [38.463383140258536, -14.634156946923266],
           [38.460894050292715, -14.635153499440467]]],
         [[[38.46295398681615, -14.63806008509464],
           [38.46372646301244, -14.63901509768985],
           [38.46621555297826, -14.640177716106702],
           [38.466129722289786, -14.638558353054371],
           [38.463383140258536, -14.636648319729376]]],
         [[[38.46475643127416, -14.64424683203145],
           [38.46552890747045, -14.646613527990624],
           [38.46651596038793, -14.646655048744325],
           [38.46703094451879, -14.644080747145212],
           [38.46647304504369, -14.643374884975259],
           [38.465872230224356, -14.643457927701427],
           [38.4662584683225, -14.644537480279666],
           [38.46578639953588, -14.644869649234423]]],
         [[[38.416488111741856, -14.639762405115997],
           [38.41717475724967, -14.63897348465426],
           [38.41768974138053, -14.63752020269186],
           [38.41734641862662, -14.636399092885469],
           [38.416488111741856, -14.635651683165051],
           [38.41515773607047, -14.636233002056517],
           [38.414728582628086, -14.637395635218533],
           [38.415501058824375, -14.639264139891338]]],
         [[[38.41438525987418, -14.637935427092142],
           [38.4133982069567, -14.63864130676885],
           [38.413741529710606, -14.639970015292198],
           [38.415028990037754, -14.639928493272684]]],
         [[[38.47798580003531, -14.64262740819082],
           [38.47935909105094, -14.6440391350708],
           [38.48056072068961, -14.644080656312031],
           [38.4798740751818, -14.641630889627212]]],
         [[[38.4798740751818, -14.65163739126175],
           [38.48163360429557, -14.65051635363287],
           [38.48098987413199, -14.649976592729429],
           [38.47884410692008, -14.651056113207018]]],
         [[[38.501626524615894, -14.649442796603914],
           [38.50218442409099, -14.64852934982233],
           [38.50218442409099, -14.646536361813753],
           [38.501513662681056, -14.644340332904488],
           [38.50112742458291, -14.642637957582881],
           [38.500312033042384, -14.641890569120655],
           [38.50074118648477, -14.644978776502969],
           [38.501299085959864, -14.646805695849379],
           [38.501041593894435, -14.648549559205243]]],
         [[[38.50072530238689, -14.653179584704223],
           [38.501583609271655, -14.653677818303354],
           [38.50265649287761, -14.653885415301955],
           [38.50227025477947, -14.65276438917293],
           [38.50299981563152, -14.651643357309034],
           [38.50291398494304, -14.65031471952616],
           [38.50227025477947, -14.649816478281027],
           [38.501111540485034, -14.651311198618437]]],
         [[[38.49973824946941, -14.651518797859051],
           [38.49879411189617, -14.652971987036912],
           [38.49948075740398, -14.653677818303354],
           [38.499094519305835, -14.65475732054832],
           [38.499824080157886, -14.654840358962257],
           [38.50046781032146, -14.653885415301955],
           [38.50055364100994, -14.651850956235004]]],
         [[[38.49195381226525, -14.63948680744338],
           [38.493112526559685, -14.640981598204096],
           [38.49418541016564, -14.640068116171967],
           [38.495129547738884, -14.639569851641777],
           [38.49444290223107, -14.638448752310492],
           [38.49319835724816, -14.638158095992969]]],
         [[[38.50015160723079, -14.638863175311169],
           [38.50036618395198, -14.640233404460183],
           [38.501310321525224, -14.640690145607623],
           [38.50066659136165, -14.641645146751374],
           [38.501782390311845, -14.64251710068548],
           [38.50272652788509, -14.642184928167001],
           [38.50337025804866, -14.64110536400718],
           [38.503327342704424, -14.640108838527631],
           [38.50259778185237, -14.63965209616966],
           [38.5013961522137, -14.639319919311935]]],
         [[[38.49835892492979, -14.651523347311173],
           [38.49951763922422, -14.649488866316076],
           [38.49831600958555, -14.648118695004218],
           [38.496213157717875, -14.64957190672637]]],
         [[[38.49605814183079, -14.60303143430377],
           [38.499834692123756, -14.60693512563158],
           [38.50155130589329, -14.604941759995592],
           [38.502581274155006, -14.60128720939666],
           [38.50172296727024, -14.600539680201937]]]]);


var GeometriasIncendiosT1_7 = /* color: #ffffff */ee.Geometry.MultiPolygon(
        [[[[38.455375216766825, -14.644415207807082],
           [38.45593311624192, -14.645453234698705],
           [38.45666267709397, -14.645826923176633],
           [38.45644810037278, -14.644726616390573],
           [38.45595457391404, -14.644249123048395]]],
         [[[38.46131899194383, -14.643045004785625],
           [38.46119024591111, -14.64416608062186],
           [38.461855433746805, -14.645328671731194],
           [38.462863944336405, -14.645598558071361],
           [38.463893912598124, -14.644228362444707],
           [38.46365787820481, -14.643294133244556],
           [38.46254207925462, -14.642463703947472]]],
         [[[38.463121436401835, -14.63440837659661],
           [38.462391875549784, -14.635633303691183],
           [38.462971232697, -14.63606929304072],
           [38.46370079354905, -14.634844368380215]]],
         [[[38.45372297601365, -14.64613832975505],
           [38.454366706177225, -14.646242131849542],
           [38.45505335168504, -14.645826923176633],
           [38.45543958978318, -14.646283652673588],
           [38.45606186227464, -14.646512017065259],
           [38.45704891519212, -14.646553537838171],
           [38.458336375519266, -14.647217869135538],
           [38.45865824060105, -14.646678100109776],
           [38.45428087548875, -14.644954982404032]]],
         [[[38.45543958978318, -14.638705972070943],
           [38.455353759094706, -14.639121194226695],
           [38.455096267029276, -14.639557176644288],
           [38.45548250512742, -14.640449899843025],
           [38.45582582788133, -14.640449899843025],
           [38.45623352365159, -14.639827070087577],
           [38.456126235290995, -14.63914195531384],
           [38.45571853952073, -14.638685210942514]]],
         [[[38.465095542236796, -14.636712894782706],
           [38.463142894073954, -14.639121194226695],
           [38.464838050171366, -14.641633271505684],
           [38.46569635705613, -14.641757836572424],
           [38.46674778298997, -14.640782074989433],
           [38.466104052826395, -14.640678270310216],
           [38.46593239144944, -14.640242290121058],
           [38.466383002563944, -14.64005544120327],
           [38.46674778298997, -14.640449899843025],
           [38.46702673272752, -14.640553704630316],
           [38.467842124268046, -14.63941184926804],
           [38.46754171685838, -14.638705972070943],
           [38.465631984039774, -14.637647152016228]]],
         [[[38.460868380829325, -14.63586167917281],
           [38.462842486664286, -14.634678276374329],
           [38.46243479089402, -14.634034668663993],
           [38.46080400781297, -14.634968937302117]]],
         [[[38.46071817712449, -14.638415316094234],
           [38.46254207925462, -14.638519121844405],
           [38.463829539581766, -14.638000092602319],
           [38.46417286233567, -14.636899746547716],
           [38.46419432000779, -14.635633303691183],
           [38.463636420532694, -14.635654065108433],
           [38.46318580941819, -14.636297668068508],
           [38.46230604486131, -14.636090054416712],
           [38.46121170358323, -14.63604853166277],
           [38.46097566918992, -14.637460300887815]]],
         [[[38.45996715860032, -14.64258826854251],
           [38.46080400781297, -14.64204848811965],
           [38.4609542115178, -14.641155771427767],
           [38.4600529892888, -14.640782074989433],
           [38.45827200250291, -14.641674793202458]]],
         [[[38.467327140137186, -14.646221371434574],
           [38.46818544702195, -14.64549475567216],
           [38.467584632202616, -14.645432474209045],
           [38.46651174859666, -14.645681599955358],
           [38.465868018433085, -14.646553537838171]]],
         [[[38.45820762948655, -14.641923923218005],
           [38.45670559243821, -14.642816636782982],
           [38.457349322601786, -14.64385467124229],
           [38.458400748535624, -14.642837397520319]]],
         [[[38.45625498132371, -14.641612510654344],
           [38.457349322601786, -14.641135010531226],
           [38.456898711487284, -14.640076202201996],
           [38.45642664270066, -14.639972397188707],
           [38.455847285553446, -14.641010445110744]]],
         [[[38.45498897866868, -14.637460300887815],
           [38.455847285553446, -14.636671372146651],
           [38.45616915063523, -14.635757872165174],
           [38.45569708184861, -14.635674826523708],
           [38.45524647073411, -14.63638071347422]]],
         [[[38.46887131326687, -14.631115667752608],
           [38.46822758310329, -14.631696998660935],
           [38.468131023578756, -14.63231985149679],
           [38.46779842966091, -14.632527468715924],
           [38.46797009103786, -14.63303613007264],
           [38.46808810823452, -14.633617455893706],
           [38.46779842966091, -14.633856214266919],
           [38.46712251298916, -14.633897737435746],
           [38.46651096933376, -14.634063830032463],
           [38.46677919023525, -14.634437537915412],
           [38.46757312410366, -14.634977337067111],
           [38.46674700372707, -14.63518495177185],
           [38.466650444202536, -14.635838936807687],
           [38.46682210557949, -14.63595312447118],
           [38.467691141300314, -14.635589799881025],
           [38.468667465381735, -14.635351043394186],
           [38.4690215169717, -14.63519533250193],
           [38.46874256723415, -14.634437537915412],
           [38.468892770938986, -14.633949641385719],
           [38.46834560029995, -14.633264508257433],
           [38.46834560029995, -14.632745466584606],
           [38.46874256723415, -14.63218490019905],
           [38.46906443231594, -14.631780045807858],
           [38.469171720676535, -14.631167572360601]]],
         [[[38.41647817103076, -14.640427901862145],
           [38.416156305948974, -14.639825833066645],
           [38.41579152552295, -14.63926528477142],
           [38.416134848276855, -14.63874625729486],
           [38.4169716974895, -14.63818570624076],
           [38.416864409128905, -14.637853527162399],
           [38.415855898539306, -14.637417541358708],
           [38.415855898539306, -14.63683622560593],
           [38.41529799906421, -14.636462521808605],
           [38.41456843821216, -14.636877748210791],
           [38.41501904932666, -14.638310273265462],
           [38.415641321818114, -14.639659744832212],
           [38.41574861017871, -14.640946925359364]]],
         [[[38.413645758311034, -14.640095726179345],
           [38.41446114985156, -14.639991921175307],
           [38.41469718424487, -14.63928604584493],
           [38.41474009958911, -14.638642451652165],
           [38.4139461657207, -14.638725496170247],
           [38.413409723917724, -14.639348329053695]]],
         [[[38.41122104136157, -14.639846594087102],
           [38.41173602549243, -14.639680505868405],
           [38.411907686869384, -14.639369090119356],
           [38.411135210673095, -14.639182240457696]]],
         [[[38.41594172922778, -14.636379476433847],
           [38.41630650965381, -14.63629643102768],
           [38.41671420542407, -14.636462521808605],
           [38.41720773188281, -14.636649373786838],
           [38.41744376627612, -14.636545567151913],
           [38.41725064722705, -14.636130340121007],
           [38.41673566309619, -14.635611305227291],
           [38.416349424998046, -14.635382929485049],
           [38.41572715250659, -14.63536216804215],
           [38.41579152552295, -14.635798157930475]]],
         [[[38.41667129007983, -14.634677039324353],
           [38.417100443522216, -14.635050746162912],
           [38.416907324473144, -14.63536216804215],
           [38.416864409128905, -14.635673589479369],
           [38.41718627421069, -14.635901964919052],
           [38.41757251230884, -14.635549020957516],
           [38.41776563135791, -14.635216837886848],
           [38.417894377390624, -14.634718562337854],
           [38.41802312342334, -14.634324093392413],
           [38.41750813929248, -14.634261808757255],
           [38.417357935587646, -14.63446942413902],
           [38.41720773188281, -14.634635516303018],
           [38.41682149378467, -14.634635516303018]]],
         [[[38.41705752817798, -14.637708198657446],
           [38.417894377390624, -14.637749721097263],
           [38.418130411783935, -14.637064599835387],
           [38.4169716974895, -14.637064599835387]]],
         [[[38.412379755656005, -14.63860092938135],
           [38.41308785883594, -14.638704735043676],
           [38.4129376551311, -14.638040377955877],
           [38.41177894083667, -14.638123422701888]]],
         [[[38.417851462046386, -14.639348329053695],
           [38.41750813929248, -14.638891585112086],
           [38.416864409128905, -14.639452134362331],
           [38.41718627421069, -14.640220292119352],
           [38.418087496439696, -14.640220292119352]]],
         [[[38.54978925034199, -15.326737654646406],
           [38.54929572388325, -15.328206959855798],
           [38.549832165686226, -15.330131527111822],
           [38.55105525299702, -15.332076770630934],
           [38.55195647522602, -15.330379857079844],
           [38.55322247788105, -15.329283064161537],
           [38.5529435281435, -15.326985988646467],
           [38.55064755722675, -15.325268339110211],
           [38.550347149817085, -15.325951261700157],
           [38.55120545670185, -15.32684112718228],
           [38.55114108368549, -15.327296405731666],
           [38.550583184210396, -15.327379183543215]]]]);




//Vamos a emplear este código para generar diréctamente lo que necesitamos para hacer las presentaciones.

//Definimos las funciones que nos calculan los indices.


//Como ahora trabajaremos con las imagenes de sentinel 2 corregidas tenemos que
//definir nuevas funciones, solo necesitamos la de RHO porque es la unica que usa B10

var RHO_Sentinel2Corregido = function(Imagen){
  
  //Introducimos una lista de las bandas para hacer el bucle
  var ListaBandas = ['B1' , 'B2' , 'B3' , 'B4' , 'B5' , 'B6' , 'B7' , 'B8' , 'B8A' ,
                     'B9' , 'B11' , 'B12'];
  //Tenemos que hacerlo para cada banda por lo que introducimos una función que nos calcule la
  //reflectancia
  var Reflectancia = function(Banda){
    
    var ImagenReflectancia = Imagen.expression('B/10000' , {
                                B : Imagen.select(Banda)
                                }).rename('rho'+Banda);
    
    return ImagenReflectancia;
  };
  
  //AHora tenemos que mapear la función a todas las bandas
  //Como las bandas estan en una lista, el resultado será una lista
  var ListaImagenesBandas = ListaBandas.map(Reflectancia);
  //Como el resultado es una lista de imagenes tenemos que concatenar las imagenes
  var reflectancias = ee.Image.cat(ListaImagenesBandas);
  
  return Imagen.addBands(reflectancias);
};


//NDVI : Normalized Diference vegetation index
var NDVI_Sentinel2 = function(Imagen){
  
  var ndvi = Imagen.expression('(NIR1-R)/(NIR1+R)' , {
                            NIR1 : Imagen.select('B8') ,
                            R : Imagen.select('B4')
                            }).rename('NDVI_S2');
  
  return Imagen.addBands(ndvi);
};

//AVI : Ashburn Vegetation Index
var AVI_Sentinel2 = function(Imagen){
  
  var avi = Imagen.expression('2*WV-R' , {
                          WV : Imagen.select('B8') ,
                          R : Imagen.select('B4')
                          }).rename('AVI_S2');
  
  return Imagen.addBands(avi);
};

var Normalized_AVI_Sentinel2 = function(Imagen){
  
  var Norm_avi = Imagen.expression('(WV-R)/(WV+R)' , {
                          WV : Imagen.select('B8') ,
                          R : Imagen.select('B4')
                          }).rename('Norm_AVI_S2');
  
  return Imagen.addBands(Norm_avi);
};

//SCI : Soil composition Index
var SCI_Sentinel2 = function(Imagen){
  
  var sci = Imagen.expression('(SWIR1-NIR1)/(SWIR1+NIR1)' , {
                        SWIR1 : Imagen.select('B11') ,
                        NIR1 : Imagen.select('B8')
                        }).rename('SCI_S2');
  
  return Imagen.addBands(sci);
};

//BAI_S2 : Burned Area Index Sentinel 2

var BAI_Sentinel2 = function(Imagen){
  
  var bai = Imagen.expression('(1-sqrt((rhoRE2*rhoRE3*rhoNIR2)/(rhoR)))*(1+(rhoSWIR2-rhoNIR2)/(sqrt(rhoSWIR2+rhoNIR2)))' , {
                        rhoRE2 : Imagen.select('rhoB6') ,
                        rhoRE3 : Imagen.select('rhoB7') ,
                        rhoNIR2 : Imagen.select('rhoB8A') ,
                        rhoR : Imagen.select('rhoB4') ,
                        rhoSWIR2 : Imagen.select('rhoB12')
                        }).rename('BAI_S2');
  
  return Imagen.addBands(bai);
};

//GEMI_S2 : Global Environment Monitoring Index Sentinel 2

var GEMI_Sentinel2 = function(Imagen){
  
  var gemi = Imagen.expression('((2*(rhoNIR2*rhoNIR2 - rhoRE1*rhoRE1) + 1.5*rhoNIR2+0.5*rhoRE1)/(rhoNIR2+rhoRE1+0.5))*(1-0.25*((2*(rhoNIR2*rhoNIR2 - rhoRE1*rhoRE1) + 1.5*rhoNIR2+0.5*rhoRE1)/(rhoNIR2+rhoRE1+0.5)))-(rhoRE1 - 0.125)/(1-rhoRE1)' , {
                      rhoNIR2 : Imagen.select('rhoB8A') ,
                      rhoRE1 : Imagen.select('rhoB5')
                      }).rename('GEMI_S2');
  
  return Imagen.addBands(gemi);
};

//NBR_S2 : Normalized burned ratio Sentinel 2

var NBR_Sentinel2 = function(Imagen){
  
  var nbr = Imagen.expression('(NIR1-SWIR2)/(NIR1+SWIR2)' , {
                  NIR1 : Imagen.select('B8') ,
                  SWIR2 : Imagen.select('B12')
                  }).rename('NBR_S2');
  
  return Imagen.addBands(nbr);
};


//Definimos un index que destaque el agua
//Normalized Difference Water Index Sentinel 2
var NDWI_Sentinel2 = function(Imagen){
  
  var ndwi = Imagen.expression('(G-NIR)/(G+NIR)' , {
                                G : Imagen.select('B3') ,
                                NIR : Imagen.select('B8')
                                }).rename('NDWI_S2');
  
  return Imagen.addBands(ndwi);
};


//Definimos un indice que destaque la sal
//NDSI_S2: Normalized Difference Salinity Index Seninel 2
var NDSI_Sentinel2 = function(Imagen){
  
  var ndsi = Imagen.expression('(SWIR1-SWIR2)/(SWIR1+SWIR2)',{
                              SWIR1 : Imagen.select('B11') ,
                              SWIR2 : Imagen.select('B12')
                              }).rename('NDSI_S2');
  
  return Imagen.addBands(ndsi);
};


//CP : Componentes principales
var CP_Sentinel2 = function(Imagen){
  //Seleccionamos las bandas
  //var B1 = Imagen.select('B1');
  var B2 = Imagen.select('B2');
  var B3 = Imagen.select('B3');
  var B4 = Imagen.select('B4');
  var B5 = Imagen.select('B5');
  var B6 = Imagen.select('B6');
  var B7 = Imagen.select('B7');
  var B8 = Imagen.select('B8');
  var B8A = Imagen.select('B8A');
  //var B9 = Imagen.select('B9');
  //var B10 = Imagen.select('B10');
  var B11 = Imagen.select('B11');
  var B12 = Imagen.select('B12');
  
  var ImagenOriginal = ee.Image.cat(B2,B3,B4,B5,B6,B7,B8,B8A,B11,B12);
  
  //Calculamos la media de cada banda
  var ImagenOriginalMedia = ImagenOriginal
                              .reduceRegion({
                                reducer : ee.Reducer.mean(),
                                maxPixels : 1e13
                                })
                              .rename(
                                      ['B2' , 'B3' , 
                                      'B4' , 'B5' , 'B6' , 
                                      'B7','B8','B8A',
                                      'B11','B12'],
                                      [
                                      //'MediaB1' , 
                                      'MediaB2' , 
                                      'MediaB3' , 
                                      'MediaB4' , 
                                      'MediaB5' , 
                                      'MediaB6' , 
                                      'MediaB7' ,
                                      'MediaB8' ,
                                      'MediaB8A' ,
                                      //'MediaB9' ,
                                      'MediaB11' ,
                                      'MediaB12'
                                      ]);
  
  //var MediaB1 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB1'])).rename('MediaB1');
  var MediaB2 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB2'])).rename('MediaB2');
  var MediaB3 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB3'])).rename('MediaB3');
  var MediaB4 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB4'])).rename('MediaB4');
  var MediaB5 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB5'])).rename('MediaB5');
  var MediaB6 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB6'])).rename('MediaB6');
  var MediaB7 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB7'])).rename('MediaB7');
  var MediaB8 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB8'])).rename('MediaB8');
  var MediaB8A = ee.Image.constant(ImagenOriginalMedia.values(['MediaB8A'])).rename('MediaB8A');
  //var MediaB9 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB9'])).rename('MediaB9');
  var MediaB11 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB11'])).rename('MediaB11');
  var MediaB12 = ee.Image.constant(ImagenOriginalMedia.values(['MediaB12'])).rename('MediaB12');
  
  
  
  var ImagenOriginalMedia = ee.Image.cat(//MediaB1 , 
                                        MediaB2 , 
                                        MediaB3 , 
                                        MediaB4 , 
                                        MediaB5 , 
                                        MediaB6 , 
                                        MediaB7 ,
                                        MediaB8 ,
                                        MediaB8A ,
                                        //MediaB9 ,
                                        MediaB11 ,
                                        MediaB12
                                        );
  
  //Vamos a calcular la media de estas imagenes en cada pixel
  
  var ImagenOriginalMediasB1B12 = Imagen.expression('(B+C+D+E+F+G+H+I+L+M)/12' , {
                                            //A : B1 ,
                                            B : B2 ,
                                            C : B3 ,
                                            D : B4 ,
                                            E : B5 ,
                                            F : B6 ,
                                            G : B7 ,
                                            H : B8 ,
                                            I : B8A ,
                                            //J : B9 ,
                                            L : B11 ,
                                            M : B12
                                            }).rename('MediaBandas1-12');
  //Ya tenemos la media de las bandas
  
  //Definimos una lista que contenga el numero de cada banda, de tal modo que podamos usar bucles del servidor
  var ListaBandas = ee.List.sequence(1,10);
  
  //Obtenemos una imagen en la que cada pixel sea un array de la imagen original
  
  //Vamos a restarle a cada elemento la media de cada pixel
  //Lo hacemos por el metodo cochino sin bucles
  
  /*
  var CentradoB1 = Imagen.expression('A-B' , {
                            A : B1 ,
                            B : ImagenOriginalMedia.select('MediaB1')
                            }).rename('CentradoB1');
  */
  var CentradoB2 = Imagen.expression('A-B' , {
                            A : B2 ,
                            B : ImagenOriginalMedia.select('MediaB2')
                            }).rename('CentradoB2');
  
  var CentradoB3 = Imagen.expression('A-B' , {
                            A : B3 ,
                            B : ImagenOriginalMedia.select('MediaB3')
                            }).rename('CentradoB3');
  
  var CentradoB4 = Imagen.expression('A-B' , {
                            A : B4 ,
                            B : ImagenOriginalMedia.select('MediaB4')
                            }).rename('CentradoB4');
  
  var CentradoB5 = Imagen.expression('A-B' , {
                            A : B5 ,
                            B : ImagenOriginalMedia.select('MediaB5')
                            }).rename('CentradoB5');
  
  var CentradoB6 = Imagen.expression('A-B' , {
                            A : B6 ,
                            B : ImagenOriginalMedia.select('MediaB6')
                            }).rename('CentradoB6');
  
  var CentradoB7 = Imagen.expression('A-B' , {
                            A : B7 ,
                            B : ImagenOriginalMedia.select('MediaB7')
                            }).rename('CentradoB7');
  
  var CentradoB8 = Imagen.expression('A-B' , {
                            A : B8 ,
                            B : ImagenOriginalMedia.select('MediaB8')
                            }).rename('CentradoB8');
  
  var CentradoB8A = Imagen.expression('A-B' , {
                            A : B8A ,
                            B : ImagenOriginalMedia.select('MediaB8A')
                            }).rename('CentradoB8A');
  /*
  var CentradoB9 = Imagen.expression('A-B' , {
                            A : B9 ,
                            B : ImagenOriginalMedia.select('MediaB9')
                            }).rename('CentradoB9');
  */
  var CentradoB11 = Imagen.expression('A-B' , {
                            A : B11 ,
                            B : ImagenOriginalMedia.select('MediaB11')
                            }).rename('CentradoB11');
  
  var CentradoB12 = Imagen.expression('A-B' , {
                            A : B12 ,
                            B : ImagenOriginalMedia.select('MediaB12')
                            }).rename('CentradoB12');
  
  
  
  var ImagenCentrada = ee.Image.cat(CentradoB2 ,
                                    CentradoB3 , CentradoB4 ,
                                    CentradoB5 , CentradoB6 ,
                                    CentradoB7 , CentradoB8 ,
                                    CentradoB8A ,
                                    CentradoB11 , CentradoB12);
  var ImagenCentradaArray = ImagenCentrada.toArray();
  //Para calcular la covarianza de las bandas usamos el reductor centeredCovariance, que toma un array
  
  var Covarianza = ImagenCentradaArray.reduceRegion({
                      reducer : ee.Reducer.centeredCovariance() ,
                      maxPixels : 1e9
                      });
  
  //Con esto cada pixel es una matriz 7x7 de covarianzas, necesitamos calcular los autovalores de cada matriz
  //Como cada punto esta como un valor debemos pasarlo a array para poder trabajar como matriz
  var CovarianzaArray = ee.Array(Covarianza.get('array'));//No se porque es asi
  var CovarianzaMatriz = CovarianzaArray;//.toArray();
  
  var AutoValoresVectores = CovarianzaMatriz.eigen();
  // Con esto ya tenemos en forma de matriz los autovalores y autovectores
  
  
  var AutoValores = AutoValoresVectores.slice(1,0,1);
  var AutoVectores = AutoValoresVectores.slice(1,1);
  
  //Pasamos a columna el array de Bandas asi cada fila es una banda y se pueden multiplicar las matrices
  var ImagenCentradaColumna = ImagenCentradaArray.toArray(1);
  //Multiplicamos la matriz 7x7 de autovectores por la matriz columna de las bandas centradas en la media
  //De este modo se obtiene en cada punto una matriz columna con cada componente
  var ComponentesPrincipales = ee.Image(AutoVectores).matrixMultiply(ImagenCentradaColumna);
  
  var Lambdas = ['Lambda1' , 'Lambda2' , 'Lambda3' ,
                'Lambda4' , 'Lambda5' , 'Lambda6' ,
                'Lambda7' , 'Lambda8' , 'Lambda9' ,
                'Lambda10'
                ];
  var ImagenAutoValoresRaiz = ee.Image(AutoValores.sqrt())
                            .arrayProject([0])//Como es una matriz columna lo pone como un array
                            .arrayFlatten([Lambdas] , '_');//El primer argumento tiene que ser una lista dentro de una lista
  //El arrayFlatten pasa la imagen de arrays a bandas de imagen
  var CPNombres = ['CP1' , 'CP2' , 'CP3' , 'CP4' , 'CP5' , 'CP6' , 'CP7' , 'CP8' , 'CP9' , 'CP10'];
  var CompoPrinci = ComponentesPrincipales
                                      .arrayProject([0])
                                      .arrayFlatten([CPNombres],'_')
                                      .divide(ImagenAutoValoresRaiz);
  
  var CPrincipales = ee.Image.cat(ImagenAutoValoresRaiz , CompoPrinci);
  //var Todas_Imagenes = ee.Image.cat(ImagenOriginalMedia , ImagenCentrada,CPrincipales,ImagenOriginalMediasB1B12);
  
  return Imagen.addBands(CPrincipales);
  
};



//La siguiente funcion elimina las nubes para las imagenes de sentinel 2A

var maskCloudAndShadowsSR = function(image) {
  var cloudProb = image.select('MSK_CLDPRB');
  var snowProb = image.select('MSK_SNWPRB');
  var cloud = cloudProb.lt(5);
  var snow = snowProb.lt(5);
  var scl = image.select('SCL'); 
  var shadow = scl.eq(3); // 3 = cloud shadow
  var cirrus = scl.eq(10); // 10 = cirrus
  var water = scl.eq(6); // 6 = water
  // Cloud probability less than 5% or cloud shadow classification
  var mask = (cloud.and(snow)).and(cirrus.neq(1)).and(shadow.neq(1)).and(water.neq(1));
  return image.updateMask(mask);
};



var TodasFuncionesNoEntrena = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  var f = function(Imagen){
  
  var ImagenFinal = maskCloudAndShadowsSR(Imagen);
  //Esta funcion requiere que ya tengan la referencia como propiedad
  var ImagenFinal = RHO_Sentinel2Corregido(ImagenFinal);
  var ImagenFinal = NDVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = AVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = Normalized_AVI_Sentinel2(ImagenFinal);
  var ImagenFinal = SCI_Sentinel2(ImagenFinal);
  var ImagenFinal = BAI_Sentinel2(ImagenFinal);
  //var ImagenFinal = dBAI_Sentinel2(ImagenFinal);
  var ImagenFinal = GEMI_Sentinel2(ImagenFinal);
  var ImagenFinal = NBR_Sentinel2(ImagenFinal);
  var ImagenFinal = NDWI_Sentinel2(ImagenFinal);
  var ImagenFinal = NDSI_Sentinel2(ImagenFinal);
  var ImagenFinal = CP_Sentinel2(ImagenFinal);
  

  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_RandomForest(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_libsvm(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_minimumDistance(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_NaiveBayes(BandasClasificar)(ImagenFinal);
  
  
  //var ImagenFinal = CuentaPixelesQuemados(ImagenFinal);
  
  //var ImagenFinal = CuentaCoincidenciaPixeles(ImagenFinal);
  
  return ImagenFinal;
  };
  
  return f;
};


var TodasFuncionesNoEntrenaSinCP = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  var f = function(Imagen){
  
  var ImagenFinal = maskCloudAndShadowsSR(Imagen);
  //Esta funcion requiere que ya tengan la referencia como propiedad
  var ImagenFinal = RHO_Sentinel2Corregido(ImagenFinal);
  var ImagenFinal = NDVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = AVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = Normalized_AVI_Sentinel2(ImagenFinal);
  var ImagenFinal = SCI_Sentinel2(ImagenFinal);
  var ImagenFinal = BAI_Sentinel2(ImagenFinal);
  //var ImagenFinal = dBAI_Sentinel2(ImagenFinal);
  var ImagenFinal = GEMI_Sentinel2(ImagenFinal);
  var ImagenFinal = NBR_Sentinel2(ImagenFinal);
  var ImagenFinal = NDWI_Sentinel2(ImagenFinal);
  var ImagenFinal = NDSI_Sentinel2(ImagenFinal);
  //var ImagenFinal = CP_Sentinel2(ImagenFinal);
  

  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_RandomForest(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_libsvm(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_minimumDistance(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_NaiveBayes(BandasClasificar)(ImagenFinal);
  
  
  //var ImagenFinal = CuentaPixelesQuemados(ImagenFinal);
  
  //var ImagenFinal = CuentaCoincidenciaPixeles(ImagenFinal);
  
  return ImagenFinal;
  };
  
  return f;
};



var CuentaPixelesValorEnGeometriaBanda = function(Imagen,Geometria,Banda,Valor){
  
  var Geometria = ee.Feature(Geometria).geometry()
  //Para contar los pixeles debemos definir un reductor, en este caso el siguiente
  var ContadorPixeles = ee.Reducer.autoHistogram({
                              maxBuckets : 20000,
                              minBucketWidth : 0.001
                              //maxRaw : 
                              });
  //Dado que este reductor devuelve un array despues tendremos que trabajar con este resultado
  //El array tiene la siguiente forma
  //Valor
  //Conteo
  
  //Pasamo la imagen a imagen ee
  var ImagenAContar = ee.Image(Imagen).select(Banda);
  //var ImagenAContar = ee.Image(Imagen).select('RandomForest'); //Este es para el clasificardor
  
  var ConteoCadaBanda = ImagenAContar.reduceRegion({
                                  reducer : ContadorPixeles ,
                                  geometry : Geometria ,
                                  scale : 20 ,
                                  //3 arguments unneeded
                                  bestEffort : true ,
                                  maxPixels : 1e13 
                                  //tileScale : NoSe
                                  });
  //Esta Variable es un diccionario con cada banda como clave del diccionario.
  //A nosostros nos interesa aquellos valores del BAI por ejemplo mayores a 0.8
  var ArrayDatos = ee.Array(ConteoCadaBanda.get(Banda));
  
  //var ArrayDatos = ee.Array(ConteoCadaBanda.get('RandomForest')); //Este es para el clasificador
  
  var Valores1 = ArrayDatos.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas1 = ArrayDatos.slice(1,1,2);//el eje 1 en el slice
  
  
  //Debemos crear una máscara que nos quite de las cuentas aquellos puntos con valores menores a 0.8
  //var ValorIncendioBAI = ee.Number(0.8);
  var ValorIncendioClase = ee.Number(Valor);
  //var ValorIncendioBAI = ee.Number(0); //Este es para el clasificador
  //var PosicionesMayores = Valores.gte(ValorIncendioBAI);
  var PosicionesMayores1 = Valores1.eq(ValorIncendioClase);
  //var PosicionesMayores2 = Valores2.eq(ValorIncendioClase);
  //var PosicionesMayores3 = Valores3.eq(ValorIncendioClase);
  //var PosicionesMayores4 = Valores4.eq(ValorIncendioClase);
  //var PosicionesMayores = Valores.eq(ValorIncendioBAI); //Este es para el clasificador
  //var Mascara = PosicionesMayores.eq(1);
  var Mascara1 = PosicionesMayores1.eq(1);
  //var Mascara2 = PosicionesMayores2.eq(1);
  //var Mascara3 = PosicionesMayores3.eq(1);
  //var Mascara4 = PosicionesMayores4.eq(1);
  
  //var CuentasPixelesQuemados = Cuentas.mask(Mascara);
  var CuentasPixelesQuemados1 = Cuentas1.mask(Mascara1);
  //var CuentasPixelesQuemados2 = Cuentas2.mask(Mascara2);
  //var CuentasPixelesQuemados3 = Cuentas3.mask(Mascara3);
  //var CuentasPixelesQuemados4 = Cuentas4.mask(Mascara4);
  
  //Para Poder sumar todos los elementos necesitamos pasarlo a lista
  //var ListaCuentasPixelesQuemados = CuentasPixelesQuemados.toList();
  var ListaCuentasPixelesQuemados1 = CuentasPixelesQuemados1.toList();
  //var ListaCuentasPixelesQuemados2 = CuentasPixelesQuemados2.toList();
  //var ListaCuentasPixelesQuemados3 = CuentasPixelesQuemados3.toList();
  //var ListaCuentasPixelesQuemados4 = CuentasPixelesQuemados4.toList();
  //Definimos el sumatorio
  var Sumatorio = function(N,N0){
    //var n = ee.Algorithms.If(N,N,ee.Number(0));
    var n = ee.List(N).get(0);
    //var n0 = ee.Algorithms.If(N0,N0,ee.Number(0));
    var N1 = ee.Number(n).add(ee.Number(N0));
    return N1;
    };
  //Iteramos en la lista para que nos sume todos los pixeles incendiados
  //var CantidadPixelesQuemados = ee.Number(ListaCuentasPixelesQuemados.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados1 = ee.Number(ListaCuentasPixelesQuemados1.iterate(Sumatorio,ee.Number(0)));
  //var CantidadPixelesQuemados2 = ee.Number(ListaCuentasPixelesQuemados2.iterate(Sumatorio,ee.Number(0)));
  //var CantidadPixelesQuemados3 = ee.Number(ListaCuentasPixelesQuemados3.iterate(Sumatorio,ee.Number(0)));
  //var CantidadPixelesQuemados4 = ee.Number(ListaCuentasPixelesQuemados4.iterate(Sumatorio,ee.Number(0)));
  
  return ee.Number(CantidadPixelesQuemados1);
};





var ClasificaImagen_Sentinel2Corregido_RandomForest = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.smileRandomForest(
      {
        'numberOfTrees' : Parametros.get('numberOfTrees'),
        'variablesPerSplit' : Parametros.get('variablesPerSplit'),
        'minLeafPopulation' : Parametros.get('minLeafPopulation'),
        'bagFraction' : Parametros.get('bagFraction'),
        'maxNodes' : Parametros.get('maxNodes'),
        'seed' : Parametros.get('seed')
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    
    


		var Parametros1 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros2 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros3 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros4 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros5 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.5,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros6 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros7 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.2,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros8 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.1,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros9 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.1,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros10 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.5,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros11 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : null,
			"seed" : 100,
		};


		var Parametros12 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros13 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.1,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros14 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.1,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros15 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.2,
			"maxNodes" : null,
			"seed" : 100,
		};


		var Parametros16 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.5,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros17 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.5,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros18 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : null,
			"seed" : 100,
		};


		var Parametros19 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.5,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros20 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.5,
			"maxNodes" : 10,
			"seed" : 100,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			Parametros3,
			Parametros4,
			Parametros5,
			Parametros6,
			Parametros7,
			Parametros8,
			Parametros9,
			Parametros10,
			Parametros11,
			Parametros12,
			Parametros13,
			Parametros14,
			Parametros15,
			Parametros16,
			Parametros17,
			Parametros18,
			Parametros19,
			Parametros20,
		];
    
    
    
    
    
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrena(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'RandomForest'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    
    
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    
    //print(ListaExactitud);
    //print(Indice);
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'RandomForest');
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_RandomForest',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    
    return Imagen;
    };
  
  
  return f;
};


var ClasificaImagen_Sentinel2Corregido_libsvm = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.libsvm(
      {
        'decisionProcedure' : Parametros.get('decisionProcedure'),
        'svmType' : Parametros.get('svmType'),
        'kernelType' : Parametros.get('kernelType'),
        'shrinking' : Parametros.get('shrinking'),
        'degree' : Parametros.get('degree'),
        'gamma' : Parametros.get('gamma'),
        'coef0' : Parametros.get('coef0'),
        'cost' : Parametros.get('cost'),
        'nu' : Parametros.get('nu'),
        'terminationEpsilon' : Parametros.get('terminationEpsilon'),
        'lossEpsilon' : Parametros.get('lossEpsilon'),
        'oneClass' : Parametros.get('oneClass')
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    
		var Parametros1 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.1,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros2 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 2,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros3 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 7,
			"gamma" : 0.5,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros4 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.001,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros5 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.1,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros6 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.5,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros7 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 2,
			"gamma" : 0.5,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros8 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 2,
			"gamma" : 0.001,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros9 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.1,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros10 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.5,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros11 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.001,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros12 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 2,
			"gamma" : 0.1,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros13 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.5,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros14 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 7,
			"gamma" : 0.1,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros15 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.001,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros16 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 2,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			Parametros3,
			Parametros4,
			Parametros5,
			Parametros6,
			Parametros7,
			Parametros8,
			Parametros9,
			Parametros10,
			Parametros11,
			Parametros12,
			Parametros13,
			Parametros14,
			Parametros15,
			Parametros16,
		];
		
		
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrena(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'SVM'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'SVM');
    
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_SVM',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    return Imagen;
    };
  
  
  return f;
};



var ClasificaImagen_Sentinel2Corregido_minimumDistance = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.minimumDistance(
      {
        'metric' : Parametros.get('metric'),
        'kNearest' : Parametros.get('kNearest'),
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    

		var Parametros1 = {
			"metric" : "euclidean",
			"kNearest" : 1,
		};


		var Parametros2 = {
			"metric" : "cosine",
			"kNearest" : 1,
		};


		var Parametros3 = {
			"metric" : "mahalanobis",
			"kNearest" : 1,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			//Parametros3,
		];
    
    
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrena(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'MinimumDistance'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'MinimumDistance');
    
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_minimumDistance',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    return Imagen;
    };
  
  
  return f;
};



var ClasificaImagen_Sentinel2Corregido_NaiveBayes = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.smileNaiveBayes(
      {
        'lambda' : Parametros.get('lambda'),
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    

		var Parametros1 = {
			"lambda" : 1e-6,
		};


		var Parametros2 = {
			"lambda" : 10,
		};


		var Parametros3 = {
			"lambda" : 0.1,
		};


		var Parametros4 = {
			"lambda" : 0.5,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			Parametros3,
			Parametros4,
		];
    
    
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrena(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'NaiveBayes'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'NaiveBayes');
    
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_NaiveBayes',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    return Imagen;
    };
  
  
  return f;
};








var ClasificaImagen_Sentinel2Corregido_RandomForest_Final = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.smileRandomForest(
      {
        'numberOfTrees' : Parametros.get('numberOfTrees'),
        'variablesPerSplit' : Parametros.get('variablesPerSplit'),
        'minLeafPopulation' : Parametros.get('minLeafPopulation'),
        'bagFraction' : Parametros.get('bagFraction'),
        'maxNodes' : Parametros.get('maxNodes'),
        'seed' : Parametros.get('seed')
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    
    


		var Parametros1 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros2 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros3 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros4 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros5 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.5,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros6 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros7 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.2,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros8 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.1,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros9 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.1,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros10 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.5,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros11 = {
			"numberOfTrees" : 50,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : null,
			"seed" : 100,
		};


		var Parametros12 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros13 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.1,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros14 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.1,
			"maxNodes" : 5,
			"seed" : 100,
		};


		var Parametros15 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.2,
			"maxNodes" : null,
			"seed" : 100,
		};


		var Parametros16 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.5,
			"maxNodes" : 10,
			"seed" : 100,
		};


		var Parametros17 = {
			"numberOfTrees" : 10,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 20,
			"bagFraction" : 0.5,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros18 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.2,
			"maxNodes" : null,
			"seed" : 100,
		};


		var Parametros19 = {
			"numberOfTrees" : 500,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 1,
			"bagFraction" : 0.5,
			"maxNodes" : 100,
			"seed" : 100,
		};


		var Parametros20 = {
			"numberOfTrees" : 5,
			"variablesPerSplit" : null,
			"minLeafPopulation" : 50,
			"bagFraction" : 0.5,
			"maxNodes" : 10,
			"seed" : 100,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			Parametros3,
			Parametros4,
			Parametros5,
			Parametros6,
			Parametros7,
			Parametros8,
			Parametros9,
			Parametros10,
			Parametros11,
			Parametros12,
			Parametros13,
			Parametros14,
			Parametros15,
			Parametros16,
			Parametros17,
			Parametros18,
			Parametros19,
			Parametros20,
		];
    
    
    
    
    
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrenaSinCP(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'RandomForest'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'RandomForest',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'RandomForest',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'RandomForest',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'RandomForest',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    
    
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    
    //print(ListaExactitud);
    //print(Indice);
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'RandomForest');
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_RandomForest',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    
    return Imagen;
    };
  
  
  return f;
};


var ClasificaImagen_Sentinel2Corregido_libsvm_Final = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.libsvm(
      {
        'decisionProcedure' : Parametros.get('decisionProcedure'),
        'svmType' : Parametros.get('svmType'),
        'kernelType' : Parametros.get('kernelType'),
        'shrinking' : Parametros.get('shrinking'),
        'degree' : Parametros.get('degree'),
        'gamma' : Parametros.get('gamma'),
        'coef0' : Parametros.get('coef0'),
        'cost' : Parametros.get('cost'),
        'nu' : Parametros.get('nu'),
        'terminationEpsilon' : Parametros.get('terminationEpsilon'),
        'lossEpsilon' : Parametros.get('lossEpsilon'),
        'oneClass' : Parametros.get('oneClass')
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    
		var Parametros1 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.1,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros2 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 2,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros3 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 7,
			"gamma" : 0.5,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros4 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.001,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros5 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.1,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros6 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.5,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros7 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 2,
			"gamma" : 0.5,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros8 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 2,
			"gamma" : 0.001,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros9 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.1,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros10 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.5,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros11 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.001,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros12 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 2,
			"gamma" : 0.1,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros13 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 0.5,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros14 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 7,
			"gamma" : 0.1,
			"coef0" : 0.001,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros15 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 4,
			"gamma" : 0.001,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};


		var Parametros16 = {
			"decisionProcedure" : "Voting",
			"svmType" : "C_SVC",
			"kernelType" : "POLY",
			"shrinking" : true,
			"degree" : 3,
			"gamma" : 2,
			"coef0" : 5.0,
			"cost" : null,
			"nu" : null,
			"terminationEpsilon" : null,
			"lossEpsilon" : null,
			"oneClass" : null,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			Parametros3,
			Parametros4,
			Parametros5,
			Parametros6,
			Parametros7,
			Parametros8,
			Parametros9,
			Parametros10,
			Parametros11,
			Parametros12,
			Parametros13,
			Parametros14,
			Parametros15,
			Parametros16,
		];
		
		
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrenaSinCP(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'SVM'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'SVM',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'SVM',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'SVM',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'SVM',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'SVM');
    
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_SVM',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    return Imagen;
    };
  
  
  return f;
};



var ClasificaImagen_Sentinel2Corregido_minimumDistance_Final = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.minimumDistance(
      {
        'metric' : Parametros.get('metric'),
        'kNearest' : Parametros.get('kNearest'),
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    

		var Parametros1 = {
			"metric" : "euclidean",
			"kNearest" : 1,
		};


		var Parametros2 = {
			"metric" : "cosine",
			"kNearest" : 1,
		};


		var Parametros3 = {
			"metric" : "mahalanobis",
			"kNearest" : 1,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			//Parametros3,
		];
    
    
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrenaSinCP(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'MinimumDistance'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'MinimumDistance',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'MinimumDistance',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'MinimumDistance',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'MinimumDistance',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'MinimumDistance');
    
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_minimumDistance',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    return Imagen;
    };
  
  
  return f;
};



var ClasificaImagen_Sentinel2Corregido_NaiveBayes_Final = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  //Definimos la imagen de referencia
  var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');
  //Le aplicamos los indice
  var ImagenEntrenamiento = RHO_Sentinel2Corregido(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = AVI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = Normalized_AVI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = SCI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = BAI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = dBAI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = GEMI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NBR_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDWI_Sentinel2(ImagenEntrenamiento);
  var ImagenEntrenamiento = NDSI_Sentinel2(ImagenEntrenamiento);
  //var ImagenEntrenamiento = CP_Sentinel2(ImagenEntrenamiento);
  
  var EntrenaClasificador = function(Parametros){
    var Parametros = ee.Dictionary(Parametros);
    var Clasificador = ee.Classifier.smileNaiveBayes(
      {
        'lambda' : Parametros.get('lambda'),
      }
    );
    //Estraemos los puntos de entrenamiento:
    var PuntosEntrenamiento = ImagenEntrenamiento.sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,
                                                            Vegetacion,
                                                            ZonaSeca,
                                                            Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
    //Definimos las bandas de entrenamientos
    var BandasEntrenamiento = ee.List(BandasClasificar);
    //Definimos el modo de clasificacion
    var Clasificador = Clasificador.setOutputMode('CLASSIFICATION');
    //Entrenamos el clasificador
    var Clasificador = Clasificador.train({
                                features : PuntosEntrenamiento ,
                                classProperty : 'Clase' ,
                                inputProperties : BandasEntrenamiento
                                });
    
    return Clasificador;
  };
  
  var DevuelveMejoresParametros = function(){
    
    
    

		var Parametros1 = {
			"lambda" : 1e-6,
		};


		var Parametros2 = {
			"lambda" : 10,
		};


		var Parametros3 = {
			"lambda" : 0.1,
		};


		var Parametros4 = {
			"lambda" : 0.5,
		};

		var Lista = [
			Parametros1,
			Parametros2,
			Parametros3,
			Parametros4,
		];
    
    
    var ExactitudGlobal = function(Parametros){
      var ImagenValidacion = ee.Image(TodasFuncionesNoEntrenaSinCP(BandasClasificar)(ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE')));
      var ImagenValidacion = ImagenValidacion.classify(
        EntrenaClasificador(Parametros),
        'NaiveBayes'
        );
      
      
      var M00 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        0
        );
      
      var M01 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        0
        );
      
      var M02 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        0
        );
      
      var M03 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        0
        );
      
      
      var M10 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        1
        );
      
      var M11 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        1
        );
      
      var M12 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        1
        );
      
      var M13 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        1
        );
      
      
      var M20 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        2
        );
      
      var M21 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        2
        );
      
      var M22 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        2
        );
      
      var M23 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        2
        );
      
      
      var M30 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionIncendio,
        'NaiveBayes',
        3
        );
      
      var M31 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionVegetacion,
        'NaiveBayes',
        3
        );
      
      var M32 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionZonaSeca,
        'NaiveBayes',
        3
        );
      
      var M33 = CuentaPixelesValorEnGeometriaBanda(
        ImagenValidacion,
        ValidacionRoca,
        'NaiveBayes',
        3
        );
      
      
      var SumaC0 = M00.add(M10).add(M20).add(M30);
      var SumaC1 = M10.add(M11).add(M21).add(M31);
      var SumaC2 = M20.add(M21).add(M22).add(M32);
      var SumaC3 = M30.add(M31).add(M33).add(M33);
      
      var SumaF0 = M00.add(M01).add(M02).add(M03);
      var SumaF1 = M10.add(M11).add(M12).add(M13);
      var SumaF2 = M20.add(M21).add(M22).add(M23);
      var SumaF3 = M30.add(M31).add(M32).add(M33);
      
      var SumaTotal = SumaF0.add(SumaF1).add(SumaF2).add(SumaF3);
      var SumaDiagonal = M00.add(M11).add(M22).add(M33);
      //var Matriz = EntrenaClasificador(Parametros).confusionMatrix();
      //print(M00);
      //print(M01);
      //print(M11);
      //print(M10);
      var Exactitud = SumaDiagonal.divide(SumaTotal);
      var EC0 = M00.divide(SumaC0);
      var EC1 = M11.divide(SumaC1);
      var EC2 = M22.divide(SumaC2);
      var EC3 = M33.divide(SumaC3);
      
      var EO0 = M00.divide(SumaF0);
      var EO1 = M11.divide(SumaF1);
      var EO2 = M22.divide(SumaF2);
      var EO3 = M33.divide(SumaF3);
      
      return Exactitud;
    };
    
    var ListaExactitud = Lista.map(ExactitudGlobal);
    //var PruebaPrint = ExactitudGlobal(ee.Dictionary(Lista.get(3)));
    var Indice = ee.List(ListaExactitud).indexOf(
        ee.Number(
            ee.List(ListaExactitud).reduce(
              ee.Reducer.max()
            )
          )
        );
    
    var MejoresParametros = ee.Dictionary(ee.List(Lista).get(Indice));
    
    return MejoresParametros;
  };
  
  
  
  var f = function(Imagen){
    
    var MejoresParametros = DevuelveMejoresParametros();
    var ClasificadorEntrenado = EntrenaClasificador(MejoresParametros);
    
    var ImagenClasificada = Imagen.classify(ClasificadorEntrenado,'NaiveBayes');
    
    //Añadimos la clasificacion como banda
    var Imagen = Imagen.addBands(ImagenClasificada);
    //Además añadimos la matriz de confusión y datos de la clasificacion como propiedades de la imagen
    //var Imagen = Imagen.set('MatrizConfusion_NaiveBayes',ClasificadorEntrenado.confusionMatrix());
    //var ImagenNueva = ImagenNueva.set()
    
    return Imagen;
    };
  
  
  return f;
};






var CuentaPixelesQuemados = function(Imagen){
  
  
  //Para contar los pixeles debemos definir un reductor, en este caso el siguiente
  var ContadorPixeles = ee.Reducer.autoHistogram({
                              maxBuckets : 20000,
                              minBucketWidth : 0.001
                              //maxRaw : 
                              });
  //Dado que este reductor devuelve un array despues tendremos que trabajar con este resultado
  //El array tiene la siguiente forma
  //Valor
  //Conteo
  
  //Pasamo la imagen a imagen ee
  var ImagenAContar = ee.Image(Imagen).select('BAI_S2','RandomForest','SVM','MinimumDistance','NaiveBayes');
  //var ImagenAContar = ee.Image(Imagen).select('RandomForest'); //Este es para el clasificardor
  
  var ConteoCadaBanda = ImagenAContar.reduceRegion({
                                  reducer : ContadorPixeles ,
                                  geometry : ee.Geometry.Polygon(
                                                    ee.Geometry(
                                                          Imagen.get('system:footprint')
                                                      ).coordinates()
                                                  ) ,
                                  scale : 20 ,
                                  //3 arguments unneeded
                                  bestEffort : true ,
                                  maxPixels : 1e13 
                                  //tileScale : NoSe
                                  });
  //Esta Variable es un diccionario con cada banda como clave del diccionario.
  //A nosostros nos interesa aquellos valores del BAI por ejemplo mayores a 0.8
  var ArrayDatos = ee.Array(ConteoCadaBanda.get('BAI_S2'));
  var ArrayDatos1 = ee.Array(ConteoCadaBanda.get('RandomForest'));
  var ArrayDatos2 = ee.Array(ConteoCadaBanda.get('SVM'));
  var ArrayDatos3 = ee.Array(ConteoCadaBanda.get('MinimumDistance'));
  var ArrayDatos4 = ee.Array(ConteoCadaBanda.get('NaiveBayes'));
  //var ArrayDatos = ee.Array(ConteoCadaBanda.get('RandomForest')); //Este es para el clasificador
  
  var Valores = ArrayDatos.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas = ArrayDatos.slice(1,1,2);//el eje 1 en el slice
  
  var Valores1 = ArrayDatos1.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas1 = ArrayDatos1.slice(1,1,2);//el eje 1 en el slice
  
  var Valores2 = ArrayDatos2.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas2 = ArrayDatos2.slice(1,1,2);//el eje 1 en el slice
  
  var Valores3 = ArrayDatos3.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas3 = ArrayDatos3.slice(1,1,2);//el eje 1 en el slice
  
  var Valores4 = ArrayDatos4.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas4 = ArrayDatos4.slice(1,1,2);//el eje 1 en el slice
  
  
  //Debemos crear una máscara que nos quite de las cuentas aquellos puntos con valores menores a 0.8
  var ValorIncendioBAI = ee.Number(0.8);
  var ValorIncendioClase = ee.Number(0);
  //var ValorIncendioBAI = ee.Number(0); //Este es para el clasificador
  var PosicionesMayores = Valores.gte(ValorIncendioBAI);
  var PosicionesMayores1 = Valores1.eq(ValorIncendioClase);
  var PosicionesMayores2 = Valores2.eq(ValorIncendioClase);
  var PosicionesMayores3 = Valores3.eq(ValorIncendioClase);
  var PosicionesMayores4 = Valores4.eq(ValorIncendioClase);
  //var PosicionesMayores = Valores.eq(ValorIncendioBAI); //Este es para el clasificador
  var Mascara = PosicionesMayores.eq(1);
  var Mascara1 = PosicionesMayores1.eq(1);
  var Mascara2 = PosicionesMayores2.eq(1);
  var Mascara3 = PosicionesMayores3.eq(1);
  var Mascara4 = PosicionesMayores4.eq(1);
  
  var CuentasPixelesQuemados = Cuentas.mask(Mascara);
  var CuentasPixelesQuemados1 = Cuentas1.mask(Mascara1);
  var CuentasPixelesQuemados2 = Cuentas2.mask(Mascara2);
  var CuentasPixelesQuemados3 = Cuentas3.mask(Mascara3);
  var CuentasPixelesQuemados4 = Cuentas4.mask(Mascara4);
  
  //Para Poder sumar todos los elementos necesitamos pasarlo a lista
  var ListaCuentasPixelesQuemados = CuentasPixelesQuemados.toList();
  var ListaCuentasPixelesQuemados1 = CuentasPixelesQuemados1.toList();
  var ListaCuentasPixelesQuemados2 = CuentasPixelesQuemados2.toList();
  var ListaCuentasPixelesQuemados3 = CuentasPixelesQuemados3.toList();
  var ListaCuentasPixelesQuemados4 = CuentasPixelesQuemados4.toList();
  //Definimos el sumatorio
  var Sumatorio = function(N,N0){
    //var n = ee.Algorithms.If(N,N,ee.Number(0));
    var n = ee.List(N).get(0);
    //var n0 = ee.Algorithms.If(N0,N0,ee.Number(0));
    var N1 = ee.Number(n).add(ee.Number(N0));
    return N1;
    };
  //Iteramos en la lista para que nos sume todos los pixeles incendiados
  var CantidadPixelesQuemados = ee.Number(ListaCuentasPixelesQuemados.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados1 = ee.Number(ListaCuentasPixelesQuemados1.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados2 = ee.Number(ListaCuentasPixelesQuemados2.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados3 = ee.Number(ListaCuentasPixelesQuemados3.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados4 = ee.Number(ListaCuentasPixelesQuemados4.iterate(Sumatorio,ee.Number(0)));
  
  var DiccionarioDatos = ee.Dictionary({
                            'CantidadPixelesQuemados_BAI' : CantidadPixelesQuemados ,
                            'AreaQuemada_m2_BAI' : CantidadPixelesQuemados.multiply(400) ,
                            'AreaQuemada_km2_BAI' : CantidadPixelesQuemados.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_RandomForest' : CantidadPixelesQuemados1 ,
                            'AreaQuemada_m2_RandomForest' : CantidadPixelesQuemados1.multiply(400) ,
                            'AreaQuemada_km2_RandomForest' : CantidadPixelesQuemados1.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_SVM' : CantidadPixelesQuemados2 ,
                            'AreaQuemada_m2_SVM' : CantidadPixelesQuemados2.multiply(400) ,
                            'AreaQuemada_km2_SVM' : CantidadPixelesQuemados2.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_MinimumDistance' : CantidadPixelesQuemados3 ,
                            'AreaQuemada_m2_MinimumDistance' : CantidadPixelesQuemados3.multiply(400) ,
                            'AreaQuemada_km2_MinimumDistance' : CantidadPixelesQuemados3.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_NaiveBayes' : CantidadPixelesQuemados4 ,
                            'AreaQuemada_m2_NaiveBayes' : CantidadPixelesQuemados4.multiply(400) ,
                            'AreaQuemada_km2_NaiveBayes' : CantidadPixelesQuemados4.multiply(400).divide(1e6) ,
                            
                            'AreaImagen_m2' : ee.Number(
                                                ee.Geometry.Polygon(
                                                    ee.Geometry(
                                                          Imagen.get('system:footprint')
                                                      ).coordinates()
                                                  ).area()
                                                )
                            });
  
  return Imagen.set(DiccionarioDatos);
};




var CuentaPixelesQuemadosEnGeometria = function(Imagen,Geometria){
  
  if (Geometria === 0){
    return 0;
  }
  
  //Para contar los pixeles debemos definir un reductor, en este caso el siguiente
  var ContadorPixeles = ee.Reducer.autoHistogram({
                              maxBuckets : 20000,
                              minBucketWidth : 0.001
                              //maxRaw : 
                              });
  //Dado que este reductor devuelve un array despues tendremos que trabajar con este resultado
  //El array tiene la siguiente forma
  //Valor
  //Conteo
  
  //Pasamo la imagen a imagen ee
  var ImagenAContar = ee.Image(Imagen).select('BAI_S2','RandomForest','SVM','MinimumDistance','NaiveBayes');
  //var ImagenAContar = ee.Image(Imagen).select('RandomForest'); //Este es para el clasificardor
  
  var ConteoCadaBanda = ImagenAContar.reduceRegion({
                                  reducer : ContadorPixeles ,
                                  geometry : Geometria ,
                                  scale : 20 ,
                                  //3 arguments unneeded
                                  bestEffort : true ,
                                  maxPixels : 1e13 
                                  //tileScale : NoSe
                                  });
  //Esta Variable es un diccionario con cada banda como clave del diccionario.
  //A nosostros nos interesa aquellos valores del BAI por ejemplo mayores a 0.8
  var ArrayDatos = ee.Array(ConteoCadaBanda.get('BAI_S2'));
  var ArrayDatos1 = ee.Array(ConteoCadaBanda.get('RandomForest'));
  var ArrayDatos2 = ee.Array(ConteoCadaBanda.get('SVM'));
  var ArrayDatos3 = ee.Array(ConteoCadaBanda.get('MinimumDistance'));
  var ArrayDatos4 = ee.Array(ConteoCadaBanda.get('NaiveBayes'));
  //var ArrayDatos = ee.Array(ConteoCadaBanda.get('RandomForest')); //Este es para el clasificador
  
  var Valores = ArrayDatos.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas = ArrayDatos.slice(1,1,2);//el eje 1 en el slice
  
  var Valores1 = ArrayDatos1.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas1 = ArrayDatos1.slice(1,1,2);//el eje 1 en el slice
  
  var Valores2 = ArrayDatos2.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas2 = ArrayDatos2.slice(1,1,2);//el eje 1 en el slice
  
  var Valores3 = ArrayDatos3.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas3 = ArrayDatos3.slice(1,1,2);//el eje 1 en el slice
  
  var Valores4 = ArrayDatos4.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas4 = ArrayDatos4.slice(1,1,2);//el eje 1 en el slice
  
  
  //Debemos crear una máscara que nos quite de las cuentas aquellos puntos con valores menores a 0.8
  var ValorIncendioBAI = ee.Number(0.8);
  var ValorIncendioClase = ee.Number(0);
  //var ValorIncendioBAI = ee.Number(0); //Este es para el clasificador
  var PosicionesMayores = Valores.gte(ValorIncendioBAI);
  var PosicionesMayores1 = Valores1.eq(ValorIncendioClase);
  var PosicionesMayores2 = Valores2.eq(ValorIncendioClase);
  var PosicionesMayores3 = Valores3.eq(ValorIncendioClase);
  var PosicionesMayores4 = Valores4.eq(ValorIncendioClase);
  //var PosicionesMayores = Valores.eq(ValorIncendioBAI); //Este es para el clasificador
  var Mascara = PosicionesMayores.eq(1);
  var Mascara1 = PosicionesMayores1.eq(1);
  var Mascara2 = PosicionesMayores2.eq(1);
  var Mascara3 = PosicionesMayores3.eq(1);
  var Mascara4 = PosicionesMayores4.eq(1);
  
  var CuentasPixelesQuemados = Cuentas.mask(Mascara);
  var CuentasPixelesQuemados1 = Cuentas1.mask(Mascara1);
  var CuentasPixelesQuemados2 = Cuentas2.mask(Mascara2);
  var CuentasPixelesQuemados3 = Cuentas3.mask(Mascara3);
  var CuentasPixelesQuemados4 = Cuentas4.mask(Mascara4);
  
  //Para Poder sumar todos los elementos necesitamos pasarlo a lista
  var ListaCuentasPixelesQuemados = CuentasPixelesQuemados.toList();
  var ListaCuentasPixelesQuemados1 = CuentasPixelesQuemados1.toList();
  var ListaCuentasPixelesQuemados2 = CuentasPixelesQuemados2.toList();
  var ListaCuentasPixelesQuemados3 = CuentasPixelesQuemados3.toList();
  var ListaCuentasPixelesQuemados4 = CuentasPixelesQuemados4.toList();
  //Definimos el sumatorio
  var Sumatorio = function(N,N0){
    //var n = ee.Algorithms.If(N,N,ee.Number(0));
    var n = ee.List(N).get(0);
    //var n0 = ee.Algorithms.If(N0,N0,ee.Number(0));
    var N1 = ee.Number(n).add(ee.Number(N0));
    return N1;
    };
  //Iteramos en la lista para que nos sume todos los pixeles incendiados
  var CantidadPixelesQuemados = ee.Number(ListaCuentasPixelesQuemados.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados1 = ee.Number(ListaCuentasPixelesQuemados1.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados2 = ee.Number(ListaCuentasPixelesQuemados2.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados3 = ee.Number(ListaCuentasPixelesQuemados3.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados4 = ee.Number(ListaCuentasPixelesQuemados4.iterate(Sumatorio,ee.Number(0)));
  
  var DiccionarioDatos = ee.Dictionary({
                            'CantidadPixelesQuemados_BAI' : CantidadPixelesQuemados ,
                            'AreaQuemada_m2_BAI' : CantidadPixelesQuemados.multiply(400) ,
                            'AreaQuemada_km2_BAI' : CantidadPixelesQuemados.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_RandomForest' : CantidadPixelesQuemados1 ,
                            'AreaQuemada_m2_RandomForest' : CantidadPixelesQuemados1.multiply(400) ,
                            'AreaQuemada_km2_RandomForest' : CantidadPixelesQuemados1.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_SVM' : CantidadPixelesQuemados2 ,
                            'AreaQuemada_m2_SVM' : CantidadPixelesQuemados2.multiply(400) ,
                            'AreaQuemada_km2_SVM' : CantidadPixelesQuemados2.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_MinimumDistance' : CantidadPixelesQuemados3 ,
                            'AreaQuemada_m2_MinimumDistance' : CantidadPixelesQuemados3.multiply(400) ,
                            'AreaQuemada_km2_MinimumDistance' : CantidadPixelesQuemados3.multiply(400).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_NaiveBayes' : CantidadPixelesQuemados4 ,
                            'AreaQuemada_m2_NaiveBayes' : CantidadPixelesQuemados4.multiply(400) ,
                            'AreaQuemada_km2_NaiveBayes' : CantidadPixelesQuemados4.multiply(400).divide(1e6) ,
                            
                            'AreaImagen_m2' : ee.Number(
                                                ee.Geometry.Polygon(
                                                    ee.Geometry(
                                                          Imagen.get('system:footprint')
                                                      ).coordinates()
                                                  ).area()
                                                )
                            });
  
  return DiccionarioDatos;
};


var CuentaPixelesQuemadosEnGeometriaImagenFinal = function(Imagen,Geometria){
  
  if (Geometria === 0){
    return 0;
  }
  
  var PixelSize = 20;
  var Area = 400;
  
  //Para contar los pixeles debemos definir un reductor, en este caso el siguiente
  var ContadorPixeles = ee.Reducer.autoHistogram({
                              maxBuckets : 20000,
                              minBucketWidth : 0.001
                              //maxRaw : 
                              });
  //Dado que este reductor devuelve un array despues tendremos que trabajar con este resultado
  //El array tiene la siguiente forma
  //Valor
  //Conteo
  
  //Pasamo la imagen a imagen ee
  var ImagenAContar = ee.Image(Imagen).select('BAI_S2','RandomForest','SVM','MinimumDistance','NaiveBayes');
  //var ImagenAContar = ee.Image(Imagen).select('RandomForest'); //Este es para el clasificardor
  
  var ConteoCadaBanda = ImagenAContar.reduceRegion({
                                  reducer : ContadorPixeles ,
                                  geometry : Geometria ,
                                  scale : PixelSize ,
                                  //3 arguments unneeded
                                  bestEffort : true ,
                                  maxPixels : 1e13 
                                  //tileScale : NoSe
                                  });
  //Esta Variable es un diccionario con cada banda como clave del diccionario.
  //A nosostros nos interesa aquellos valores del BAI por ejemplo mayores a 0.8
  var ArrayDatos = ee.Array(ConteoCadaBanda.get('BAI_S2'));
  var ArrayDatos1 = ee.Array(ConteoCadaBanda.get('RandomForest'));
  var ArrayDatos2 = ee.Array(ConteoCadaBanda.get('SVM'));
  var ArrayDatos3 = ee.Array(ConteoCadaBanda.get('MinimumDistance'));
  var ArrayDatos4 = ee.Array(ConteoCadaBanda.get('NaiveBayes'));
  //var ArrayDatos = ee.Array(ConteoCadaBanda.get('RandomForest')); //Este es para el clasificador
  
  var Valores = ArrayDatos.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas = ArrayDatos.slice(1,1,2);//el eje 1 en el slice
  
  var Valores1 = ArrayDatos1.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas1 = ArrayDatos1.slice(1,1,2);//el eje 1 en el slice
  
  var Valores2 = ArrayDatos2.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas2 = ArrayDatos2.slice(1,1,2);//el eje 1 en el slice
  
  var Valores3 = ArrayDatos3.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas3 = ArrayDatos3.slice(1,1,2);//el eje 1 en el slice
  
  var Valores4 = ArrayDatos4.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
  var Cuentas4 = ArrayDatos4.slice(1,1,2);//el eje 1 en el slice
  
  
  //Debemos crear una máscara que nos quite de las cuentas aquellos puntos con valores menores a 0.8
  var ValorIncendioBAI = ee.Number(0.8);
  var ValorIncendioClase = ee.Number(0);
  //var ValorIncendioBAI = ee.Number(0); //Este es para el clasificador
  var PosicionesMayores = Valores.gte(ValorIncendioBAI);
  var PosicionesMayores1 = Valores1.eq(ValorIncendioClase);
  var PosicionesMayores2 = Valores2.eq(ValorIncendioClase);
  var PosicionesMayores3 = Valores3.eq(ValorIncendioClase);
  var PosicionesMayores4 = Valores4.eq(ValorIncendioClase);
  //var PosicionesMayores = Valores.eq(ValorIncendioBAI); //Este es para el clasificador
  var Mascara = PosicionesMayores.eq(1);
  var Mascara1 = PosicionesMayores1.eq(1);
  var Mascara2 = PosicionesMayores2.eq(1);
  var Mascara3 = PosicionesMayores3.eq(1);
  var Mascara4 = PosicionesMayores4.eq(1);
  
  var CuentasPixelesQuemados = Cuentas.mask(Mascara);
  var CuentasPixelesQuemados1 = Cuentas1.mask(Mascara1);
  var CuentasPixelesQuemados2 = Cuentas2.mask(Mascara2);
  var CuentasPixelesQuemados3 = Cuentas3.mask(Mascara3);
  var CuentasPixelesQuemados4 = Cuentas4.mask(Mascara4);
  
  //Para Poder sumar todos los elementos necesitamos pasarlo a lista
  var ListaCuentasPixelesQuemados = CuentasPixelesQuemados.toList();
  var ListaCuentasPixelesQuemados1 = CuentasPixelesQuemados1.toList();
  var ListaCuentasPixelesQuemados2 = CuentasPixelesQuemados2.toList();
  var ListaCuentasPixelesQuemados3 = CuentasPixelesQuemados3.toList();
  var ListaCuentasPixelesQuemados4 = CuentasPixelesQuemados4.toList();
  //Definimos el sumatorio
  var Sumatorio = function(N,N0){
    //var n = ee.Algorithms.If(N,N,ee.Number(0));
    var n = ee.List(N).get(0);
    //var n0 = ee.Algorithms.If(N0,N0,ee.Number(0));
    var N1 = ee.Number(n).add(ee.Number(N0));
    return N1;
    };
  //Iteramos en la lista para que nos sume todos los pixeles incendiados
  var CantidadPixelesQuemados = ee.Number(ListaCuentasPixelesQuemados.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados1 = ee.Number(ListaCuentasPixelesQuemados1.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados2 = ee.Number(ListaCuentasPixelesQuemados2.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados3 = ee.Number(ListaCuentasPixelesQuemados3.iterate(Sumatorio,ee.Number(0)));
  var CantidadPixelesQuemados4 = ee.Number(ListaCuentasPixelesQuemados4.iterate(Sumatorio,ee.Number(0)));
  
  
  var DiccionarioDatos = ee.Dictionary({
                            'CantidadPixelesQuemados_BAI' : CantidadPixelesQuemados ,
                            'AreaQuemada_m2_BAI' : CantidadPixelesQuemados.multiply(Area) ,
                            'AreaQuemada_km2_BAI' : CantidadPixelesQuemados.multiply(Area).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_RandomForest' : CantidadPixelesQuemados1 ,
                            'AreaQuemada_m2_RandomForest' : CantidadPixelesQuemados1.multiply(Area) ,
                            'AreaQuemada_km2_RandomForest' : CantidadPixelesQuemados1.multiply(Area).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_SVM' : CantidadPixelesQuemados2 ,
                            'AreaQuemada_m2_SVM' : CantidadPixelesQuemados2.multiply(Area) ,
                            'AreaQuemada_km2_SVM' : CantidadPixelesQuemados2.multiply(Area).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_MinimumDistance' : CantidadPixelesQuemados3 ,
                            'AreaQuemada_m2_MinimumDistance' : CantidadPixelesQuemados3.multiply(Area) ,
                            'AreaQuemada_km2_MinimumDistance' : CantidadPixelesQuemados3.multiply(Area).divide(1e6) ,
                            
                            'CantidadPixelesQuemados_NaiveBayes' : CantidadPixelesQuemados4 ,
                            'AreaQuemada_m2_NaiveBayes' : CantidadPixelesQuemados4.multiply(Area) ,
                            'AreaQuemada_km2_NaiveBayes' : CantidadPixelesQuemados4.multiply(Area).divide(1e6) ,
                            });
  
  return DiccionarioDatos;
};




var CuentaCoincidenciaPixeles = function(Imagen){
  
  //Como las dos imágenes serán las clasificadas si o si
  //Vamos a dividir ambas imágenes, en los pixeles donde coincidan tendrá valor 1
  //En aquellos en los que no tendrá un valor distinto
  var C1 = Imagen.select('RandomForest').divide(Imagen.select('SVM'));
  var C2 = Imagen.select('RandomForest').divide(Imagen.select('MinimumDistance'));
  var C3 = Imagen.select('RandomForest').divide(Imagen.select('NaiveBayes'));
  var C4 = Imagen.select('SVM').divide(Imagen.select('MinimumDistance'));
  var C5 = Imagen.select('SVM').divide(Imagen.select('NaiveBayes'));
  var C6 = Imagen.select('MinimumDistance').divide(Imagen.select('NaiveBayes'));
  
  var P1 = C1.eq(1);
  var P2 = C2.eq(1);
  var P3 = C3.eq(1);
  var P4 = C4.eq(1);
  var P5 = C5.eq(1);
  var P6 = C6.eq(1);
  
  var S1 = P1.reduceRegion({
              reducer:ee.Reducer.sum(),
              maxPixels:1e12
              }).get('RandomForest');
  //print(S1);
  
  var S2 = P2.reduceRegion({
              reducer:ee.Reducer.sum(),
              maxPixels:1e12
              }).get('RandomForest');
  
  var S3 = P3.reduceRegion({
              reducer:ee.Reducer.sum(),
              maxPixels:1e12
              }).get('RandomForest');
  
  var S4 = P4.reduceRegion({
              reducer:ee.Reducer.sum(),
              maxPixels:1e12
              }).get('SVM');
  
  var S5 = P5.reduceRegion({
              reducer:ee.Reducer.sum(),
              maxPixels:1e12
              }).get('SVM');
  
  
  var S6 = P6.reduceRegion({
              reducer:ee.Reducer.sum(),
              maxPixels:1e12
              }).get('MinimumDistance');
  
  
  
  
  var Co1 = P1.reduceRegion({
              reducer:ee.Reducer.count(),
              maxPixels:1e12
              }).get('RandomForest');
  
  var Co2 = P2.reduceRegion({
              reducer:ee.Reducer.count(),
              maxPixels:1e12
              }).get('RandomForest');
  
  var Co3 = P3.reduceRegion({
              reducer:ee.Reducer.count(),
              maxPixels:1e12
              }).get('RandomForest');
  
  var Co4 = P4.reduceRegion({
              reducer:ee.Reducer.count(),
              maxPixels:1e12
              }).get('SVM');
  
  var Co5 = P5.reduceRegion({
              reducer:ee.Reducer.count(),
              maxPixels:1e12
              }).get('SVM');
  
  
  var Co6 = P6.reduceRegion({
              reducer:ee.Reducer.count(),
              maxPixels:1e12
              }).get('MinimumDistance');
  
  
  var PC1 = ee.Number(S1).divide(ee.Number(Co1)).multiply(100);
  var PC2 = ee.Number(S2).divide(ee.Number(Co2)).multiply(100);
  var PC3 = ee.Number(S3).divide(ee.Number(Co3)).multiply(100);
  var PC4 = ee.Number(S4).divide(ee.Number(Co4)).multiply(100);
  var PC5 = ee.Number(S5).divide(ee.Number(Co5)).multiply(100);
  var PC6 = ee.Number(S6).divide(ee.Number(Co6)).multiply(100);
  
  var Dic = ee.Dictionary({
    '(RF/SVM)[%]' : PC1,
    '(RF/MD)[%]' : PC2,
    '(RF/NB)[%]' : PC3,
    '(SVM/MD)[%]' : PC4,
    '(SVM/NB)[%]' : PC5,
    '(MD/NB)[%]' : PC6
  });
  
  return Imagen.set(Dic);
};





var TodasFunciones = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  var f = function(Imagen){
  
  var ImagenFinal = maskCloudAndShadowsSR(Imagen);
  //Esta funcion requiere que ya tengan la referencia como propiedad
  var ImagenFinal = RHO_Sentinel2Corregido(ImagenFinal);
  var ImagenFinal = NDVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = AVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = Normalized_AVI_Sentinel2(ImagenFinal);
  var ImagenFinal = SCI_Sentinel2(ImagenFinal);
  var ImagenFinal = BAI_Sentinel2(ImagenFinal);
  //var ImagenFinal = dBAI_Sentinel2(ImagenFinal);
  var ImagenFinal = GEMI_Sentinel2(ImagenFinal);
  var ImagenFinal = NBR_Sentinel2(ImagenFinal);
  var ImagenFinal = NDWI_Sentinel2(ImagenFinal);
  var ImagenFinal = NDSI_Sentinel2(ImagenFinal);
  var ImagenFinal = CP_Sentinel2(ImagenFinal);
  

  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_RandomForest(BandasClasificar)(ImagenFinal);
  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_libsvm(BandasClasificar)(ImagenFinal);
  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_minimumDistance(BandasClasificar)(ImagenFinal);
  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_NaiveBayes(BandasClasificar)(ImagenFinal);
  
  
  var ImagenFinal = CuentaPixelesQuemados(ImagenFinal);
  
  var ImagenFinal = CuentaCoincidenciaPixeles(ImagenFinal);
  
  return ImagenFinal;
  };
  
  return f;
};


var TodasFuncionesEntrena = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  var f = function(Imagen){
  
  var ImagenFinal = maskCloudAndShadowsSR(Imagen);
  //Esta funcion requiere que ya tengan la referencia como propiedad
  var ImagenFinal = RHO_Sentinel2Corregido(ImagenFinal);
  var ImagenFinal = NDVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = AVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = Normalized_AVI_Sentinel2(ImagenFinal);
  var ImagenFinal = SCI_Sentinel2(ImagenFinal);
  var ImagenFinal = BAI_Sentinel2(ImagenFinal);
  //var ImagenFinal = dBAI_Sentinel2(ImagenFinal);
  var ImagenFinal = GEMI_Sentinel2(ImagenFinal);
  var ImagenFinal = NBR_Sentinel2(ImagenFinal);
  var ImagenFinal = NDWI_Sentinel2(ImagenFinal);
  var ImagenFinal = NDSI_Sentinel2(ImagenFinal);
  var ImagenFinal = CP_Sentinel2(ImagenFinal);
  
  
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_RandomForest(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_libsvm(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_minimumDistance(BandasClasificar)(ImagenFinal);
  //var ImagenFinal = ClasificaImagen_Sentinel2Corregido_NaiveBayes(BandasClasificar)(ImagenFinal);
  
  
  //var ImagenFinal = CuentaPixelesQuemados(ImagenFinal);
  
  //var ImagenFinal = CuentaCoincidenciaPixeles(ImagenFinal);
  
  return ImagenFinal;
  };
  
  return f;
};



var TodasFuncionesQuemadoTotal = function(Bandas){
  
  var BandasClasificar = ee.List(Bandas);
  
  var f = function(Imagen){
  
  var ImagenFinal = maskCloudAndShadowsSR(Imagen);
  //Esta funcion requiere que ya tengan la referencia como propiedad
  var ImagenFinal = RHO_Sentinel2Corregido(ImagenFinal);
  var ImagenFinal = NDVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = AVI_Sentinel2(ImagenFinal);
  //var ImagenFinal = Normalized_AVI_Sentinel2(ImagenFinal);
  var ImagenFinal = SCI_Sentinel2(ImagenFinal);
  var ImagenFinal = BAI_Sentinel2(ImagenFinal);
  //var ImagenFinal = dBAI_Sentinel2(ImagenFinal);
  var ImagenFinal = GEMI_Sentinel2(ImagenFinal);
  var ImagenFinal = NBR_Sentinel2(ImagenFinal);
  var ImagenFinal = NDWI_Sentinel2(ImagenFinal);
  var ImagenFinal = NDSI_Sentinel2(ImagenFinal);
  //var ImagenFinal = CP_Sentinel2(ImagenFinal);
  
  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_RandomForest_Final(BandasClasificar)(ImagenFinal);
  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_libsvm_Final(BandasClasificar)(ImagenFinal);
  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_minimumDistance_Final(BandasClasificar)(ImagenFinal);
  var ImagenFinal = ClasificaImagen_Sentinel2Corregido_NaiveBayes_Final(BandasClasificar)(ImagenFinal);
  
  
  //var ImagenFinal = CuentaPixelesQuemados(ImagenFinal);
  
  //var ImagenFinal = CuentaCoincidenciaPixeles(ImagenFinal);
  
  return ImagenFinal;
  };
  
  return f;
};




var BC1 = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12']);
var BC2 = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12','NDVI_S2','SCI_S2','BAI_S2','GEMI_S2','NBR_S2','NDWI_S2','NDSI_S2']);
var BC3 = ee.List(['CP1','CP2','CP3','CP4','CP5','CP6','CP7','CP8','CP9','CP10']);
var BC4 = ee.List(['CP1','CP2','CP3']);




//print('Aqui');
//print(ColeccionInteres);
//print('Aqui2');
var FunP = function(Imagen){
  
  var Imagen = ee.Image(Imagen);
  var Propiedad = Imagen.get('PRODUCT_ID');
  
  return Propiedad;
};

//var ListaPDID = ColeccionInteres.toList(40).map(FunP);
//print(ListaPDID);

var resample60 = function(image){
  //https://gis.stackexchange.com/questions/407613/resampling-sentinel-2-bands-reduce-resolution-10m-to-20m-resolution-in-google
  var projection =image.select('B1').projection();
  var bands = image.select('B[1-7]','B8','B9','B8A','B11','B12','SCL','MSK_CLDPRB','MSK_SNWPRB');
  var resample = bands.reproject({
      crs: projection,
      scale: 60
    });
     return resample 
  .copyProperties(image,['system:time_start','system:time_end']);
};


var ExportaTablaResultados = function(Imagen,Geometria,Tile,NIm){
  
  
  //var Geometria = GeometriasTile.get(NIm.toString());
  //print(Geometria);
  
  //Tomamos la imagen
  var Imagen = ee.Image(Imagen);
  
  var GI = ee.Geometry.Polygon(
                      ee.Geometry(
                            Imagen.get('system:footprint')
                            ).coordinates()
                      );
  
  
  
  
  
  var BandasClasificar = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12']);
  var Imagen1 = TodasFunciones(BandasClasificar)(Imagen);
  
  var Dicc1 = ee.Dictionary({
    '(MD/NB)[%]_BO' : Imagen1.get('(MD/NB)[%]'),
    '(RF/MD)[%]_BO' : Imagen1.get('(RF/MD)[%]'),
    '(RF/NB)[%]_BO' : Imagen1.get('(RF/NB)[%]'),
    '(RF/SVM)[%]_BO' : Imagen1.get('(RF/SVM)[%]'),
    '(SVM/MD)[%]_BO' : Imagen1.get('(SVM/MD)[%]'),
    '(SVM/NB)[%]_BO' : Imagen1.get('(SVM/NB)[%]'),
    'AreaQuemada_km2_BAI' : Imagen1.get('AreaQuemada_km2_BAI'),
    'AreaImagen_m2' : Imagen1.get('AreaImagen_m2'),
    'AreaQuemada_km2_MinimumDistance_BO' : Imagen1.get('AreaQuemada_km2_MinimumDistance'),
    'AreaQuemada_km2_NaiveBayes_BO' : Imagen1.get('AreaQuemada_km2_NaiveBayes'),
    'AreaQuemada_km2_RandomForest_BO' : Imagen1.get('AreaQuemada_km2_RandomForest'),
    'AreaQuemada_km2_SVM_BO' : Imagen1.get('AreaQuemada_km2_SVM')
  });
  //CuentaPixelesQuemadosEnGeometria
  if (Geometria !== 0){
    var SubDicc1 = CuentaPixelesQuemadosEnGeometria(Imagen1,Geometria);
    var Dicc1G = ee.Dictionary({
      'AreaQuemada_km2_BAI_G' : SubDicc1.get('AreaQuemada_km2_BAI'),
      'AreaGeometria_m2' : Geometria.area(),
      'AreaQuemada_km2_MinimumDistance_BO_G' : SubDicc1.get('AreaQuemada_km2_MinimumDistance'),
      'AreaQuemada_km2_NaiveBayes_BO_G' : SubDicc1.get('AreaQuemada_km2_NaiveBayes'),
      'AreaQuemada_km2_RandomForest_BO_G' : SubDicc1.get('AreaQuemada_km2_RandomForest'),
      'AreaQuemada_km2_SVM_BO_G' : SubDicc1.get('AreaQuemada_km2_SVM')
    });
  }
  if (Geometria === 0){
    //SubDicc = CuentaPixelesQuemadosEnGeometria(Imagen,Geometria);
    var Dicc1G = ee.Dictionary({
      'AreaQuemada_km2_BAI_G' : 0,
      'AreaGeometria_m2' : 0,
      'AreaQuemada_km2_MinimumDistance_BO_G' : 0,
      'AreaQuemada_km2_NaiveBayes_BO_G' : 0,
      'AreaQuemada_km2_RandomForest_BO_G' : 0,
      'AreaQuemada_km2_SVM_BO_G' : 0
    });
  }
  
  
  
  
  
  
  
  var BandasClasificar2 = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12','NDVI_S2','SCI_S2','BAI_S2','GEMI_S2','NBR_S2','NDWI_S2','NDSI_S2']);
  var Imagen2 = TodasFunciones(BandasClasificar2)(Imagen);
  
  var Dicc2 = ee.Dictionary({
    '(MD/NB)[%]_BOIn' : Imagen2.get('(MD/NB)[%]'),
    '(RF/MD)[%]_BOIn' : Imagen2.get('(RF/MD)[%]'),
    '(RF/NB)[%]_BOIn' : Imagen2.get('(RF/NB)[%]'),
    '(RF/SVM)[%]_BOIn' : Imagen2.get('(RF/SVM)[%]'),
    '(SVM/MD)[%]_BOIn' : Imagen2.get('(SVM/MD)[%]'),
    '(SVM/NB)[%]_BOIn' : Imagen2.get('(SVM/NB)[%]'),
    'AreaQuemada_km2_MinimumDistance_BOIn' : Imagen2.get('AreaQuemada_km2_MinimumDistance'),
    'AreaQuemada_km2_NaiveBayes_BOIn' : Imagen2.get('AreaQuemada_km2_NaiveBayes'),
    'AreaQuemada_km2_RandomForest_BOIn' : Imagen2.get('AreaQuemada_km2_RandomForest'),
    'AreaQuemada_km2_SVM_BOIn' : Imagen2.get('AreaQuemada_km2_SVM')
  });
  
  if (Geometria !== 0){
    var SubDicc2 = CuentaPixelesQuemadosEnGeometria(Imagen2,Geometria);
    var Dicc2G = ee.Dictionary({
      'AreaQuemada_km2_MinimumDistance_BOIn_G' : SubDicc2.get('AreaQuemada_km2_MinimumDistance'),
      'AreaQuemada_km2_NaiveBayes_BOIn_G' : SubDicc2.get('AreaQuemada_km2_NaiveBayes'),
      'AreaQuemada_km2_RandomForest_BOIn_G' : SubDicc2.get('AreaQuemada_km2_RandomForest'),
      'AreaQuemada_km2_SVM_BOIn_G' : SubDicc2.get('AreaQuemada_km2_SVM')
    });
  }
  if (Geometria === 0){
    //SubDicc = CuentaPixelesQuemadosEnGeometria(Imagen,Geometria);
    var Dicc2G = ee.Dictionary({
      'AreaQuemada_km2_MinimumDistance_BOIn_G' : 0,
      'AreaQuemada_km2_NaiveBayes_BOIn_G' : 0,
      'AreaQuemada_km2_RandomForest_BOIn_G' : 0,
      'AreaQuemada_km2_SVM_BOIn_G' : 0
    });
  }
  
  
  
  
  
  
  
  
  
  var BandasClasificar3 = ee.List(['CP1','CP2','CP3','CP4','CP5','CP6','CP7','CP8','CP9','CP10']);
  var Imagen3 = TodasFunciones(BandasClasificar3)(Imagen);
  
  var Dicc3 = ee.Dictionary({
    '(MD/NB)[%]_CP' : Imagen3.get('(MD/NB)[%]'),
    '(RF/MD)[%]_CP' : Imagen3.get('(RF/MD)[%]'),
    '(RF/NB)[%]_CP' : Imagen3.get('(RF/NB)[%]'),
    '(RF/SVM)[%]_CP' : Imagen3.get('(RF/SVM)[%]'),
    '(SVM/MD)[%]_CP' : Imagen3.get('(SVM/MD)[%]'),
    '(SVM/NB)[%]_CP' : Imagen3.get('(SVM/NB)[%]'),
    'AreaQuemada_km2_MinimumDistance_CP' : Imagen3.get('AreaQuemada_km2_MinimumDistance'),
    'AreaQuemada_km2_NaiveBayes_CP' : Imagen3.get('AreaQuemada_km2_NaiveBayes'),
    'AreaQuemada_km2_RandomForest_CP' : Imagen3.get('AreaQuemada_km2_RandomForest'),
    'AreaQuemada_km2_SVM_CP' : Imagen3.get('AreaQuemada_km2_SVM')
  });
  
  if (Geometria !== 0){
    var SubDicc3 = CuentaPixelesQuemadosEnGeometria(Imagen3,Geometria);
    var Dicc3G = ee.Dictionary({
      'AreaQuemada_km2_MinimumDistance_CP_G' : SubDicc3.get('AreaQuemada_km2_MinimumDistance'),
      'AreaQuemada_km2_NaiveBayes_CP_G' : SubDicc3.get('AreaQuemada_km2_NaiveBayes'),
      'AreaQuemada_km2_RandomForest_CP_G' : SubDicc3.get('AreaQuemada_km2_RandomForest'),
      'AreaQuemada_km2_SVM_CP_G' : SubDicc3.get('AreaQuemada_km2_SVM')
    });
  }
  if (Geometria === 0){
    //SubDicc = CuentaPixelesQuemadosEnGeometria(Imagen,Geometria);
    var Dicc3G = ee.Dictionary({
      'AreaQuemada_km2_MinimumDistance_CP_G' : 0,
      'AreaQuemada_km2_NaiveBayes_CP_G' : 0,
      'AreaQuemada_km2_RandomForest_CP_G' : 0,
      'AreaQuemada_km2_SVM_CP_G' : 0
    });
  }
  
  
  
  
  
  
  
  
  var BandasClasificar4 = ee.List(['CP1','CP2','CP3']);
  var Imagen4 = TodasFunciones(BandasClasificar4)(Imagen);
  
  var Dicc4 = ee.Dictionary({
    '(MD/NB)[%]_CP123' : Imagen4.get('(MD/NB)[%]'),
    '(RF/MD)[%]_CP123' : Imagen4.get('(RF/MD)[%]'),
    '(RF/NB)[%]_CP123' : Imagen4.get('(RF/NB)[%]'),
    '(RF/SVM)[%]_CP123' : Imagen4.get('(RF/SVM)[%]'),
    '(SVM/MD)[%]_CP123' : Imagen4.get('(SVM/MD)[%]'),
    '(SVM/NB)[%]_CP123' : Imagen4.get('(SVM/NB)[%]'),
    'AreaQuemada_km2_MinimumDistance_CP123' : Imagen4.get('AreaQuemada_km2_MinimumDistance'),
    'AreaQuemada_km2_NaiveBayes_CP123' : Imagen4.get('AreaQuemada_km2_NaiveBayes'),
    'AreaQuemada_km2_RandomForest_CP123' : Imagen4.get('AreaQuemada_km2_RandomForest'),
    'AreaQuemada_km2_SVM_CP123' : Imagen4.get('AreaQuemada_km2_SVM')
  });
  
  if (Geometria !== 0){
    var SubDicc4 = CuentaPixelesQuemadosEnGeometria(Imagen4,Geometria);
    var Dicc4G = ee.Dictionary({
      'AreaQuemada_km2_MinimumDistance_CP123_G' : SubDicc4.get('AreaQuemada_km2_MinimumDistance'),
      'AreaQuemada_km2_NaiveBayes_CP123_G' : SubDicc4.get('AreaQuemada_km2_NaiveBayes'),
      'AreaQuemada_km2_RandomForest_CP123_G' : SubDicc4.get('AreaQuemada_km2_RandomForest'),
      'AreaQuemada_km2_SVM_CP123_G' : SubDicc4.get('AreaQuemada_km2_SVM')
    });
  }
  if (Geometria === 0){
    //SubDicc = CuentaPixelesQuemadosEnGeometria(Imagen,Geometria);
    var Dicc4G = ee.Dictionary({
      'AreaQuemada_km2_MinimumDistance_CP123_G' : 0,
      'AreaQuemada_km2_NaiveBayes_CP123_G' : 0,
      'AreaQuemada_km2_RandomForest_CP123_G' : 0,
      'AreaQuemada_km2_SVM_CP123_G' : 0
    });
  }
  
  var DiccF = Dicc1.combine(Dicc1G)
              .combine(Dicc2)
              .combine(Dicc2G)
              .combine(Dicc3)
              .combine(Dicc3G)
              .combine(Dicc4)
              .combine(Dicc4G);
  
  
  
  
  var Nombre = 'Tile_' + Tile.toString() + '_Imagen_' + NIm.toString();
  
  var FI = ee.Feature(GI,DiccF);
  var FC = ee.FeatureCollection(FI);
  
  Export.table.toDrive({
    collection : FC,
    description : Nombre,
    folder : 'Tablas Earth Engine',
    fileNamePrefix : Nombre
    });
  
  
  
  return DiccF;
};



var ExportarTablaQuemadoFinal = function(Coleccion,Tile,OpcionBandas){
  
  var Geometria = ee.Geometry.Polygon(
                    ee.Geometry(
                      ee.Image(Coleccion.first()).get('system:footprint')
                    ).coordinates()
                  );
  
  var ImagenMenosUno = ee.Image.constant(-1)
  var ImagenDiez = ee.Image.constant(10)
  
  //var ImagenMenosUno = ee.Image(Coleccion.first())
  //var ImagenDiez = ee.Image(Coleccion.first())
  
  var Func = function(BandasEntrena){
    
    var BandasClasificar = ee.List(BandasEntrena);
    var Col = ee.ImageCollection(Coleccion)
                  .select(['B1','B2','B3','B4','B5','B6','B7','B8','B8A','B9','B11','B12',
                           'SCL','MSK_CLDPRB','MSK_SNWPRB'])//.map(resample60)
                  //.map(TodasFuncionesQuemadoTotal(BandasClasificar));
    
    var FuncionMax = function(actual,previous){
      
      var previous = ee.Image(previous).unmask(ImagenMenosUno)
      var actual = ee.Image(actual).unmask(ImagenMenosUno)
      
      //var actual = ee.Image(resample60(actual))
      var actual = BAI_Sentinel2(RHO_Sentinel2Corregido(maskCloudAndShadowsSR(actual)))//.select('BAI_S2');
      //var actual = BAI_Sentinel2(RHO_Sentinel2Corregido(actual))
      //var actual = TodasFuncionesQuemadoTotal(BandasEntrena)(actual);
      
      return ee.Image(previous).max(actual);
    };
    
    var FuncionMin = function(actual,previous){
      
      var previous = ee.Image(previous).unmask(ImagenDiez)
      var actual = ee.Image(actual).unmask(ImagenDiez)
      
      //var actual = ee.Image(resample60(actual))
      var actual = TodasFuncionesQuemadoTotal(BandasClasificar)(actual)
      
      return ee.Image(previous).min(actual);
    };
    
    var ImagenFinalBAI = ee.Image(Col.iterate(FuncionMax,ImagenMenosUno)).select('BAI_S2');
    //var ImagenFinalBAI = ee.Image(Col.max()).select('BAI_S2');
    var ImagenesFinalClasificadas = ee.Image(
                                    Col.iterate(FuncionMin,ImagenDiez)
                                    ).select('RandomForest','SVM','MinimumDistance','NaiveBayes');
    //var ImagenesFinalClasificadas = ee.Image(Col.select('RandomForest','SVM','MinimumDistance','NaiveBayes').min()).select('RandomForest','SVM','MinimumDistance','NaiveBayes');
    var ImagenAContar = ee.Image([ImagenFinalBAI,ImagenesFinalClasificadas]);
    
    var Diccionario = CuentaPixelesQuemadosEnGeometriaImagenFinal(ImagenAContar,Geometria);
    
    return Diccionario;
  };
  
  
  var CambNom = function(Diccionario,GrupoBandas){
    
    var Dicc = ee.Dictionary(Diccionario);
    
    
    var N1 = 'AreaQuemada_km2_BAI_'+GrupoBandas;
    var N2 = 'AreaQuemada_km2_RandomForest_'+GrupoBandas;
    var N3 = 'AreaQuemada_km2_SVM_'+GrupoBandas;
    var N4 = 'AreaQuemada_km2_MinimumDistance_'+GrupoBandas;
    var N5 = 'AreaQuemada_km2_NaiveBayes_'+GrupoBandas;
    
    var NuevoDiccionario = ee.Dictionary({
      N1 : Dicc.get('AreaQuemada_km2_BAI'),
      N2 : Dicc.get('AreaQuemada_km2_RandomForest'),
      N3 : Dicc.get('AreaQuemada_km2_SVM'),
      N4 : Dicc.get('AreaQuemada_km2_MinimumDistance'),
      N5 : Dicc.get('AreaQuemada_km2_NaiveBayes')
    });
    
    return NuevoDiccionario;
  };
  
  var BandasClasificar1 = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12']);
  var BandasClasificar2 = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12','NDVI_S2','SCI_S2','BAI_S2','GEMI_S2','NBR_S2','NDWI_S2','NDSI_S2']);
  var BandasClasificar3 = ee.List(['CP1','CP2','CP3','CP4','CP5','CP6','CP7','CP8','CP9','CP10']);
  var BandasClasificar4 = ee.List(['CP1','CP2','CP3']);
  
  if (OpcionBandas==='BO'){
    var DF = CambNom(Func(BandasClasificar1),'BO');
    //var DF = ee.Dictionary(D1);
    var Nombre = 'QuemadoFinal_BO_Tile_'+Tile.toString();
  }
  
  if (OpcionBandas==='BOIn'){
    var DF = CambNom(Func(BandasClasificar2),'BOIn');
    //var DF = ee.Dictionary(D2);
    var Nombre = 'QuemadoFinal_BOIn_Tile_'+Tile.toString();
  }
  
  if (OpcionBandas==='CP'){
    var DF = CambNom(Func(BandasClasificar3),'CP');
    //var DF = ee.Dictionary(D3);
    var Nombre = 'QuemadoFinal_CP_Tile_'+Tile.toString();
  }
  
  if (OpcionBandas==='CP123'){
    var DF = CambNom(Func(BandasClasificar4),'CP123');
    //var DF = ee.Dictionary(D4);
    var Nombre = 'QuemadoFinal_CP123_Tile_'+Tile.toString();
  }
  
  
  /*
  var DF = ee.Dictionary(D1).combine(ee.Dictionary(D2))
                            .combine(ee.Dictionary(D3))
                            .combine(ee.Dictionary(D4));
  */
  //print(Geometria);
  //print(F);
  //var FC = 
  
  //var Nombre = 'QuemadoFinal_Tile_'+Tile.toString();
  
  Export.table.toDrive({
    collection : ee.FeatureCollection(ee.Feature(Geometria,DF)),
    description : Nombre,
    folder : 'Tablas Earth Engine',
    fileNamePrefix : Nombre
    });
  
  
  return DF;
};


var ExportarTablaQuemadoFinalMes = function(Coleccion,Tile,OpcionBandas,Mes){
  
  var Geometria = ee.Geometry.Polygon(
                    ee.Geometry(
                      ee.Image(Coleccion.first()).get('system:footprint')
                    ).coordinates()
                  );
  
  var ImagenMenosUno = ee.Image.constant(-1)
  var ImagenDiez = ee.Image.constant(10)
  
  var Func = function(BandasEntrena){
    
    var BandasClasificar = ee.List(BandasEntrena);
    var Col = ee.ImageCollection(Coleccion)
                  .select(['B1','B2','B3','B4','B5','B6','B7','B8','B8A','B9','B11','B12',
                           'SCL','MSK_CLDPRB','MSK_SNWPRB'])//.map(resample60)
                  //.map(TodasFuncionesQuemadoTotal(BandasClasificar));
    
    var FuncionMax = function(actual,previous){
      
      var previous = ee.Image(previous).unmask(ImagenMenosUno)
      var actual = ee.Image(actual).unmask(ImagenMenosUno)
      
      //var actual = ee.Image(resample60(actual))
      var actual = BAI_Sentinel2(RHO_Sentinel2Corregido(maskCloudAndShadowsSR(actual)))//.select('BAI_S2');
      //var actual = BAI_Sentinel2(RHO_Sentinel2Corregido(actual))
      //var actual = TodasFuncionesQuemadoTotal(BandasEntrena)(actual);
      
      
      return ee.Image(previous).max(actual);
    };
    
    var FuncionMin = function(actual,previous){
      
      var previous = ee.Image(previous).unmask(ImagenDiez)
      var actual = ee.Image(actual).unmask(ImagenDiez)
      
      //var actual = ee.Image(resample60(actual))
      var actual = TodasFuncionesQuemadoTotal(BandasClasificar)(actual)
      
      return ee.Image(previous).min(actual);
    };
    
    var ImagenFinalBAI = ee.Image(Col.iterate(FuncionMax,ImagenMenosUno)).select('BAI_S2');
    //var ImagenFinalBAI = ee.Image(Col.max()).select('BAI_S2');
    var ImagenesFinalClasificadas = ee.Image(
                                    Col.iterate(FuncionMin,ImagenDiez)
                                    ).select('RandomForest','SVM','MinimumDistance','NaiveBayes');
    //var ImagenesFinalClasificadas = ee.Image(Col.select('RandomForest','SVM','MinimumDistance','NaiveBayes').min()).select('RandomForest','SVM','MinimumDistance','NaiveBayes');
    var ImagenAContar = ee.Image([ImagenFinalBAI,ImagenesFinalClasificadas]);
    
    var Diccionario = CuentaPixelesQuemadosEnGeometriaImagenFinal(ImagenAContar,Geometria);
    
    return Diccionario;
  };
  
  
  var CambNom = function(Diccionario,GrupoBandas){
    
    var Dicc = ee.Dictionary(Diccionario);
    
    
    var N1 = 'AreaQuemada_km2_BAI_'+GrupoBandas;
    var N2 = 'AreaQuemada_km2_RandomForest_'+GrupoBandas;
    var N3 = 'AreaQuemada_km2_SVM_'+GrupoBandas;
    var N4 = 'AreaQuemada_km2_MinimumDistance_'+GrupoBandas;
    var N5 = 'AreaQuemada_km2_NaiveBayes_'+GrupoBandas;
    
    var NuevoDiccionario = ee.Dictionary({
      N1 : Dicc.get('AreaQuemada_km2_BAI'),
      N2 : Dicc.get('AreaQuemada_km2_RandomForest'),
      N3 : Dicc.get('AreaQuemada_km2_SVM'),
      N4 : Dicc.get('AreaQuemada_km2_MinimumDistance'),
      N5 : Dicc.get('AreaQuemada_km2_NaiveBayes')
    });
    
    return NuevoDiccionario;
  };
  
  var BandasClasificar1 = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12']);
  var BandasClasificar2 = ee.List(['B2','B3','B4','B5','B6','B7','B8','B8A','B11','B12','NDVI_S2','SCI_S2','BAI_S2','GEMI_S2','NBR_S2','NDWI_S2','NDSI_S2']);
  var BandasClasificar3 = ee.List(['CP1','CP2','CP3','CP4','CP5','CP6','CP7','CP8','CP9','CP10']);
  var BandasClasificar4 = ee.List(['CP1','CP2','CP3']);
  
  if (OpcionBandas==='BO'){
    var DF = CambNom(Func(BandasClasificar1),'BO');
    //var DF = ee.Dictionary(D1);
    var Nombre = 'QuemadoFinal_'+Mes+'_'+'BO_Tile_'+Tile.toString();
  }
  
  if (OpcionBandas==='BOIn'){
    var DF = CambNom(Func(BandasClasificar2),'BOIn');
    //var DF = ee.Dictionary(D2);
    var Nombre = 'QuemadoFinal_'+Mes+'_'+'BOIn_Tile_'+Tile.toString();
  }
  
  if (OpcionBandas==='CP'){
    var DF = CambNom(Func(BandasClasificar3),'CP');
    //var DF = ee.Dictionary(D3);
    var Nombre = 'QuemadoFinal_'+Mes+'_'+'CP_Tile_'+Tile.toString();
  }
  
  if (OpcionBandas==='CP123'){
    var DF = CambNom(Func(BandasClasificar4),'CP123');
    //var DF = ee.Dictionary(D4);
    var Nombre = 'QuemadoFinal_'+Mes+'_'+'CP123_Tile_'+Tile.toString();
  }
  
  
  /*
  var DF = ee.Dictionary(D1).combine(ee.Dictionary(D2))
                            .combine(ee.Dictionary(D3))
                            .combine(ee.Dictionary(D4));
  */
  //print(Geometria);
  //print(F);
  //var FC = 
  
  //var Nombre = 'QuemadoFinal_Tile_'+Tile.toString();
  
  Export.table.toDrive({
    collection : ee.FeatureCollection(ee.Feature(Geometria,DF)),
    description : Nombre,
    folder : 'Tablas Earth Engine',
    fileNamePrefix : Nombre
    });
  
  
  return DF;
};



//Definimos las colecciones

var ColeccionInteres = Sentinel2_2A.filterBounds(ZonaIncendio1)
                                      .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

var CInt = Sentinel2_2A.filterBounds(ZonaIncendio1)
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

var ExportarMes2019 = function(T,ColInt){
  
  
  var Col1 = ColInt.filterDate(
      '2019-01-01','2019-02-01'
    )
  var Col2 = ColInt.filterDate(
      '2019-02-01','2019-03-01'
    )
  var Col3 = ColInt.filterDate(
      '2019-03-01','2019-04-01'
    )
  var Col4 = ColInt.filterDate(
      '2019-04-01','2019-05-01'
    )
  var Col5 = ColInt.filterDate(
      '2019-05-01','2019-06-01'
    )
  var Col6 = ColInt.filterDate(
      '2019-06-01','2019-07-01'
    )
  var Col7 = ColInt.filterDate(
      '2019-07-01','2019-08-01'
    )
  var Col8 = ColInt.filterDate(
      '2019-08-01','2019-09-01'
    )
  var Col9 = ColInt.filterDate(
      '2019-09-01','2019-10-01'
    )
  var Col10 = ColInt.filterDate(
      '2019-10-01','2019-11-01'
    )
  var Col11 = ColInt.filterDate(
      '2019-11-01','2019-12-01'
    )
  var Col12 = ColInt.filterDate(
      '2019-12-01','2020-01-01'
    )
  
  var M1 = 'Enero'
  var M2 = 'Febrero'
  var M3 = 'Marzo'
  var M4 = 'Abril'
  var M5 = 'Mayo'
  var M6 = 'Junio'
  var M7 = 'Julio'
  var M8 = 'Agosto'
  var M9 = 'Septiembre'
  var M10 = 'Octubre'
  var M11 = 'Noviembre'
  var M12 = 'Diciembre'
  
  var SF = function(Col,Mes){
    
    ExportarTablaQuemadoFinalMes(Col,T,'BO',Mes)
    ExportarTablaQuemadoFinalMes(Col,T,'BOIn',Mes)
    //ExportarTablaQuemadoFinalMes(Col,T,'CP',Mes)
    //ExportarTablaQuemadoFinalMes(Col,T,'CP123',Mes)
    
    return null
  };
  
  var F = function(C,M){
    
    ee.Algorithms.If({
      condition : ee.Number(C.size()).gte(ee.Number(1)),
      trueCase : SF(C,M),
      falseCase : 1
      })
    
    return null
  };
  
  
  F(Col1,M1)
  F(Col2,M2)
  F(Col3,M3)
  F(Col4,M4)
  F(Col5,M5)
  F(Col6,M6)
  F(Col7,M7)
  F(Col8,M8)
  F(Col9,M9)
  F(Col10,M10)
  F(Col11,M11)
  F(Col12,M12)
  
  return null
};


var ExportarMes2020 = function(T,ColInt){
  
  var Col1 = ColInt.filterDate(
      '2020-01-01','2020-02-01'
    )
  var Col2 = ColInt.filterDate(
      '2020-02-01','2020-03-01'
    )
  var Col3 = ColInt.filterDate(
      '2020-03-01','2020-04-01'
    )
  var Col4 = ColInt.filterDate(
      '2020-04-01','2020-05-01'
    )
  var Col5 = ColInt.filterDate(
      '2020-05-01','2020-06-01'
    )
  var Col6 = ColInt.filterDate(
      '2020-06-01','2020-07-01'
    )
  var Col7 = ColInt.filterDate(
      '2020-07-01','2020-08-01'
    )
  var Col8 = ColInt.filterDate(
      '2020-08-01','2020-09-01'
    )
  var Col9 = ColInt.filterDate(
      '2020-09-01','2020-10-01'
    )
  var Col10 = ColInt.filterDate(
      '2020-10-01','2020-11-01'
    )
  var Col11 = ColInt.filterDate(
      '2020-11-01','2020-12-01'
    )
  var Col12 = ColInt.filterDate(
      '2020-12-01','2021-01-01'
    )
  
  var M1 = 'Enero'
  var M2 = 'Febrero'
  var M3 = 'Marzo'
  var M4 = 'Abril'
  var M5 = 'Mayo'
  var M6 = 'Junio'
  var M7 = 'Julio'
  var M8 = 'Agosto'
  var M9 = 'Septiembre'
  var M10 = 'Octubre'
  var M11 = 'Noviembre'
  var M12 = 'Diciembre'
  
  var SF = function(Col,Mes){
    
    ExportarTablaQuemadoFinalMes(Col,T,'BO',Mes)
    ExportarTablaQuemadoFinalMes(Col,T,'BOIn',Mes)
    //ExportarTablaQuemadoFinalMes(Col,T,'CP',Mes)
    //ExportarTablaQuemadoFinalMes(Col,T,'CP123',Mes)
    
    return null
  };
  
  var F = function(C,M){
    
    ee.Algorithms.If({
      condition : ee.Number(C.size()).gte(ee.Number(1)),
      trueCase : SF(C,M),
      falseCase : 1
      })
    
    return null
  };
  
  
  F(Col1,M1)
  F(Col2,M2)
  F(Col3,M3)
  F(Col4,M4)
  F(Col5,M5)
  F(Col6,M6)
  F(Col7,M7)
  F(Col8,M8)
  F(Col9,M9)
  F(Col10,M10)
  F(Col11,M11)
  F(Col12,M12)
  
  return null
};

var ExportarTodoMes2019 = function(NMes){
  
  var C1 = Sentinel2_2A.filterBounds(ZonaIncendio1)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C2 = Sentinel2_2A.filterBounds(ZonaIncendio2)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C3 = Sentinel2_2A.filterBounds(ZonaIncendio3)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C4 = Sentinel2_2A.filterBounds(ZonaIncendio4)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C5 = Sentinel2_2A.filterBounds(ZonaIncendio5)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C6 = Sentinel2_2A.filterBounds(ZonaIncendio6)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  if (NMes === 1){
    ExportarMes2019(1,C1)
  }
  
  if (NMes === 2){
    ExportarMes2019(2,C2)
  }
  
  if (NMes === 3){
    ExportarMes2019(3,C3)
  }
  
  if (NMes === 4){
    ExportarMes2019(4,C4)
  }
  
  if (NMes === 5){
    ExportarMes2019(5,C5)
  }
  
  if (NMes === 6){
    ExportarMes2019(6,C6)
  }
  
  return null
};



var ExportarTodoMes2020 = function(NMes){
  
  var C1 = Sentinel2_2A.filterBounds(ZonaIncendio1)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C2 = Sentinel2_2A.filterBounds(ZonaIncendio2)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C3 = Sentinel2_2A.filterBounds(ZonaIncendio3)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C4 = Sentinel2_2A.filterBounds(ZonaIncendio4)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C5 = Sentinel2_2A.filterBounds(ZonaIncendio5)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  var C6 = Sentinel2_2A.filterBounds(ZonaIncendio6)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          );
  
  
  
  if (NMes === 1){
    ExportarMes2020(1,C1)
  }
  
  if (NMes === 2){
    ExportarMes2020(2,C2)
  }
  
  if (NMes === 3){
    ExportarMes2020(3,C3)
  }
  
  if (NMes === 4){
    ExportarMes2020(4,C4)
  }
  
  if (NMes === 5){
    ExportarMes2020(5,C5)
  }
  
  if (NMes === 6){
    ExportarMes2020(6,C6)
  }
  
  
  
  return null
};


var ExportarAno2020 = function(){
  
  var C1 = Sentinel2_2A.filterBounds(ZonaIncendio1)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        );
  
  var C2 = Sentinel2_2A.filterBounds(ZonaIncendio2)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        );
  
  var C3 = Sentinel2_2A.filterBounds(ZonaIncendio3)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        );
  
  var C4 = Sentinel2_2A.filterBounds(ZonaIncendio4)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        );
  
  var C5 = Sentinel2_2A.filterBounds(ZonaIncendio5)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        );
  
  var C6 = Sentinel2_2A.filterBounds(ZonaIncendio6)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        );
  
  ExportarTablaQuemadoFinal(C1,1,'BO')
  ExportarTablaQuemadoFinal(C1,1,'BOIn')
  
  ExportarTablaQuemadoFinal(C2,2,'BO')
  ExportarTablaQuemadoFinal(C2,2,'BOIn')
  
  ExportarTablaQuemadoFinal(C3,3,'BO')
  ExportarTablaQuemadoFinal(C3,3,'BOIn')
  
  ExportarTablaQuemadoFinal(C4,4,'BO')
  ExportarTablaQuemadoFinal(C4,4,'BOIn')
  
  ExportarTablaQuemadoFinal(C5,5,'BO')
  ExportarTablaQuemadoFinal(C5,5,'BOIn')
  
  ExportarTablaQuemadoFinal(C6,6,'BO')
  ExportarTablaQuemadoFinal(C6,6,'BOIn')
  
  return null
};


var ExportarAno2019 = function(){
  
  var C1 = Sentinel2_2A.filterBounds(ZonaIncendio1)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        );
  
  var C2 = Sentinel2_2A.filterBounds(ZonaIncendio2)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        );
  
  var C3 = Sentinel2_2A.filterBounds(ZonaIncendio3)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        );
  
  var C4 = Sentinel2_2A.filterBounds(ZonaIncendio4)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        );
  
  var C5 = Sentinel2_2A.filterBounds(ZonaIncendio5)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        );
  
  var C6 = Sentinel2_2A.filterBounds(ZonaIncendio6)
                        .filter(
                            ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                          )
                          .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        );
  
  ExportarTablaQuemadoFinal(C1,1,'BO')
  ExportarTablaQuemadoFinal(C1,1,'BOIn')
  
  ExportarTablaQuemadoFinal(C2,2,'BO')
  ExportarTablaQuemadoFinal(C2,2,'BOIn')
  
  ExportarTablaQuemadoFinal(C3,3,'BO')
  ExportarTablaQuemadoFinal(C3,3,'BOIn')
  
  ExportarTablaQuemadoFinal(C4,4,'BO')
  ExportarTablaQuemadoFinal(C4,4,'BOIn')
  
  ExportarTablaQuemadoFinal(C5,5,'BO')
  ExportarTablaQuemadoFinal(C5,5,'BOIn')
  
  ExportarTablaQuemadoFinal(C6,6,'BO')
  ExportarTablaQuemadoFinal(C6,6,'BOIn')
  
  return null
};




////////////////////////
//Aqui guardo los exports por mes y anuales

//ExportarTodoMes2019()
//ExportarTodoMes2020()

//ExportarAno2019()
//ExportarAno2020()

//Aqui se acaban

///////////////////////






print(ColeccionInteres.size());
var Tile = 1;
var Mes = 'Enero'



//Defino una funcion para descargarme las imagenes que me interesen
var DescargarImagenBAI = function(Coleccion) {
  
  var Imagen = ee.Image(Coleccion.first())
  var ImagenMenosUno = ee.Image.constant(-1)
  var Geometria = ee.Geometry.Polygon(
                      ee.Geometry( 
                          //Sentinel2_2A.filterBounds(ZonaIncendio1)
                          //            .first().get('system:footprint')
                          Imagen.get('system:footprint')
                      ).coordinates()
                  )
  
  var TF = function(Imagen){
    
    var ImagenFinal = ee.Image(Imagen);
    var ImagenFinal = maskCloudAndShadowsSR(ImagenFinal);
    var ImagenFinal = RHO_Sentinel2Corregido(ImagenFinal);
    var ImagenFinal = BAI_Sentinel2(ImagenFinal);
    
    return ImagenFinal
  }
  
  var Col = ee.ImageCollection(Coleccion).map(TF)
  
  var FuncionMax = function(actual,previous){
      
      var previous = ee.Image(previous).unmask(ImagenMenosUno)
      var actual = ee.Image(actual).unmask(ImagenMenosUno)
      
      //var actual = ee.Image(resample60(actual))
      var actual = BAI_Sentinel2(RHO_Sentinel2Corregido(maskCloudAndShadowsSR(actual)))//.select('BAI_S2');
      //var actual = BAI_Sentinel2(RHO_Sentinel2Corregido(actual))
      //var actual = TodasFuncionesQuemadoTotal(BandasEntrena)(actual);
      
      return ee.Image(previous).max(actual);
    };
  
  
  var Imagen = ee.Image(Col.iterate(FuncionMax,ImagenMenosUno)).select('BAI_S2');
  
  return Imagen;
};



var Imagen = ee.Image(ColeccionInteres.first())


var Geometria2 = ee.Geometry.Polygon(
                      ee.Geometry( 
                          //Sentinel2_2A.filterBounds(ZonaIncendio1)
                          //            .first().get('system:footprint')
                          Imagen.get('system:footprint')
                      ).coordinates()
                  )

var Imagen2 = TodasFunciones(BC1)(Imagen)
print(Imagen2)


var DescargarImagenBAI2 = function(Imagen,Geometria) {
  
  var Bandas = ['BAI_S2'];
  var Min = 0.79
  var Max = 0.8
  
  var I = Imagen.getThumbURL({
                      //image : Imagen.getInfo('ID') ,
                      //version : Imagen.getInfo('version') ,
                      bands : Bandas ,
                      min : Min ,
                      max : Max ,
                      region : Geometria ,
                      //gain : 1 ,
                      //bias : 0 ,
                      //gamma : 3.5 ,
                      //palette : Paleta ,
                      opacity : 1 ,
                      format : 'png' ,
                      maxPixels : 1e13 ,
                      //maxDimension : 30 ,
                      dimensions : '1080x1080'
                      });
  return print(I);
};

//DescargarImagenBAI2(DescargarImagenBAI(ColeccionInteres),Geometria2)

//ExportarMes2019(Tile)
//ExportarMes2020(Tile)
//print(ExportarTablaQuemadoFinal(ColeccionInteres,Tile,'BO'));
//print(ExportarTablaQuemadoFinal(ColeccionInteres,Tile,'BOIn'));
//print(ExportarTablaQuemadoFinal(ColeccionInteres,Tile,'CP'));
//print(ExportarTablaQuemadoFinal(ColeccionInteres,Tile,'CP123'));

//print(ExportarTablaQuemadoFinalMes(ColeccionInteres,Tile,'BO',Mes));
//print(ExportarTablaQuemadoFinalMes(ColeccionInteres,Tile,'BOIn',Mes));
//print(ExportarTablaQuemadoFinalMes(ColeccionInteres,Tile,'CP',Mes));
//print(ExportarTablaQuemadoFinalMes(ColeccionInteres,Tile,'CP123',Mes));


var ColPru = ColeccionInteres.map(TodasFuncionesQuemadoTotal(BC1))

var ImagenPrueba = ee.Image(ColPru.max())

var IMenos = ee.Image.constant(-1)
var FIter = function(a,p){
  
  var a = ee.Image(a).unmask(IMenos)
  var p = ee.Image(p).unmask(IMenos)
  
  return a.max(p)
}
var First = ee.Image(ColPru.first())
var ImagenPrueba2 = ee.Image(ColPru.iterate(FIter,IMenos))


Map.addLayer(Imagen2,{
                          bands : ['B4' , 'B3' , 'B2'] ,
                          min : 200 ,
                          max : 2500,
                          },
                          'P1')

Map.addLayer(Imagen2,{
                          bands : ['BAI_S2'] ,
                          min : 0.75 ,
                          max : 0.85,
                          },
                          'P2')

Map.addLayer(Imagen2,{
                          bands : ['RandomForest'] ,
                          min : 0 ,
                          max : 3,
                          palette: PaletaClasificar
                          },
                          'P3')


/*
Map.addLayer(ImagenPrueba2,{
                          bands : ['BAI_S2'] ,
                          min : 0.75 ,
                          max : 0.85,
                          },
                          'P3')
*/


var GeometriasTile = {
  'T1_0' : 0,
  'T1_1' : 0,
  'T1_2' : 0,
  'T1_3' : 0,
  'T1_4' : 0,
  'T1_5' : 0,
  'T1_6' : 0,
  'T1_7' : GeometriasIncendiosT1_7,
  'T1_8' : GeometriasIncendiosT1_8,
  'T1_9' : GeometriasIncendiosT1_9,
  'T1_10' : GeometriasIncendiosT1_10,
  'T1_11' : GeometriasIncendiosT1_11,
  'T1_12' : GeometriasIncendiosT1_12,
  'T1_13' : GeometriasIncendiosT1_13,
  'T1_14' : 0,
  'T1_15' : 0,
  'T1_16' : 0,
  'T1_17' : 0,
  'T1_18' : 0,
  'T1_19' : 0,
  'T1_20' : 0,
  'T1_21' : 0,
  'T1_22' : 0,
  'T1_23' : 0,
  'T1_24' : 0,
  'T1_25' : 0,
  'T1_26' : 0,
  'T2_0' : 0,
  'T2_1' : 0,
  'T2_2' : 0,
  'T2_3' : 0,
  'T2_4' : 0,
  'T2_5' : 0,
  'T2_6' : 0,
  'T2_7' : 0,
  'T2_8' : 0,
  'T2_9' : 0,
  'T2_10' : 0,
  'T2_11' : 0,
  'T2_12' : 0,
  'T2_13' : 0,
  'T2_14' : 0,
  'T2_15' : 0,
  'T2_16' : 0,
  'T2_17' : 0,
  'T2_18' : 0,
  'T2_19' : 0,
  'T2_20' : 0,
  'T2_21' : 0,
  'T2_22' : 0,
  'T3_0' : 0,
  'T3_1' : 0,
  'T3_2' : 0,
  'T3_3' : 0,
  'T3_4' : 0,
  'T3_5' : 0,
  'T3_6' : 0,
  'T3_7' : 0,
  'T3_8' : 0,
  'T3_9' : 0,
  'T3_10' : 0,
  'T3_11' : 0,
  'T3_12' : 0,
  'T3_13' : 0,
  'T3_14' : 0,
  'T3_15' : 0,
  'T3_16' : 0,
  'T3_17' : 0,
  'T3_18' : 0,
  'T3_19' : 0,
  'T3_20' : 0,
  'T3_21' : 0,
  'T3_22' : 0,
  'T3_23' : 0,
  'T3_24' : 0,
  'T3_25' : 0,
  'T3_26' : 0,
  'T3_27' : 0,
  'T4_0' : 0,
  'T4_1' : 0,
  'T4_2' : 0,
  'T4_3' : 0,
  'T4_4' : 0,
  'T4_5' : 0,
  'T4_6' : 0,
  'T4_7' : 0,
  'T4_8' : 0,
  'T4_9' : 0,
  'T4_10' : 0,
  'T4_11' : 0,
  'T4_12' : 0,
  'T4_13' : 0,
  'T4_14' : 0,
  'T4_15' : 0,
  'T4_16' : 0,
  'T4_17' : 0,
  'T4_18' : 0,
  'T4_19' : 0,
  'T4_20' : 0,
  'T4_21' : 0,
  'T4_22' : 0,
  'T4_23' : 0,
  'T4_24' : 0,
  'T4_25' : 0,
  'T4_26' : 0,
  'T4_27' : 0,
  'T4_28' : 0,
  'T4_29' : 0,
  'T4_30' : 0,
  'T4_31' : 0,
  'T4_32' : 0,
  'T5_0' : 0,
  'T5_1' : 0,
  'T5_2' : 0,
  'T5_3' : 0,
  'T5_4' : 0,
  'T5_5' : 0,
  'T5_6' : 0,
  'T5_7' : 0,
  'T5_8' : 0,
  'T5_9' : 0,
  'T5_10' : 0,
  'T5_11' : 0,
  'T5_12' : 0,
  'T5_13' : 0,
  'T5_14' : 0,
  'T5_15' : 0,
  'T5_16' : 0,
  'T5_17' : 0,
  'T5_18' : 0,
  'T5_19' : 0,
  'T5_20' : 0,
  'T5_21' : 0,
  'T5_22' : 0,
  'T5_23' : 0,
  'T5_24' : 0,
  'T5_25' : 0,
  'T6_0' : 0,
  'T6_1' : 0,
  'T6_2' : 0,
  'T6_3' : 0,
  'T6_4' : 0,
  'T6_5' : 0,
  'T6_6' : 0,
  'T6_7' : 0,
  'T6_8' : 0,
  'T6_9' : 0,
  'T6_10' : 0,
  'T6_11' : 0,
  'T6_12' : 0,
  'T6_13' : 0,
  'T6_14' : 0,
  'T6_15' : 0,
  'T6_16' : 0,
  'T6_17' : 0,
  'T6_18' : 0,
  'T6_19' : 0,
  'T6_20' : 0,
  'T6_21' : 0,
  'T6_22' : 0,
  'T6_23' : 0,
  'T6_24' : 0,
  'T6_25' : 0,
  'T6_26' : 0,
  'T6_27' : 0,
  'T6_28' : 0,
  'T6_29' : 0,
  'T6_30' : 0,
  'T6_31' : 0,
};



var Numero = 0;
var ImagenADescargar = ee.Image(
                            ColeccionInteres.toList(1
                                                  ,Numero
                                                  ).get(0)
                            );

/*
var Caso1 = ImagenADescargar.select('B1').reduceRegion({reducer:ee.Reducer.count(),maxPixels:1e12})
var Caso2 = ImagenADescargar.select('B2').reduceRegion({reducer:ee.Reducer.count(),maxPixels:1e12})
var Caso3 = ImagenADescargar.select('B11').reduceRegion({reducer:ee.Reducer.count(),maxPixels:1e12})

var Caso4 = ee.Image(resample60(ImagenADescargar)).select('B2')
.reduceRegion({reducer:ee.Reducer.count(),maxPixels:1e12})

print(ee.Number(Caso1.get('B1')).sqrt())
print(ee.Number(Caso2.get('B2')).sqrt())
print(ee.Number(Caso3.get('B11')).sqrt())
print(ee.Number(Caso4.get('B2')).sqrt())
*/

//var ImagenDescargar = TodasFunciones(ImagenADescargar);

//print(ImagenDescargar);
//print(CuentaPixelesQuemadosEnGeometria(ImagenDescargar,0));
//print(ImagenDescargar.get('AreaImagen_m2'));

//var n = 'T' + Tile.toString() + '_' + Numero.toString();


/*
var Dicc = ExportaTablaResultados(
                  ImagenADescargar,
                  GeometriasTile.T1_0,
                  Tile,
                  Numero
                  );
print(Dicc);
*/

//NImagenes
//26,22,27,32,25,31




///////////////////////////
var FuncionExportarGrupoT1 = function(){
  
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio1)
                                      .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(27,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T1_0,1,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T1_1,1,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T1_2,1,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T1_3,1,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T1_4,1,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T1_5,1,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T1_6,1,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T1_7,1,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T1_8,1,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T1_9,1,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T1_10,1,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T1_11,1,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T1_12,1,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T1_13,1,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T1_14,1,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T1_15,1,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T1_16,1,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T1_17,1,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T1_18,1,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T1_19,1,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T1_20,1,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T1_21,1,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T1_22,1,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T1_23,1,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T1_24,1,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T1_25,1,25);

  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,GeometriasTile.T1_26,1,26);
  
  
  return null;
};

var FuncionExportarGrupoT2 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio2)
                                      .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(23,0);
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T2_0,2,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T2_1,2,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T2_2,2,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T2_3,2,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T2_4,2,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T2_5,2,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T2_6,2,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T2_7,2,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T2_8,2,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T2_9,2,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T2_10,2,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T2_11,2,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T2_12,2,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T2_13,2,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T2_14,2,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T2_15,2,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T2_16,2,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T2_17,2,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T2_18,2,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T2_19,2,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T2_20,2,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T2_21,2,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T2_22,2,22);
  
  return null;
};

var FuncionExportarGrupoT3 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio3)
                                      .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(28,0);
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T3_0,3,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T3_1,3,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T3_2,3,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T3_3,3,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T3_4,3,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T3_5,3,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T3_6,3,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T3_7,3,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T3_8,3,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T3_9,3,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T3_10,3,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T3_11,3,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T3_12,3,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T3_13,3,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T3_14,3,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T3_15,3,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T3_16,3,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T3_17,3,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T3_18,3,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T3_19,3,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T3_20,3,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T3_21,3,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T3_22,3,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T3_23,3,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T3_24,3,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T3_25,3,25);

  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,GeometriasTile.T3_26,3,26);

  var Im27 = CL.get(27);
  ExportaTablaResultados(Im27,GeometriasTile.T3_27,3,27);
  
  return null;
};

var FuncionExportarGrupoT4 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio4)
                                      .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(33,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T4_0,4,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T4_1,4,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T4_2,4,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T4_3,4,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T4_4,4,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T4_5,4,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T4_6,4,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T4_7,4,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T4_8,4,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T4_9,4,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T4_10,4,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T4_11,4,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T4_12,4,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T4_13,4,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T4_14,4,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T4_15,4,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T4_16,4,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T4_17,4,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T4_18,4,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T4_19,4,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T4_20,4,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T4_21,4,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T4_22,4,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T4_23,4,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T4_24,4,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T4_25,4,25);

  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,GeometriasTile.T4_26,4,26);

  var Im27 = CL.get(27);
  ExportaTablaResultados(Im27,GeometriasTile.T4_27,4,27);

  var Im28 = CL.get(28);
  ExportaTablaResultados(Im28,GeometriasTile.T4_28,4,28);

  var Im29 = CL.get(29);
  ExportaTablaResultados(Im29,GeometriasTile.T4_29,4,29);

  var Im30 = CL.get(30);
  ExportaTablaResultados(Im30,GeometriasTile.T4_30,4,30);

  var Im31 = CL.get(31);
  ExportaTablaResultados(Im31,GeometriasTile.T4_31,4,31);

  var Im32 = CL.get(32);
  ExportaTablaResultados(Im32,GeometriasTile.T4_32,4,32);
  
  return null;
};

var FuncionExportarGrupoT5 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio5)
                                      .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(26,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T5_0,5,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T5_1,5,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T5_2,5,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T5_3,5,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T5_4,5,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T5_5,5,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T5_6,5,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T5_7,5,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T5_8,5,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T5_9,5,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T5_10,5,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T5_11,5,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T5_12,5,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T5_13,5,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T5_14,5,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T5_15,5,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T5_16,5,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T5_17,5,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T5_18,5,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T5_19,5,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T5_20,5,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T5_21,5,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T5_22,5,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T5_23,5,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T5_24,5,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T5_25,5,25);
  
  return null;
};

var FuncionExportarGrupoT6 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio6)
                                      .filterDate(
                                        '2020-01-01',
                                        '2021-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(32,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T6_0,6,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T6_1,6,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T6_2,6,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T6_3,6,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T6_4,6,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T6_5,6,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T6_6,6,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T6_7,6,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T6_8,6,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T6_9,6,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T6_10,6,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T6_11,6,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T6_12,6,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T6_13,6,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T6_14,6,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T6_15,6,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T6_16,6,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T6_17,6,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T6_18,6,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T6_19,6,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T6_20,6,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T6_21,6,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T6_22,6,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T6_23,6,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T6_24,6,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T6_25,6,25);

  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,GeometriasTile.T6_26,6,26);

  var Im27 = CL.get(27);
  ExportaTablaResultados(Im27,GeometriasTile.T6_27,6,27);

  var Im28 = CL.get(28);
  ExportaTablaResultados(Im28,GeometriasTile.T6_28,6,28);

  var Im29 = CL.get(29);
  ExportaTablaResultados(Im29,GeometriasTile.T6_29,6,29);

  var Im30 = CL.get(30);
  ExportaTablaResultados(Im30,GeometriasTile.T6_30,6,30);

  var Im31 = CL.get(31);
  ExportaTablaResultados(Im31,GeometriasTile.T6_31,6,31);
  
  return null;
};
////////////////////////////


var FuncionExportarGrupoT1_2019 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio1)
                                      .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(23,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,0,1,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,0,1,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,0,1,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,0,1,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,0,1,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,0,1,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,0,1,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,0,1,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,0,1,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,0,1,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,0,1,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,0,1,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,0,1,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,0,1,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,0,1,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,0,1,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,0,1,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,0,1,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,0,1,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,0,1,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,0,1,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,0,1,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,0,1,22);
  
  
  return null;
};

var FuncionExportarGrupoT2_2019 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio2)
                                      .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(21,0);
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,0,2,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,0,2,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,0,2,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,0,2,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,0,2,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,0,2,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,0,2,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,0,2,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,0,2,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,0,2,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,0,2,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,0,2,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,0,2,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,0,2,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,0,2,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,0,2,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,0,2,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,0,2,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,0,2,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,0,2,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,0,2,20);
  
  return null;
};

var FuncionExportarGrupoT3_2019 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio3)
                                      .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(29,0);
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,0,3,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,0,3,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,0,3,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,0,3,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,0,3,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,0,3,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,0,3,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,0,3,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,0,3,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,0,3,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,0,3,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,0,3,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,0,3,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,0,3,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,0,3,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,0,3,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,0,3,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,0,3,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,0,3,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,0,3,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,0,3,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,0,3,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,0,3,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,0,3,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,0,3,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,0,3,25);

  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,0,3,26);

  var Im27 = CL.get(27);
  ExportaTablaResultados(Im27,0,3,27);
  
  var Im27 = CL.get(28);
  ExportaTablaResultados(Im28,0,3,28);
  
  return null;
};

var FuncionExportarGrupoT4_2019 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio4)
                                      .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(33,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T4_0,4,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T4_1,4,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T4_2,4,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T4_3,4,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T4_4,4,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T4_5,4,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T4_6,4,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T4_7,4,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T4_8,4,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T4_9,4,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T4_10,4,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T4_11,4,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T4_12,4,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T4_13,4,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T4_14,4,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T4_15,4,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T4_16,4,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T4_17,4,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T4_18,4,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T4_19,4,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T4_20,4,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T4_21,4,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T4_22,4,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T4_23,4,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T4_24,4,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T4_25,4,25);

  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,GeometriasTile.T4_26,4,26);

  var Im27 = CL.get(27);
  ExportaTablaResultados(Im27,GeometriasTile.T4_27,4,27);

  var Im28 = CL.get(28);
  ExportaTablaResultados(Im28,GeometriasTile.T4_28,4,28);
  
  return null;
};

var FuncionExportarGrupoT5_2019 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio5)
                                      .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(28,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T5_0,5,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T5_1,5,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T5_2,5,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T5_3,5,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T5_4,5,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T5_5,5,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T5_6,5,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T5_7,5,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T5_8,5,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T5_9,5,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T5_10,5,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T5_11,5,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T5_12,5,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T5_13,5,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T5_14,5,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T5_15,5,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T5_16,5,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T5_17,5,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T5_18,5,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T5_19,5,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T5_20,5,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T5_21,5,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T5_22,5,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T5_23,5,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T5_24,5,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T5_25,5,25);
  
  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,GeometriasTile.T5_25,5,26);
  
  var Im27 = CL.get(27);
  ExportaTablaResultados(Im27,GeometriasTile.T5_25,5,27);
  
  return null;
};

var FuncionExportarGrupoT6_2019 = function(){
  
  var CI = Sentinel2_2A.filterBounds(ZonaIncendio6)
                                      .filterDate(
                                        '2019-01-01',
                                        '2020-01-01'
                                        )
                                      .filter(
                                              ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE',15)
                                              );

  
  var CL = CI.toList(29,0);
  
  
  var Im0 = CL.get(0);
  ExportaTablaResultados(Im0,GeometriasTile.T6_0,6,0);

  var Im1 = CL.get(1);
  ExportaTablaResultados(Im1,GeometriasTile.T6_1,6,1);

  var Im2 = CL.get(2);
  ExportaTablaResultados(Im2,GeometriasTile.T6_2,6,2);

  var Im3 = CL.get(3);
  ExportaTablaResultados(Im3,GeometriasTile.T6_3,6,3);

  var Im4 = CL.get(4);
  ExportaTablaResultados(Im4,GeometriasTile.T6_4,6,4);

  var Im5 = CL.get(5);
  ExportaTablaResultados(Im5,GeometriasTile.T6_5,6,5);

  var Im6 = CL.get(6);
  ExportaTablaResultados(Im6,GeometriasTile.T6_6,6,6);

  var Im7 = CL.get(7);
  ExportaTablaResultados(Im7,GeometriasTile.T6_7,6,7);

  var Im8 = CL.get(8);
  ExportaTablaResultados(Im8,GeometriasTile.T6_8,6,8);

  var Im9 = CL.get(9);
  ExportaTablaResultados(Im9,GeometriasTile.T6_9,6,9);

  var Im10 = CL.get(10);
  ExportaTablaResultados(Im10,GeometriasTile.T6_10,6,10);

  var Im11 = CL.get(11);
  ExportaTablaResultados(Im11,GeometriasTile.T6_11,6,11);

  var Im12 = CL.get(12);
  ExportaTablaResultados(Im12,GeometriasTile.T6_12,6,12);

  var Im13 = CL.get(13);
  ExportaTablaResultados(Im13,GeometriasTile.T6_13,6,13);

  var Im14 = CL.get(14);
  ExportaTablaResultados(Im14,GeometriasTile.T6_14,6,14);

  var Im15 = CL.get(15);
  ExportaTablaResultados(Im15,GeometriasTile.T6_15,6,15);

  var Im16 = CL.get(16);
  ExportaTablaResultados(Im16,GeometriasTile.T6_16,6,16);

  var Im17 = CL.get(17);
  ExportaTablaResultados(Im17,GeometriasTile.T6_17,6,17);

  var Im18 = CL.get(18);
  ExportaTablaResultados(Im18,GeometriasTile.T6_18,6,18);

  var Im19 = CL.get(19);
  ExportaTablaResultados(Im19,GeometriasTile.T6_19,6,19);

  var Im20 = CL.get(20);
  ExportaTablaResultados(Im20,GeometriasTile.T6_20,6,20);

  var Im21 = CL.get(21);
  ExportaTablaResultados(Im21,GeometriasTile.T6_21,6,21);

  var Im22 = CL.get(22);
  ExportaTablaResultados(Im22,GeometriasTile.T6_22,6,22);

  var Im23 = CL.get(23);
  ExportaTablaResultados(Im23,GeometriasTile.T6_23,6,23);

  var Im24 = CL.get(24);
  ExportaTablaResultados(Im24,GeometriasTile.T6_24,6,24);

  var Im25 = CL.get(25);
  ExportaTablaResultados(Im25,GeometriasTile.T6_25,6,25);

  var Im26 = CL.get(26);
  ExportaTablaResultados(Im26,GeometriasTile.T6_26,6,26);

  var Im27 = CL.get(27);
  ExportaTablaResultados(Im27,GeometriasTile.T6_27,6,27);

  var Im28 = CL.get(28);
  ExportaTablaResultados(Im28,GeometriasTile.T6_28,6,28);
  
  
  return null;
};


//FuncionExportarGrupoT1();
//FuncionExportarGrupoT2();
//FuncionExportarGrupoT3();
//FuncionExportarGrupoT4();
//FuncionExportarGrupoT5();
//FuncionExportarGrupoT6();


//FuncionExportarGrupoT1_2019();
//FuncionExportarGrupoT2_2019();
//FuncionExportarGrupoT3_2019();
//FuncionExportarGrupoT4_2019();
//FuncionExportarGrupoT5_2019();
FuncionExportarGrupoT6_2019();

//var ColeccionInteres = ee.ImageCollection(ImagenADescargar);

//var ColeccionADescargar = ColeccionInteres.map(TodasFunciones);


//Defino una funcion para descargarme las imagenes que me interesen
var DescargarImagen = function(Imagen,Bandas,Min,Max,Paleta) {
  
  var I = Imagen.getThumbURL({
                      //image : Imagen.getInfo('ID') ,
                      //version : Imagen.getInfo('version') ,
                      bands : Bandas ,
                      min : Min ,
                      max : Max ,
                      region : ee.Geometry.Polygon(
                                                    ee.Geometry( 
                                                          //Sentinel2_2A.filterBounds(ZonaIncendio1)
                                                          //            .first().get('system:footprint')
                                                          Imagen.get('system:footprint')
                                                      ).coordinates()
                                                  ) ,
                      //gain : 1 ,
                      //bias : 0 ,
                      //gamma : 3.5 ,
                      //palette : Paleta ,
                      opacity : 1 ,
                      format : 'png' ,
                      maxPixels : 1e13 ,
                      //maxDimension : 30 ,
                      dimensions : '2560x2560'
                      });
  return print(I);
};

//DescargarImagen(ImagenDescargar,['CP1','CP2','CP3'],-1.7,1.7);


//var ColeccionADescargar = Col_2020;
/*
var ImagenDescargar = ee.Image(
                  ColeccionADescargar.toList(ColeccionADescargar.size(),0)
                            .get(1
                            )
                            );
*/

/*print('El área Quemada Final es');
print(ee.Number(
          ImagenDescargar.get('CantidadPixelesQuemadosFinal')
              ).multiply(400)
              .divide(1e6)
        );
*/
//Esto es para exportar el print de arriba



//print(ColeccionADescargar);
//print('Esta');
//print(ImagenDescargar);
//print(ImagenDescargar.get('MatrizConfusion'));
//print(ee.List(ImagenDescargar.get('system:footprint')));

//var ImagenDescargar = RHO_Sentinel2Corregido(ImagenADescargar);
//var ImagenDescargar = BAI_Sentinel2(ImagenDescargar);

var ImagenDescargar = TodasFunciones(BC1)(ImagenADescargar);

//print(ImagenADescargar);
//print(ImagenDescargar.sampleRegions(geometry));

var ExportaDatosPunto = function(nimagen){
  
  var Imagen = ee.Image(
                            ColeccionInteres.toList(1
                                                  ,nimagen
                                                  ).get(0)
                            );
  var Fecha = ee.Dictionary({'Fecha':Imagen.get('system:index')})
  
  
  var Imagen1 = TodasFunciones(BC1)(Imagen)
  
  var FC1 = Imagen1.sampleRegions(ValidacionRoca).set(Fecha);

  
  var Nombre = 'CurvaEspectralPunto_BO_Imagen_' + nimagen.toString();
  
  Export.table.toDrive({
    collection : FC1,
    description : Nombre,
    folder : 'Tablas Earth Engine',
    fileNamePrefix : Nombre
    });
  
  
  var Imagen2 = TodasFunciones(BC2)(Imagen)
  
  var FC2 = Imagen2.sampleRegions(ValidacionRoca).set(Fecha);

  
  var Nombre = 'CurvaEspectralPunto_BOIn_Imagen_' + nimagen.toString();
  
  Export.table.toDrive({
    collection : FC2,
    description : Nombre,
    folder : 'Tablas Earth Engine',
    fileNamePrefix : Nombre
    });
  
  
  
  
  var Imagen3 = TodasFunciones(BC3)(Imagen)
  
  var FC3 = Imagen3.sampleRegions(ValidacionRoca).set(Fecha);

  
  var Nombre = 'CurvaEspectralPunto_CP_Imagen_' + nimagen.toString();
  
  Export.table.toDrive({
    collection : FC3,
    description : Nombre,
    folder : 'Tablas Earth Engine',
    fileNamePrefix : Nombre
    });
  
  
  
  
  var Imagen4 = TodasFunciones(BC4)(Imagen)
  
  var FC4 = Imagen4.sampleRegions(ValidacionRoca).set(Fecha);

  
  var Nombre = 'CurvaEspectralPunto_CP123_Imagen_' + nimagen.toString();
  
  Export.table.toDrive({
    collection : FC4,
    description : Nombre,
    folder : 'Tablas Earth Engine',
    fileNamePrefix : Nombre
    });
  
  
  
  
  return null
};

var FuncionExportarTodosJuntos = function(){
  
  ExportaDatosPunto(0);
  ExportaDatosPunto(1);
  ExportaDatosPunto(2);
  ExportaDatosPunto(3);
  ExportaDatosPunto(4);
  ExportaDatosPunto(5);
  ExportaDatosPunto(6);
  ExportaDatosPunto(7);
  ExportaDatosPunto(8);
  ExportaDatosPunto(9);
  ExportaDatosPunto(10);
  ExportaDatosPunto(11);
  ExportaDatosPunto(12);
  ExportaDatosPunto(13);
  ExportaDatosPunto(14);
  ExportaDatosPunto(15);
  ExportaDatosPunto(16);
  ExportaDatosPunto(17);
  ExportaDatosPunto(18);
  ExportaDatosPunto(19);
  ExportaDatosPunto(20);
  ExportaDatosPunto(21);
  ExportaDatosPunto(22);
  ExportaDatosPunto(23);
  ExportaDatosPunto(24);
  ExportaDatosPunto(25);
  ExportaDatosPunto(26);
  
  return null
};

//FuncionExportarTodosJuntos();

Map.addLayer(ImagenDescargar, {
                          bands : ['B4' , 'B3' , 'B2'] ,
                          min : 200 ,
                          max : 2500
                          } ,
                          'RGB');




Map.addLayer(ImagenDescargar, {
                          bands : ['BAI_S2'] ,
                          min : 0.79 ,
                          max : 0.85 ,
                          palette : PaletaBAI
                          } ,
                          'BAI');

/*
Map.addLayer(ImagenDescargar, {
                          bands : ['MinimumDistance'] ,
                          min : 0 ,
                          max : 4,
                          palette : PaletaClasificar
                          } ,
                          'RandomForest');

Map.addLayer(ImagenDescargar, {
                          bands : ['CP1','CP2','CP3'] ,
                          min : -1.7 ,
                          max : 1.7,
                          //palette : PaletaClasificar
                          } ,
                          'CP123');
*/



/*
Map.addLayer(ee.Geometry(ColeccionADescargar.first().get('system:footprint')), {
                          bands : ['B4' , 'B3' , 'B2'] ,
                          min : 200 ,
                          max : 2500
                          } ,
                          'RGB_F');*/



var ContadorImagenQuemadaFinal = function(ColeccionAnual){
  
  //Se espera que ya se haya obtenido la imagen final
  //Cogemos la imagen
  var Coleccion = ee.ImageCollection(ColeccionAnual);
  var ImagenFinal = ee.Image(Coleccion.first().get('ImagenQuemada'));
  //Cogemos la footprint()
  var Footprint = ee.Geometry(
                          Coleccion.first().get('system:footprint')
                          );
  
  //Definimos la funcion especial
  var CuentaFinal = function(Imagen){
      
    //Para contar los pixeles debemos definir un reductor, en este caso el siguiente
    var ContadorPixeles = ee.Reducer.autoHistogram({
                                maxBuckets : 20000,
                                minBucketWidth : 0.001
                                //maxRaw : 
                                });
    //Dado que este reductor devuelve un array despues tendremos que trabajar con este resultado
    //El array tiene la siguiente forma
    //Valor
    //Conteo
    
    //Pasamo la imagen a imagen ee
    var ImagenAContar = ImagenFinal.select('dBAI_S2');
    
    var ConteoCadaBanda = ImagenAContar.reduceRegion({
                                    reducer : ContadorPixeles ,
                                    geometry : ee.Geometry.Polygon(
                                                      Footprint.coordinates()
                                                    ) ,
                                    scale : 20 ,
                                    //3 arguments unneeded
                                    bestEffort : true ,
                                    maxPixels : 1e13 
                                    //tileScale : NoSe
                                    });
    //Esta Variable es un diccionario con cada banda como clave del diccionario.
    //A nosostros nos interesa aquellos valores del BAI por ejemplo mayores a 0.8
    
    var ArrayDatos = ee.Array(ConteoCadaBanda.get('dBAI_S2'));
    //var ArrayDatos = ee.Array(ConteoCadaBanda.get('RandomForest'));
    var Valores = ArrayDatos.slice(1,0,1);//Los datos estan en N filas 2 columnas por lo que elegimos
    var Cuentas = ArrayDatos.slice(1,1,2);//el eje 1 en el slice
    //Debemos crear una máscara que nos quite de las cuentas aquellos puntos con valores menores a 0.8
    var ValorIncendioBAI = ee.Number(0.7);
    //var ValorIncendioBAI = ee.Number(0);
    var PosicionesMayores = Valores.gte(ValorIncendioBAI);
    //var PosicionesMayores = Valores.eq(ValorIncendioBAI);
    var Mascara = PosicionesMayores.eq(1);
    var CuentasPixelesQuemados = Cuentas.mask(Mascara);
    
    //Para Poder sumar todos los elementos necesitamos pasarlo a lista
    var ListaCuentasPixelesQuemados = CuentasPixelesQuemados.toList();
    //Definimos el sumatorio
    var Sumatorio = function(N,N0){
      //var n = ee.Algorithms.If(N,N,ee.Number(0));
      var n = ee.List(N).get(0);
      //var n0 = ee.Algorithms.If(N0,N0,ee.Number(0));
      var N1 = ee.Number(n).add(ee.Number(N0));
      return N1;
      };
    //Iteramos en la lista para que nos sume todos los pixeles incendiados
    var CantidadPixelesQuemados = ee.Number(ListaCuentasPixelesQuemados.iterate(Sumatorio,ee.Number(0)));
    
    var DiccionarioDatos = ee.Dictionary({
                            'CantidadPixelesQuemadosFinal' : CantidadPixelesQuemados ,
                            'AreaQuemada_m2_Final' : CantidadPixelesQuemados.multiply(400) ,
                            'AreaQuemada_km2_Final' : CantidadPixelesQuemados.multiply(400).divide(1e6)
                            });
    
    return Imagen.set(DiccionarioDatos);
  };
  
  var Coleccion = Coleccion.map(CuentaFinal);
  
  return Coleccion;
};






var ExportarImagenAsset = function(Imagen){
  
  var Task = Export.image.toAsset({
                      image : Imagen ,
                      description : 'Exporta' ,
                      assetId : '1' ,
                      dimensions : '2560x2560' ,
                      region : ee.Geometry.Polygon(
                                                    ee.Geometry(
                                                          Imagen.get('system:footprint')
                                                      ).coordinates()
                                                  ) ,
                      //scale : 20 ,
                      maxPixels : 1e13
                      });
  
  return Task;
};

//ExportarImagenAsset(ImagenDescargar);



//DescargarImagen(ReferenciaBAI_S2(ColeccionADescargar),['B4','B3','B2'],200,2500,PaletaClasificar);


//Para exportar sacar los datos de forma comoda, vamos a crear una funcion
//que genera una geometria y guarda una feature con los pixeles quemados como propiedades

var TablaPuntosQuemados = function(ColeccionImagenes,Geometria){
  
  var Coleccion = ee.ImageCollection(ColeccionImagenes);
  var Feature = ee.Feature(Geometria);
  var DiccionarioPropiedades = ee.Dictionary({});
  //Pasamos la coleccion a Lista:
  var ColeccionLista = Coleccion.toList(Coleccion.size(),0);
  
  var IndiceColeccion = function(Imagen){
    var Indice = ee.String(ColeccionLista.indexOf(ee.Image(Imagen)));
    return Indice;
  };
  
  var PixelesQuemadosImagen = function(Imagen){
    var PixelesQuemados = ee.Number(ee.Image(Imagen).get('CantidadPixelesQuemados'));
    return PixelesQuemados;
  };
  
  var Fechas = function(Imagen){
    var Fecha = ee.Date(ee.Image(Imagen).get('system:time_start'));
    return Fecha;
  };
  
  var ListaIndices = ColeccionLista.map(IndiceColeccion);
  var ListaPixeles = ColeccionLista.map(PixelesQuemadosImagen);
  var ListaFechas = ColeccionLista.map(Fechas);
  
  var F = function(Indice){
    return ee.String('Fecha_').cat(ee.String(Indice));
  };
  
  var ListaKeysFechas = ListaIndices.map(F);
  
  var Diccionario1 = ee.Dictionary.fromLists(ListaIndices,ListaPixeles);
  var Diccionario2 = ee.Dictionary.fromLists(ListaKeysFechas,ListaFechas);
  var Diccionario = Diccionario1.combine(Diccionario2);
  
  var FeatureExportar = Feature.setMulti(Diccionario);
  
  
  return ee.Feature(FeatureExportar);
};








/*

var Tile1 = ee.Geometry(
            Sentinel2_2A.filterBounds(ZonaIncendio1)
                        .first()
                        .get('system:footprint')
                        );
                        
Map.addLayer(Tile1,{color:'purple'},'1');

print(Tile1);


var Tile2 = ee.Geometry(
            Sentinel2_2A.filterBounds(ZonaIncendio2)
                        .first()
                        .get('system:footprint')
                        );
                        
Map.addLayer(Tile2,{color:'purple'},'2');

print(Tile2);

var Tile3 = ee.Geometry(
            Sentinel2_2A.filterBounds(ZonaIncendio3)
                        .first()
                        .get('system:footprint')
                        );
                        
Map.addLayer(Tile3,{color:'purple'},'3');

print(Tile3);

var Tile4 = ee.Geometry(
            Sentinel2_2A.filterBounds(ZonaIncendio4)
                        .first()
                        .get('system:footprint')
                        );
                        
Map.addLayer(Tile4,{color:'purple'},'4');

print(Tile4);

var Tile5 = ee.Geometry(
            Sentinel2_2A.filterBounds(ZonaIncendio5)
                        .first()
                        .get('system:footprint')
                        );
                        
Map.addLayer(Tile5,{color:'purple'},'5');

print(Tile5);

var Tile6 = ee.Geometry(
            Sentinel2_2A.filterBounds(ZonaIncendio6)
                        .first()
                        .get('system:footprint')
                        );
                        
Map.addLayer(Tile6,{color:'purple'},'6');

print(Tile6);

*/


var TablaAngulosSolar = function(ColeccionImagenes,Geometria){
  
  var Coleccion = ee.ImageCollection(ColeccionImagenes);
  var Feature = ee.Feature(Geometria);
  var DiccionarioPropiedades = ee.Dictionary({});
  //Pasamos la coleccion a Lista:
  var ColeccionLista = Coleccion.toList(Coleccion.size(),0);
  
  var IndiceColeccion = function(Imagen){
    var Indice = ee.String(ColeccionLista.indexOf(ee.Image(Imagen)));
    return Indice;
  };
  
  
  var PorcentajeNubes = function(Imagen){
    var Fecha = ee.Number(ee.Image(Imagen).get('CLOUDY_PIXEL_PERCENTAGE'));
    return Fecha;
  };
  
  var AnguloSolar = function(Imagen){
    var Fecha = ee.Number(ee.Image(Imagen).get('MEAN_SOLAR_AZIMUTH_ANGLE'));
    return Fecha;
  };
  
  var AnguloSol = function(Imagen){
    var Fecha = ee.Number(ee.Image(Imagen).get('MEAN_INCIDENCE_AZIMUTH_ANGLE_B1'));
    return Fecha;
  };
  
  var ListaIndices = ColeccionLista.map(IndiceColeccion);
  var ListaNubes = ColeccionLista.map(PorcentajeNubes);
  var ListaAnguloSolar = ColeccionLista.map(AnguloSolar);
  var ListaAnguloSol = ColeccionLista.map(AnguloSol);
  
  var Diccionario1 = ee.Dictionary.fromLists(ListaIndices,ListaAnguloSolar);
  var Diccionario2 = ee.Dictionary.fromLists(ListaIndices,ListaNubes);
  var Diccionario4 = ee.Dictionary.fromLists(ListaIndices,ListaAnguloSol);
  
  var Fechas = function(Imagen){
    var Fecha = ee.Date(ee.Image(Imagen).get('system:time_start'));
    return Fecha;
  };
  var ListaFechas = ColeccionLista.map(Fechas);
  
  var F = function(Indice){
    return ee.String('Fecha_').cat(ee.String(Indice));
  };
  
  var ListaKeysFechas = ListaIndices.map(F);
  var Diccionario3 = ee.Dictionary.fromLists(ListaKeysFechas,ListaFechas);
  
  var FeatureExportar = Feature.setMulti(Diccionario2);
  
  
  return ee.Feature(FeatureExportar);
};



var TF = function(Imagen){
  var NI = RHO_Sentinel2Corregido(Imagen);
  var NI = NDVI_Sentinel2(NI);
  //var NI = AVI_Sentinel2(NI);
  //var NI = Normalized_AVI_Sentinel2(NI);
  var NI = SCI_Sentinel2(NI);
  var NI = BAI_Sentinel2(NI);
  //var NI = dBAI_Sentinel2(NI);
  var NI = GEMI_Sentinel2(NI);
  var NI = NBR_Sentinel2(NI);
  var NI = NDWI_Sentinel2(NI);
  var NI = NDSI_Sentinel2(NI);
  var NI = CP_Sentinel2(NI);
  return NI;
}



var ImagenEntrenamiento2 = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');

var ImagenEntrenamiento2 = TF(ImagenEntrenamiento2);

var ImagenEntrenamiento2 = ClasificaImagen_Sentinel2Corregido_minimumDistance(BC1)(ImagenEntrenamiento2)

  
var PuntosEntrenamiento = ee.Image(ImagenEntrenamiento2).sampleRegions({
                                              collection : ee.FeatureCollection(
                                                            [Incendio,Vegetacion,ZonaSeca,Roca]
                                                            ) ,
                                              properties : ['Clase']
                                              });
print(PuntosEntrenamiento)
print('1')
print(ImagenEntrenamiento2);
Map.addLayer(ImagenEntrenamiento2,{
                bands : ['B4','B3','B2'] ,
                min : 200 ,
                max : 2500 ,
                //palette : PaletaBAI
                },
                'Entrenamiento');

/*

Map.addLayer(ImagenEntrenamiento,{
                bands : ['BAI_S2'] ,
                min : 0 ,
                max : 1 ,
                palette : PaletaBAI
                },
                'EntrenamientoB');


Map.addLayer(ImagenEntrenamiento,{
                bands : ['CP1','CP2','CP3'] ,
                min : -1.7 ,
                max : 1.7 ,
                //palette : PaletaClasificar
                },
                'EntrenamientoCP');

*/


var DescargarImagen2 = function(Imagen,Bandas,Min,Max,Paleta) {
  
  var Geometria = ee.Geometry.Polygon(
                                       ee.Geometry( 
                                              //Sentinel2_2A.filterBounds(ZonaIncendio1)
                                              //            .first().get('system:footprint')
                                              Imagen.get('system:footprint')
                                              ).coordinates()
                                      );
  
  /*
  var Geometria = ee.Geometry.Polygon(
                                       ee.Geometry( 
                                              Sentinel2_2A.filterBounds(ZonaIncendio6)
                                                          .first().get('system:footprint')
                                              ).coordinates()
                                      );
  */
  //var Geometria = Incendio;
  //var Geometria = Vegetacion;
  //var Geometria = ZonaSeca;
  //var Geometria = Roca;
  
  var I = Imagen.getThumbURL({
                      //image : Imagen.getInfo('ID') ,
                      //version : Imagen.getInfo('version') ,
                      bands : Bandas ,
                      min : Min ,
                      max : Max ,
                      region : Geometria ,
                      //gain : 1 ,
                      //bias : 0 ,
                      //gamma : 3.5 ,
                      //palette : Paleta ,
                      opacity : 1 ,
                      format : 'png' ,
                      maxPixels : 1e13 ,
                      //maxDimension : 30 ,
                      dimensions : '2560x2560'
                      });
  return print(I);
};


//DescargarImagen2(maskCloudAndShadowsSR(ImagenEntrenamiento),['B4','B3','B2'],200,2500,PaletaBAI);


//DescargarImagen2(ee.Image(ImagenDescargar.get('ImagenQuemada')),['dBAI_S2'],0.698,0.699,PaletaBAI);

/*

var T1 = ee.Geometry.Polygon(Tile1.coordinates());
var T2 = ee.Geometry.Polygon(Tile2.coordinates());
var T3 = ee.Geometry.Polygon(Tile3.coordinates());
var T4 = ee.Geometry.Polygon(Tile4.coordinates());
var T5 = ee.Geometry.Polygon(Tile5.coordinates());
var T6 = ee.Geometry.Polygon(Tile6.coordinates());



var QuemadoZona1Modis = Modis_Burned_Area.filterBounds(T1)
                                          .filterDate('2020-01-01','2021-01-01');
print(QuemadoZona1Modis);


var ContadorQuemadoModis = function(ColeccionAnual , Tile){
  //Para evitar contar varias veces el mismo pixel, vamos a reducir la coleccion por
  //aquellos pixeles que hagan máximo el burndate
  var Col = ee.ImageCollection(ColeccionAnual);
  var AreaQuemada = Col.max();
  //Esta es una imagen que tiene el valor máximo de cada banda
  var ContadorPixeles = ee.Reducer.autoHistogram({
                                  maxBuckets : 20000 ,
                                  minBucketWidth : 0.001
                                  });
  //El contador nos devuelve un array de la forma
  //Valor
  //Conteo
  //Pasamos la imagen final a imagen y seleccionamos la banda que nos interesa
  var ImagenAContar = AreaQuemada.select('BurnDate');
  //Contamos la imagen
  var ConteoCadaBanda = ImagenAContar.reduceRegion({
                                          reducer : ContadorPixeles ,
                                          geometry : Tile ,
                                          scale : 500 ,
                                          maxPixels : 1e13
                                          });
  //Esta variable es un diccionario con cada banda como clave
  //Pasamos a array y cogemos la banda que queremos
  var ArrayDatos = ee.Array(ConteoCadaBanda.get('BurnDate'));
  var Valores = ArrayDatos.slice(1,0,1);
  var Cuentas = ArrayDatos.slice(1,1,2);
  //Creamos la mascara
  var PosicionesMayores = Valores.gte(1);
  var Mascara = PosicionesMayores.eq(1);
  var CuentasPixelesQuemados = Cuentas.mask(Mascara);
  //Pasamos a lista para poder sumar
  var ListaCuentasPixelesQuemados = CuentasPixelesQuemados.toList();
  //Definimos el sumatorio
  var Sumatorio = function(N,N0){
    var n = ee.List(N).get(0);
    var N1 = ee.Number(n).add(ee.Number(N0));
    return N1;
  };
  //Iteramos para que nos sume todos los pixeles incendiados
  var CantidadPixelesQuemados = ee.Number(
                            ListaCuentasPixelesQuemados.iterate(Sumatorio,ee.Number(0))
                            );
  var AreaQuemadaTotal = CantidadPixelesQuemados.multiply(2.5e5).divide(1e6);
  
  return print(AreaQuemadaTotal);
};

*/

var PaletaMeses = [
'000000','ff0000','ff8100','ffd400','9dff00','00ff2b','00ff89','00ffdc','00adff','002bff','b400ff',
'ffffff'
];



/*
print('Area Imagen Tile');
print(T1.area().divide(1e6));
print('Area Modis');
ContadorQuemadoModis(QuemadoZona1Modis,T1);
ContadorQuemadoModis(QuemadoZona1Modis,T2);
ContadorQuemadoModis(QuemadoZona1Modis,T3);
ContadorQuemadoModis(QuemadoZona1Modis,T4);
ContadorQuemadoModis(QuemadoZona1Modis,T5);
ContadorQuemadoModis(QuemadoZona1Modis,T6);


Map.addLayer(QuemadoZona1Modis,{bands : ['BurnDate'] , min:1,max:366,palette:PaletaMeses},'MODIS');
*/
/*
print('Area Quemada MODIS Sin superposicion');
var QZM19 = Modis_Burned_Area.filterBounds(T1)
                             .filterDate('2019-01-01','2020-01-01');
ContadorQuemadoModis(QZM19,AreaMedir);
var QZM20 = Modis_Burned_Area.filterBounds(T1)
                             .filterDate('2020-01-01','2021-01-01');
ContadorQuemadoModis(QZM20,AreaMedir);
//Area Total: 65515.3889403456 km^2
*/


/*
var ImagenEntrenamiento = ee.Image.load('COPERNICUS/S2_SR/20200731T071619_20200731T074109_T37LEE');

var ImagenEntrenamiento = TodasFuncionesEntrena(BC1)(ImagenEntrenamiento);
Export.table.toDrive({
  collection : ImagenEntrenamiento.sampleRegions(
              {collection : ee.FeatureCollection([
                  ee.Feature(Incendio),
                  ee.Feature(Vegetacion),
                  ee.Feature(ZonaSeca),
                  ee.Feature(Roca)
                ]),
                scale : 20
              }),
  description : 'Dataset_Entrenamiento',
  folder : 'Tablas Earth Engine',
  fileNamePrefix : 'DatosEntrenamientoFirmas'
})
*/

//print(ImagenEntrenamiento);
